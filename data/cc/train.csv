code,review
"@@ -595,8 +595,10 @@ namespace Kratos array_1d<double, 3> b = ZeroVector(3); b[0] = 1.0; - const array_1d<double, 3> c = MathUtils<double>::CrossProduct(a, b); - const array_1d<double, 3> d = MathUtils<double>::UnitCrossProduct(a, b); + array_1d<double, 3> c, d; + + MathUtils<double>::CrossProduct(c, b, a); + MathUtils<double>::UnitCrossProduct(d, b, a); KRATOS_CHECK_EQUAL(c[2], 2.0); KRATOS_CHECK_EQUAL(d[2], 1.0); ",I assumed that for CrossProduct the values were inverted as well... Is that right?
"@@ -22,8 +22,13 @@ For internal use only; no backwards-compatibility guarantees.  +from __future__ import absolute_import + import sys import traceback +from builtins import next +from builtins import object +from builtins import zip import six ","I think we should we avoid `import six` for consistency with the approach followed elsewhere. What do you think, @RobbeSneyders ? Looks like we are using `six.reraise` in a few places and `six.text_type` in apiclient.py."
"@@ -25,13 +25,16 @@ module View def should_render_revenue? revenue = @tile.revenue_to_render + # special case: city with multi-revenue - no choice but to draw separate revenue + return true if revenue.any? { |r| !r.is_a?(Numeric) } + return false if revenue.empty? return false if revenue.first.is_a?(Numeric) && (@tile.cities + @tile.towns).one? return false if revenue.uniq.size > 1 - return false if @tile.cities.sum(&:slots) < 3 && @tile.stops.size == 2 + return false if @tile.cities.sum(&:slots) < 3 && (@tile.cities + @tile.towns).size == 2 true end ","we call cities + towns . size a lot, maybe make a helper method on tiles"
"@@ -947,6 +947,7 @@ out: D_ERROR(pool DF_UUID event %d failed: rc %d\n, DP_UUID(svc->ps_uuid), src, rc); daos_prop_fini(&prop); +#endif } static void ",This will be removed.
"@@ -160,6 +160,11 @@ func (r *routeBuilder) profileHandler() (request.Handler, error) { return middleware.Wrap(h, backendMiddleware(r.cfg, r.authenticator, r.ratelimitStore, profile.MonitoringMap)...) } +func (r *routeBuilder) firehoseLogHandler() (request.Handler, error) { + h := firehose.Handler(r.batchProcessor, r.authenticator) + return middleware.Wrap(h, firehoseMiddleware(r.cfg, intake.MonitoringMap)...) +} + func (r *routeBuilder) backendIntakeHandler() (request.Handler, error) { requestMetadataFunc := emptyRequestMetadata if r.cfg.AugmentEnabled { ",nit: `firehoseLogHandler` vs. `firehoseMiddleware` looks like a naming inconsistency? (`log` is not used anywhere else).
"@@ -416,7 +416,8 @@ class GradeEntryFormsController < ApplicationController end end - #If the request is a post type and the abort flag is down (operation can continue) + # If the request is a post type and the abort flag is down + # (operation can continue) if request.post? && !abort_upload grades_file = params[:upload][:grades_file] begin ",Trailing whitespace detected.
"@@ -40,6 +40,8 @@ import org.sonar.plugins.java.api.semantic.Symbol; public class BytecodeCompleter implements JavaSymbol.Completer { + public static final int ASM_API_VERSION = Opcodes.ASM7_EXPERIMENTAL; + private Symbols symbols; private final ParametrizedTypeCache parametrizedTypeCache; private final SquidClassLoader classLoader; ",Confirmed the issue on SQ side.
"@@ -359,6 +359,8 @@ function annotate(fn, strictDi, name) { * * {@link auto.$provide#service service(class)} - registers a **constructor function**, `class` * that will be wrapped in a **service provider** object, whose `$get` property will instantiate * a new object using the given constructor function. + * * {@link auto.$provide#decorator decorator(name)} - registers a **service decorator** with the + * {@link auto.$injector $injector}, `name` the name of the service to decorate. * * See the individual methods for more information and examples. */ ","service decorator is not correct, as not only services can be decorated. You should call it **decorator function**. In the function signature, the decorator fn is also missing: decorator(name, decoratorFn)"
"@@ -158,6 +158,8 @@ def get_supported(versions=None, noarch=False): abis.append('none') + arches = [] + if not noarch: arch = get_platform() if sys.platform == 'darwin': ",Renaming this variable `arch` and flipping the values/logic in the surrounding code would make this a bit less confusing. Double negatives FTL where avoidable
"@@ -641,8 +641,10 @@ public class DoFnOperator<InputT, OutputT> @Override public final void processElement(StreamRecord<WindowedValue<InputT>> streamRecord) { checkInvokeStartBundle(); + long oldHold = keyCoder != null ? keyedStateInternals.minWatermarkHoldMs() : -1L; doFnRunner.processElement(streamRecord.getValue()); checkInvokeFinishBundleByCount(); + emitWatermarkIfHoldChanged(oldHold); } @Override ",Is this required on every element? I'd rather trigger this only if we set / remove a hold.
"@@ -81,7 +81,7 @@ feature 'LOA1 Single Sign On' do it 'user can view and confirm personal key during sign up', :js do allow(FeatureManagement).to receive(:prefill_otp_codes?).and_return(true) user = create(:user, :with_phone) - code = '1234' + code = 'ABC1-DEF2-GHI3-JKL4' stub_personal_key(user: user, code: code) loa1_sp_session ","Again, Poltergeist didn't catch the fact that this field has a regex pattern requirement."
"@@ -1208,9 +1208,9 @@ def regularize(cov, info, mag=0.1, grad=0.1, eeg=0.1, exclude='bads', channel type separately. Special care is taken to keep the rank of the data constant. - Note. This function is kept for reasons of backwards-compatibility. - Please consider explicitly using the `method` parameter in - compute_covariance to directly combine estimation with regularization + **Note:** This function is kept for reasons of backward-compatibility. + Please consider explicitly using the ``method`` parameter in + `compute_covariance` to directly combine estimation with regularization in a data-driven fashion. Parameters ",maybe add a link to the FAQ section.
"@@ -828,13 +828,13 @@ func (b *cloudBackend) runEngineAction( <-displayDone scope.Close() // Don't take any cancellations anymore, we're shutting down. close(engineEvents) - close(displayEvents) close(displayDone) contract.IgnoreClose(manager) // Make sure that the goroutine writing to displayEvents and callerEventsOpt // has exited before proceeding <-eventsDone + close(displayEvents) status := apitype.UpdateStatusSucceeded if err != nil { ",shouldn't pulling on displayDone be done after pulling on eventsDone... ?
"@@ -10,11 +10,16 @@ from six.moves import socketserver #type: ignore # pylint: disable=import-erro import josepy as jose import OpenSSL +import pytest from acme import errors from acme import test_util from acme.magic_typing import List # pylint: disable=unused-import, no-name-in-module +# turns all ResourceWarnings into errors for this module +if six.PY3: + pytestmark = pytest.mark.filterwarnings(ignore::ResourceWarning) # pragma: no cover + class SSLSocketAndProbeSNITest(unittest.TestCase): Tests for acme.crypto_util.SSLSocket/probe_sni. ",Doesn't this do the opposite and ignores all `ResourceWarnings` in this module?
"@@ -30,6 +30,9 @@ public interface MessageQueueWriter { void write(List<RawMessageEvent> entries) throws MessageQueueException; + default void preFlightCheck() throws PreflightCheckException { + } + @AutoValue abstract class Metrics { public static class Provider implements javax.inject.Provider<MessageQueueWriter.Metrics> { ","What do you think about moving this out of the interface? I think the implementation is inconsistent with other pre-flight checks. The MongoDB and Elasticsearch services don't implement checks this way, and potential plugin checks do neither."
"@@ -55,11 +55,11 @@ class Options: self.fast_parser = False self.incremental = False - def __eq__(self, other): + def __eq__(self, other: Any) -> bool: return self.__class__ == other.__class__ and self.__dict__ == other.__dict__ - def __ne__(self, other): + def __ne__(self, other: Any) -> bool: return not self == other - def __repr__(self): + def __repr__(self) -> str: return 'Options({})'.format(pprint.pformat(self.__dict__)) ",This should actually be `object`.
"@@ -303,7 +303,7 @@ feature 'Sign Up', devise: true do # When I resend confirmation instructions to an existing user # Then the user does not receive an email context 'confirmation instructions sent to existing user', email: true do - it 'does not send an email to the existing user' do + xit 'does not send an email to the existing user' do user = create(:user) visit '/' ","this 'resend email confirmation' link is not currently in designs, hence the removal -- will discuss with ryan t and figure out where we can slide it..."
"@@ -94,6 +94,10 @@ class Dataset: meta_name = self._config.get('dataset_meta') if meta_name: meta_name = Path(meta_name) + print_info({dataset_name} dataset metadata will be saved to {file}.format( + dataset_name=self._config['name'], file=meta_name)) + print_info('Converted annotation for {dataset_name} dataset will be saved to {file}'.format( + dataset_name=self._config['name'], file=Path(annotation_name))) save_annotation(annotation, meta, Path(annotation_name), meta_name) self._annotation = annotation ","Do you check path representation, when you print it? If I not mistaken, it will be printed like PosixPath('path')"
"@@ -43,10 +43,17 @@ class Package extends BasePackage protected $stability; protected $notificationUrl; + /** + * @var Link[] + */ protected $requires = array(); protected $conflicts = array(); protected $provides = array(); protected $replaces = array(); + + /** + * @var Link[] + */ protected $devRequires = array(); protected $suggests = array(); protected $autoload = array(); ","this should also be done for other properties (conflicts, provides and replaces are also package links)"
"@@ -113,6 +113,11 @@ public class RegisterIsoCmd extends BaseCmd { description = true if ISO should bypass Secondary Storage and be downloaded to Primary Storage on deployment) private Boolean directDownload; + @Parameter(name = ApiConstants.PASSWORD_ENABLED, + type = CommandType.BOOLEAN, + description = true if password reset feature is supported; default is false) + private Boolean passwordEnabled; + ///////////////////////////////////////////////////// /////////////////// Accessors /////////////////////// ///////////////////////////////////////////////////// ",@anuragaw let's export this via the template response (listIsos response should return this key) and we're golden!
"@@ -710,6 +710,8 @@ redo_accept: X509_free(signer); X509_STORE_free(store); X509_VERIFY_PARAM_free(vpm); + if (rsign_sigopts != NULL) + sk_OPENSSL_STRING_free(rsign_sigopts); EVP_PKEY_free(key); EVP_PKEY_free(rkey); X509_free(cert); ",The NULL check isn't necesary.
"@@ -3,6 +3,8 @@ # # SPDX-License-Identifier: (Apache-2.0 OR MIT) +from spack import * + class PyGrpcio(PythonPackage): HTTP/2-based RPC framework. ",You'll need another blank line after this to get the flake8 and isort checks to pass.
"@@ -4381,9 +4381,9 @@ class ConfigProviders(Config): curProvObj = sorted_providers[curProvider] curProvObj.enabled = curEnabled if curEnabled: - providers_reordered.insert(0, curProvider) + enabled_providers.append(curProvider) else: - providers_reordered.append(curProvider) + disabled_providers.append(curProvider) except: continue ",@echel0n this line means that providers which a lower preference become the most preferred when saving providers.
"@@ -70,7 +70,7 @@ final class PageTrashSubscriber implements EventSubscriberInterface return; } - $this->trashManager->store(BasePageDocument::RESOURCE_KEY, $event->getDocument()); + $this->trashManager->store(BasePageDocument::RESOURCE_KEY, $document); $this->hasPendingTrashItem = true; } ",Can you describe this change?
"@@ -134,14 +134,14 @@ vos_imem_strts_create(struct vos_imem_strts *imem_inst) rc = d_uhash_create(0 /* no locking */, VOS_POOL_HHASH_BITS, &imem_inst->vis_pool_hhash); if (rc) { - D_ERROR(Error in creating POOL ref hash: %d\n, rc); + D_ERROR(Error in creating POOL ref hash: DF_RC\n, DP_RC(rc)); goto failed; } rc = d_uhash_create(D_HASH_FT_EPHEMERAL, VOS_CONT_HHASH_BITS, &imem_inst->vis_cont_hhash); if (rc) { - D_ERROR(Error in creating CONT ref hash: %d\n, rc); + D_ERROR(Error in creating CONT ref hash: DF_RC\n, DP_RC(rc)); goto failed; } ",(style) line over 80 characters
"@@ -74,7 +74,10 @@ public abstract class BaseTopNAlgorithm<DimValSelector, DimValAggregateStore, Pa { boolean hasDimValSelector = (dimValSelector != null); - final int cardinality = params.getCardinality(); + int cardinality = params.getCardinality(); + if (cardinality < 0) { + cardinality = Integer.MAX_VALUE; + } int numProcessed = 0; while (numProcessed < cardinality) { final int numToProcess; ","Why this change should be a part of this PR? cardinality < 0 probably means that completely different approach should be taken to compute topN, setting just to `Integer.MAX_VALUE` may result in a lot of excessive work and allocations in `run()` method."
"@@ -1,3 +1,15 @@ +''' A categorical bar chart illustrating the use of `factor_cmap <factor_cmap>`_ to associate colors from a palette +with categories. + +.. rubric:: Details + +:bokeh APIs: :func:`~bokeh.plotting.Figure.vbar`, :func:`~bokeh.transform.factor_cmap` +:references: :ref:`userguide_categorical_bars` +:keywords: bar, vbar, legend, factor_cmap, palette + +| + +''' from bokeh.io import output_file, show from bokeh.models import ColumnDataSource from bokeh.palettes import Spectral6 ","@hyles-lineata, what's this marker for?"
"@@ -97,8 +97,8 @@ define([ }); } - var vertexShaderText = vertexShaderSource.createCombinedVertexShader(); - var fragmentShaderText = fragmentShaderSource.createCombinedFragmentShader(); + var vertexShaderText = vertexShaderSource.createCombinedVertexShader(this._context.webgl2); + var fragmentShaderText = fragmentShaderSource.createCombinedFragmentShader(this._context.webgl2); var keyword = vertexShaderText + fragmentShaderText + JSON.stringify(attributeLocations); var cachedShader; ",It is slightly cleaner to just pass `context` through and only access `context.webgl2` in `combineShader`. Also this lets us access any other properties of `context` in the future.
"@@ -28,15 +28,10 @@ import org.mockito.junit.jupiter.MockitoExtension; class SwingActionTest { private static final Object VALUE = new Object(); - private static final Runnable RUNNABLE_THROWING_EXCEPTION = - () -> { - throw new IllegalStateException(); - }; + private static Object throwException() { + throw new IllegalStateException(); + } - private static final Supplier<?> SUPPLIER_THROWING_EXCEPTION = - () -> { - throw new IllegalStateException(); - }; @Mock private Runnable action; @Mock private ActionEvent event; @Mock private ActionListener listener; ",Any thoughts to inline this directly? I think that might be a bit more direct.
"@@ -237,7 +237,13 @@ class ChannelGraph(object): if not valid_timeout: continue - yield Route(path, channel) + if channel.network_state == NODE_NETWORK_UNKNOWN: + online_nodes.append(Route(path, channel)) + + if channel.network_state == NODE_NETWORK_REACHABLE: + unknown_nodes.append(Route(path, channel)) + + return online_nodes + unknown_nodes def has_path(self, source_address, target_address):  True if there is a connecting path regardless of the number of hops.  ","Here it seems to me that it should be the other way around. If the `state` is `UNKNOWN` then it should be added to `unknown_nodes` and if `REACHABLE` to `online_nodes`, right?"
"@@ -126,7 +126,11 @@ func sendConfigToChannel(configurationChan chan<- types.ConfigMessage, configura } func loadFileConfig(filename string) (*types.Configuration, error) { - configuration := new(types.Configuration) + configuration := &types.Configuration{ + Frontends: make(map[string]*types.Frontend), + Backends: make(map[string]*types.Backend), + TLSConfiguration: make([]*tls.Configuration, 0), + } if _, err := toml.DecodeFile(filename, configuration); err != nil { return nil, fmt.Errorf(error reading configuration file: %s, err) } ",not needed because it's not a pointer on a slice.
"@@ -935,6 +935,11 @@ function elgg_view_entity_icon(ElggEntity $entity, $size = 'medium', $vars = arr * @return string/false Rendered annotation */ function elgg_view_annotation(ElggAnnotation $annotation, array $vars = array(), $bypass = true, $debug = false) { + + if (!$annotation || !($annotation instanceof ElggAnnotation)) { + return false; + } + global $autofeed; $autofeed = true; ",FYI with instanceof you don't need a separate check for bool/object. It doesn't throw errors.
"@@ -62,6 +62,8 @@ namespace DynamoSandbox internal class Program { + private static readonly SettingsMigrationWindow migrationWindow = new SettingsMigrationWindow(); + private static void MakeStandaloneAndRun(string commandFilePath, out DynamoViewModel viewModel) { var geometryFactoryPath = string.Empty; ","This will be created regardless of migration actually happening, can we `new` only in `SettingsMigrationEventArgs.EventStatusType.Begin`?"
"@@ -374,3 +374,7 @@ def sum_order_totals(qs): zero = Money(0, currency=settings.DEFAULT_CURRENCY) taxed_zero = TaxedMoney(zero, zero) return sum([order.total for order in qs], taxed_zero) + + +def get_valid_shipping_methods(order: Order): + return applicable_shipping_methods(order, price=order.get_subtotal().gross.amount) ","What do we gain from having this function? It doesn't do any additional logic. Also, we already have a function with the same name for checkout."
"@@ -10,10 +10,11 @@ class PyGraphqlCore(PythonPackage): for APIs created by Facebook. homepage = https://github.com/graphql-python/graphql-core - url = https://github.com/graphql-python/graphql-core/archive/v3.1.2.tar.gz + pypi = graphql-core/graphql-core-3.1.5.tar.gz - version('3.1.2', sha256='16087360d34f9cfa295b401fc17f9f11bcddef0e6e0dc5a694bbe2298b31949b') - version('3.0.5', sha256='88021f8b879f18cf56523644e51e1552b126a9ad9ab218f579bf503d236d5272') + version('3.1.2', sha256='c056424cbdaa0ff67446e4379772f43746bad50a44ec23d643b9bdcd052f5b3a') + version('3.0.5', sha256='51f7dab06b5035515b23984f6fcb677ed909b56c672152699cca32e03624992e') + version('2.3.2', sha256='aac46a9ac524c9855910c14c48fc5d60474def7f99fd10245e76608eba7af746') - depends_on('python@3.6:3.999', type=('build', 'run')) + depends_on('python@3.6:', type=('build', 'run')) depends_on('py-setuptools', type='build') ","Can you undo this change, the `setup.py` contains: `python_requires=>=3.6,<4`"
"@@ -76,6 +76,7 @@ struct obj_auxi_args { * ec_in_recov -- a EC recovery task */ uint32_t io_retry:1, + io_task_reinited:1, args_initialized:1, to_leader:1, spec_shard:1, ","Hmm, reinit is called somewhere else as well, but reinited = 1 is only set here. probably io_retried is clearer here. Or I miss sth?"
"@@ -7025,6 +7025,14 @@ spa_async_thread(void *arg) !spa_feature_is_enabled(dp->dp_spa, SPA_FEATURE_RESILVER_DEFER))) dsl_resilver_restart(dp, 0); + if (tasks & SPA_ASYNC_INITIALIZE_RESTART) { + mutex_enter(&spa_namespace_lock); + spa_config_enter(spa, SCL_CONFIG, FTAG, RW_READER); + vdev_initialize_restart(spa->spa_root_vdev); + spa_config_exit(spa, SCL_CONFIG, FTAG); + mutex_exit(&spa_namespace_lock); + } + /* * Let the world know that we're done. */ ",mismerge? this seems to be duplicate.
"@@ -305,9 +305,13 @@ class Checkout: self._add_to_user_address_book( self.billing_address, is_billing=True) - shipping_price = ( - self.shipping_method.get_total() if self.shipping_method - else Price(0, currency=settings.DEFAULT_CURRENCY)) + if self.shipping_method: + shipping_price = self.shipping_method.get_total_price() + else: + shipping_price = TaxedMoney( + net=Money(0, currency=settings.DEFAULT_CURRENCY), + gross=Money(0, currency=settings.DEFAULT_CURRENCY)) + order_data = { 'language_code': get_language(), 'billing_address': billing_address, ",Why do we intentionally discard the net price here?
"@@ -74,7 +74,7 @@ ica.apply(epochs) # clean data, default in place evoked = [epochs[k].average() for k in event_ids] -contrast = evoked[1] - evoked[0] +contrast = combine_evoked(evoked, weights=[-1, 1]) # Faces - scrambled evoked.append(contrast) ","actually, I find the original code much clearer in this instance."
"@@ -80,6 +80,17 @@ def _raise_did_you_mean(address_family: AddressFamily, name: str, source=None) - raise resolve_error from source raise resolve_error +@rule +async def find_build_file(address: Address) -> BuildFileAddress: + address_family = await Get[AddressFamily](Dir(address.spec_path)) + if address not in address_family.addressables: + _raise_did_you_mean(address_family=address_family, name=address.target_name) + return next( + build_file_address + for build_file_address in address_family.addressables.keys() + if build_file_address == address + ) + @rule async def hydrate_struct(address_mapper: AddressMapper, address: Address) -> HydratedStruct: ","So, this works, but we should take a look at how it is being used, and see whether it should be batched. The parsing will be memoized obviously, but each usage is O(N) in the number of targets in a directory."
"@@ -242,14 +242,14 @@ void menu_temperature() { EDIT_ITEM_FAST(percent, MSG_EXTRA_FAN_SPEED_1, &thermalManager.new_fan_speed[0], 3, 255); #endif #endif - #if HAS_FAN1 || (ENABLED(SINGLENOZZLE) && EXTRUDERS > 1) + #if HAS_FAN1 || (DISABLED(SINGLENOZZLE) && EXTRUDERS > 1) editable.uint8 = thermalManager.fan_speed[1]; EDIT_ITEM_FAST(percent, MSG_FAN_SPEED_2, &editable.uint8, 0, 255, [](){ thermalManager.set_fan_speed(1, editable.uint8); }); #if ENABLED(EXTRA_FAN_SPEED) EDIT_ITEM_FAST(percent, MSG_EXTRA_FAN_SPEED_2, &thermalManager.new_fan_speed[1], 3, 255); #endif #endif - #if HAS_FAN2 || (ENABLED(SINGLENOZZLE) && EXTRUDERS > 2) + #if HAS_FAN2 || (DISABLED(SINGLENOZZLE) && EXTRUDERS > 2) editable.uint8 = thermalManager.fan_speed[2]; EDIT_ITEM_FAST(percent, MSG_FAN_SPEED_3, &editable.uint8, 0, 255, [](){ thermalManager.set_fan_speed(2, editable.uint8); }); #if ENABLED(EXTRA_FAN_SPEED) ",This condition doesn't get rid of the issue that `HAS_FAN1` is made irrelevant. I will look into the back-history of this code to see why it is shaped the way it is.
"@@ -208,8 +208,8 @@ func (cfg *AutoScalingConfig) RegisterFlags(argPrefix string, f *flag.FlagSet) { f.StringVar(&cfg.RoleARN, argPrefix+.role-arn, , AWS AutoScaling role ARN) f.Int64Var(&cfg.MinCapacity, argPrefix+.min-capacity, 3000, DynamoDB minimum provision capacity.) f.Int64Var(&cfg.MaxCapacity, argPrefix+.max-capacity, 6000, DynamoDB maximum provision capacity.) - f.Int64Var(&cfg.OutCooldown, argPrefix+.out-cooldown, 3000, DynamoDB minimum time between each autoscaling event that increases provision capacity.) - f.Int64Var(&cfg.InCooldown, argPrefix+.in-cooldown, 3000, DynamoDB minimum time between each autoscaling event that decreases provision capacity.) + f.Int64Var(&cfg.OutCooldown, argPrefix+.out-cooldown, 1800, DynamoDB minimum seconds between each autoscale up.) + f.Int64Var(&cfg.InCooldown, argPrefix+.in-cooldown, 1800, DynamoDB minimum seconds between each autoscale down.) f.Float64Var(&cfg.TargetValue, argPrefix+.target-value, 80, DynamoDB target ratio of consumed capacity to provisioned capacity.) } ","All usages of this are as a time.Duration, so perhaps we should make this a DurationVar?"
"@@ -338,8 +338,11 @@ def compute_covariance(epochs, keep_sample_mean=True, tmin=None, tmax=None, cov : instance of Covariance The computed covariance.  + if not isinstance(epochs, list): - epochs = [epochs] + epochs = _unpack_epochs(epochs) + else: + epochs = reduce(add, [_unpack_epochs(epoch) for epoch in epochs]) # check for baseline correction for epochs_t in epochs: ",just to check would: sum([_unpack_epochs(epoch) for epoch in epochs]) work too?
"@@ -80,8 +80,11 @@ public class AvroDataTranslator implements DataTranslator { private Iterable<String> names; - TypeNameGenerator() { - this(ImmutableList.of(KsqlConstants.AVRO_SCHEMA_FULL_NAME)); + TypeNameGenerator(final Map<String, String> properties) { + final String schemaFullName = properties.get(KsqlAvroTopicSerDe.AVRO_SCHEMA_FULL_NAME); + this.names = ImmutableList.of(schemaFullName == null + ? KsqlConstants.AVRO_SCHEMA_FULL_NAME : + StringUtil.cleanQuotes(schemaFullName)); } private TypeNameGenerator(final Iterable<String> names) { ",Can we rename `AVRO_SCHEMA_FULL_NAME` to `DEFAULT_AVRO_SCHEMA_FULL_NAME` please?
"@@ -53,8 +53,9 @@ def export_products( def get_filename(model_name: str, file_type: str) -> str: - return {}_data_{}.{}.format( - model_name, timezone.now().strftime(%d_%m_%Y), file_type + hash = secrets.token_hex(nbytes=3) + return {}_data_{}_{}.{}.format( + model_name, timezone.now().strftime(%d_%m_%Y_%H_%M_%S), hash, file_type ) ",Are we sure that this will not return any forbidden characters for the path file?
"@@ -47,15 +47,15 @@ func (c *console) Close() error { func (c *console) PublishEvent( s op.Signaler, opts outputs.Options, - event common.MapStr, + event outputs.Data, ) error { var jsonEvent []byte var err error if c.config.Pretty { - jsonEvent, err = json.MarshalIndent(event, ,  ) + jsonEvent, err = json.MarshalIndent(event.Event, ,  ) } else { - jsonEvent, err = json.Marshal(event) + jsonEvent, err = json.Marshal(event.Event) } if err != nil { logp.Err(Fail to convert the event to JSON (%v): %#v, err, event) ",can we renamed the field itself also to data? Otherwise we have inception below :-)
"@@ -32,7 +32,7 @@ import games.strategy.triplea.util.Stopwatch; /** * A place to find images and map data for a ui. */ -public class UIContext extends AbstractUIContext implements IUIContext { +public class UIContext extends AbstractUIContext { protected MapData m_mapData; protected final TileImageFactory m_tileImageFactory = new TileImageFactory(); protected final UnitImageFactory m_unitImageFactory = new UnitImageFactory(); ","There are methods in IUIContext, no?"
"@@ -201,5 +201,12 @@ func ValidatePolicyConfig(config api.PolicyConfig) fielderrors.ValidationErrorLi func ValidateProjectRequestConfig(config api.ProjectRequestConfig) fielderrors.ValidationErrorList { allErrs := fielderrors.ValidationErrorList{} + if len(config.ProjectRequestTemplate) > 0 { + tokens := strings.Split(config.ProjectRequestTemplate, /) + if len(tokens) != 2 { + allErrs = append(allErrs, fielderrors.NewFieldInvalid(projectRequestTemplate, config.ProjectRequestTemplate, must be in the form: namespace/templateName)) + } + } + return allErrs } ","If ProjectRequestTemplate is required, shouldn't you throw an error if it's absent?"
"@@ -101,6 +101,18 @@ def write_mrk(fname, points): raise ValueError(err) +def average_mrks(mrk, mrk2): + if isinstance(mrk, basestring): + mrk = read_mrk(mrk) + if isinstance(mrk2, basestring): + mrk2 = read_mrk(mrk2) + + np.testing.assert_array_equal(mrk.shape, mrk2.shape, + err_msg= 'Mismatch in the number of markers.') + mrk = (mrk+mrk2)/2 + return mrk + + def read_elp(fname): ELP point extraction in Polhemus head space ",we never use np.testing outside of tests. Also shape are tuples so == works fine.
"@@ -595,8 +595,6 @@ namespace System.ServiceModel.Syndication } } reader.MoveToElement(); - string localName = reader.LocalName; - string nameSpace = reader.NamespaceURI; string val = (kind == TextSyndicationContentKind.XHtml) ? reader.ReadInnerXml() : reader.ReadElementString(); TextSyndicationContent result = new TextSyndicationContent(val, kind); if (attrs != null) ","Do either LocalName or NamespaceURI have side-effects, e.g. advancing the reader, throwing exceptions if something couldn't be parsed, etc.?"
"@@ -49,12 +49,16 @@ class SetPassword(CreateToken): token = graphene.String( description=A one-time token required to set the password., required=True ) + email = graphene.String(required=True) + password = graphene.String(required=True) class Meta: description = ( Sets the user's password from the token sent by email  using the RequestPasswordReset mutation. ) + error_type_class = AccountError + error_type_field = account_errors @classmethod def mutate(cls, root, info, **data): ",Where are the descriptions?  
"@@ -1448,11 +1448,7 @@ class URL implements Serializable { return false; } URL other = (URL) obj; - if (host == null) { - if (other.host != null) { - return false; - } - } else if (!host.equals(other.host)) { + if(!StringUtils.isEquals(host, other.host)) { return false; } if (parameters == null) { ","what about this block, should we refactor at the same time?"
"@@ -15,12 +15,12 @@ import ( // REST implements the RESTStorage interface in terms of an Registry. type REST struct { - registry Registry + client kclient.NamespaceInterface } -// NewStorage returns a new REST. -func NewREST(registry Registry) apiserver.RESTStorage { - return &REST{registry} +// NewREST returns a RESTStorage object that will work against Project resources +func NewREST(client kclient.NamespaceInterface) apiserver.RESTStorage { + return &REST{client: client} } // New returns a new Project for use with Create and Update. ",Another reason this has to be this way is that we have to run on kube directly - we should make a note somewhere that it's illegal to reference a kube registry from an openshift storage object.
"@@ -190,10 +190,10 @@ export class AmpStoryAutoAds extends AMP.BaseElement { constructor(element) { super(element); - /** @private {?../../amp-story/0.1/amp-story.AmpStory} */ + /** @private {?../../amp-story/1.0/amp-story.AmpStory} */ this.ampStory_ = null; - /** @private {?../../amp-story/0.1/navigation-state.NavigationState} */ + /** @private {?../../amp-story/1.0/navigation-state.NavigationState} */ this.navigationState_ = null; /** @private {number} */ ",Remnant of moving from `0.1` to `1.0`? Is this change required as part of moving to a new Closure Compiler or just convenient to make in this PR?
"@@ -41,7 +41,7 @@ export function deepScan( startNode, callback, arg = undefined, - state = true, + state = /** @type {S} */ (/** @type {?} */ (true)), includeSelf = true ) { if (includeSelf) { ",fmi: did directly casting to `S` not work?
"@@ -420,9 +420,11 @@ namespace DotNetNuke.Services.Search.Internals { return searchPhrase; } - + + string output = FoldToASCII(searchPhrase); + // we have a quotation marks and/or wildcard search, adjust accordingly - var chars = searchPhrase.ToArray(); + var chars = output.TrimEnd('\0').ToCharArray(); var insideQuote = false; var newPhraseBulder = new StringBuilder(); var currentWord = new StringBuilder(); ",Please put the `Trim` inside `FoldToASCII`
"@@ -145,7 +145,7 @@ namespace Microsoft.Extensions.FileProviders ref _fileWatcher, ref _fileWatcherInitialized, ref _fileWatcherLock, - _fileWatcherFactory); + _fileWatcherFactory) ?? throw new NullReferenceException(nameof(_fileWatcher)); } set { ",this should be a separate change - we should avoid any product changes when adding annotations
"@@ -150,7 +150,7 @@ module Users # Don't allow the user to modify UserTeam-s if he's not admin, # unless he/she is modifying his/her UserTeam if current_user != @user_t.user && - !is_admin_of_team(@user_t.team) + !can_read_team?(@user_t.team) render_403 end end ","Here the same, I would make separate methods `check_leave_team_permission` and `check_manage_user_team_permission`."
"@@ -109,7 +109,6 @@ static void write_pattern(struct mm_heap *heap_map, int heap_depth, memset( (void *)current_map->base, pattern, current_map->count * current_map->block_size); - sizeof(*current_map)); } } ","wow, we must have other not compiled code hidden by conditional compilation."
"@@ -915,6 +915,10 @@ class ExceptionHandler(object): 'traceback': _format_exc(exc_val, exc_tb), 'conda_info': info_dict, } + + if isinstance(exc_val, CondaError): + error_report['conda_error_dump'] = exc_val.dump_map() + return error_report def print_unexpected_error_report(self, error_report): ",I'm not sure I like the name of this key here...
"@@ -253,3 +253,9 @@ class DvcFileSystem(BaseFileSystem): # pylint:disable=abstract-method ret[obj.hash_info.name] = obj.hash_info.value return ret + + def _download(self, from_info, to_file, **kwargs): + fs, path = self._get_fs_path(from_info) + fs._download( # pylint: disable=protected-access + path, to_file, **kwargs + ) ","For the record: this is a bit ugly, but it will turn into a cleaner and more proper `fs.get_file` when migrating dvcfs to fsspec."
"@@ -325,6 +325,10 @@ class RemoteManager(object): except ConnectionError as exc: raise ConanConnectionError(%s\n\nUnable to connect to %s=%s % (str(exc), remote.name, remote.url)) + except RecipeNotFoundException as exc: + raise NotFoundException(%s. [Remote: %s] % (exception_message_safe(exc), remote.name)) + except PackageNotFoundException as exc: + raise NotFoundException(%s. [Remote: %s] % (exception_message_safe(exc), remote.name)) except ConanException as exc: raise exc.__class__(%s. [Remote: %s] % (exception_message_safe(exc), remote.name)) except Exception as exc: ",What? So if calling a remote returns a RecipeNotFound you re-convert it to NotFoundException? Seems very weird.
"@@ -147,7 +147,7 @@ class Plugin_Storage { } // If a plugin was activated or deactivated. - $number_of_plugins_differ = count( self::$plugins ) !== count( get_option( self::ACTIVE_PLUGINS_OPTION_NAME, array() ) ); + $number_of_plugins_differ = count( self::$plugins ) !== count( (array) get_option( self::ACTIVE_PLUGINS_OPTION_NAME, array() ) ); if ( $number_of_plugins_differ || true === self::$refresh_connected_plugins ) { self::update_active_plugins_option(); ","Without being able to reproduce this, this is likely enough. Ideally, if we can run this code on an impacted site and confirm it isn't the `$plugins` that is a problematic. (I don't see how, but I don't trust myself)."
"@@ -72,6 +72,14 @@ def self_chat(opt, print_parser=None): if hasattr(agent2, 'id'): agent2.id = agent2.id + 2 + # Check for `selfchat` in the task name + if 'selfchat' not in opt['task']: + warn_once( + 'You are using self chat with task {}.'.format(opt['task']) + + 'If your task has an existing self chat world, then run with ' + '-t {}:selfchat'.format(opt['task']) + ) + world = create_task(opt, [agent1, agent2]) if print_parser: ",You missed a space. Also you can use `f'strings'` if you want!
"@@ -142,9 +142,9 @@ def _get_dvc_repo_info(repo): def add_parser(subparsers, parent_parser): - VERSION_HELP = Display the DVC version -  and system/environment information. - + VERSION_HELP = ( + Display the DVC version and system/environment information. + ) version_parser = subparsers.add_parser( version, parents=[parent_parser], ",I'll update docs to match this.
"@@ -45,4 +45,14 @@ public abstract class BaseCommand implements Runnable { ) protected boolean dryRun = false; + protected static final Logger LOGGER = LoggerFactory.getLogger(Migrations.class); + + @Override + public void run() { + final long startTime = System.nanoTime(); + command(); + LOGGER.info(Execution time:  + (System.nanoTime() - startTime) / 1000000000); + } + + protected abstract void command(); } ","I think it's better to have the different classes each have their own loggers, rather than having them all share the `Migrations.class` logger. By having different loggers, users can more easily filter logs and can also configure different log levels for the different loggers. I assume your motivation for switching to a shared logger was so that the execution time would be logged by the same logger as the other messages from the command execution itself? I don't have a great solution but one option could be to have each command implement a simple `getLogger()` method, which we can then call here."
"@@ -377,14 +377,16 @@ function poller_kill_stale_workers() { // We killed the stale process. // To avoid a blocking situation we reschedule the process at the beginning of the queue. // Additionally we are lowering the priority. - q(UPDATE `workerqueue` SET `executed` = '0000-00-00 00:00:00', `created` = '%s', + q(UPDATE `workerqueue` SET `executed` = '%s', `created` = '%s', `priority` = %d, `pid` = 0 WHERE `pid` = %d, + dbesc(NULL_DATE), dbesc(datetime_convert()), intval(PRIORITY_NEGLIGIBLE), intval($pid[pid])); } else logger(Worker process .$pid[pid]. (.implode( , $argv).) now runs for .round($duration). of .$max_duration. allowed minutes. That's okay., LOGGER_DEBUG); } + } } /** ",Standards: Please add braces to this `else`.
"@@ -26,7 +26,7 @@ class ProjectActivitiesController < ApplicationController end def check_view_permissions - unless can_view_project_activities(@project) + unless can_read_project?(@project) render_403 end end ",Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
"@@ -54,7 +54,7 @@ public class U2FRedisDeviceRepository extends BaseU2FDeviceRepository { public Collection<? extends U2FDeviceRegistration> getRegisteredDevices() { val expirationDate = LocalDate.now(ZoneId.systemDefault()) .minus(this.expirationTime, DateTimeUtils.toChronoUnit(this.expirationTimeUnit)); - val keys = (Set<String>) this.redisTemplate.keys(getPatternRedisKey()); + val keys = (Set<String>) RedisUtils.keys(this.redisTemplate, getPatternRedisKey()); if (keys != null) { return queryDeviceRegistrations(expirationDate, keys); } ",Remove the cast
"@@ -117,6 +117,12 @@ describe ProjectsController, type: :controller do expect(response).to have_http_status(:unprocessable_entity) expect(response.content_type).to eq 'application/json' end + + it 'never calls create activity service' do + expect(Activities::CreateActivityService).to receive(:call) + + post :create, params: params, format: :json + end end end ",Is this named correctly?
"@@ -27,11 +27,11 @@ from .pipeline import AsyncPipeline, PipelineStep from .queue import Signal -def run_pipeline(video, encoder, decoder, render_fn, fps=30): +def run_pipeline(video, encoder, decoder, render_fn, decoder_seq_size=16, fps=30): pipeline = AsyncPipeline() pipeline.add_step(Data, DataStep(video), parallel=False) pipeline.add_step(Encoder, EncoderStep(encoder), parallel=False) - pipeline.add_step(Decoder, DecoderStep(decoder), parallel=False) + pipeline.add_step(Decoder, DecoderStep(decoder, sequence_size=decoder_seq_size), parallel=False) pipeline.add_step(Render, RenderStep(render_fn, fps=fps), parallel=True) pipeline.run() ","I can understand the sequence size being configurable when you're using the dummy decoder, but does it make sense to override it when using a real decoder? IMO, the code should only allow the `--seq` option to be set when `-m_de` is unspecified, and otherwise derive the sequence size from the decoder's input shape."
"@@ -53,10 +53,11 @@ </ul> </dd> </dl> - <router-link tag=button type=submit - :to={name: '<%= jhiPrefixCapitalized %>User'} - class=btn btn-info> + <router-link custom v-slot={ navigate } + :to={name: '<%= jhiPrefixCapitalized %>User'}> + <button @click=navigate type=submit class=btn btn-info> <font-awesome-icon icon=arrow-left></font-awesome-icon>&nbsp;<span v-text=$t('entity.action.back')> Back</span> + </button> </router-link> </div> </div> ",Should it be really a `submit` button and not just a `button` (was already before the case)?
"@@ -33,7 +33,7 @@ class LinkTag < LiquidTagBase path.slice!(0) if path.starts_with?(/) # remove leading slash if present path.slice!(-1) if path.ends_with?(/) # remove trailing slash if present extracted_hash = Addressable::Template.new({username}/{slug}).extract(path)&.symbolize_keys - raise StandardError, The article you're looking for does not exist: {% link #{slug} %} unless extracted_hash + raise StandardError, The article you're looking for does not exist: #{slug} unless extracted_hash extracted_hash end ","I changed this error message because I feel the main piece of information is the link that was passed in, not the syntax for the liquid tag."
"@@ -550,7 +550,8 @@ func GenerateRegionGuideFunc(enableLog bool) RegionGuideFunc { // Once flow has changed, will update the cache. // Because keys and bytes are strongly related, only bytes are judged. if region.GetRoundBytesWritten() != origin.GetRoundBytesWritten() || - region.GetRoundBytesRead() != origin.GetRoundBytesRead() { + region.GetRoundBytesRead() != origin.GetRoundBytesRead() || + region.flowRoundDivisor < origin.flowRoundDivisor { saveCache, needSync = true, true } ",Why can we skip sync when `divisor` becomes greater?
"@@ -56,6 +56,7 @@ public class FreeStyleProject extends Project<FreeStyleProject,FreeStyleBuild> i return FreeStyleBuild.class; } + @Override public DescriptorImpl getDescriptor() { return (DescriptorImpl)Jenkins.getInstance().getDescriptorOrDie(getClass()); } ",Please don't include general cleanup in otherwise unrelated files in your PR.
"@@ -47,8 +47,10 @@ final class PublishMercureUpdatesListener private $createdEntities; private $updatedEntities; private $deletedEntities; + private $requestStack; + private $formats; - public function __construct(ResourceClassResolverInterface $resourceClassResolver, IriConverterInterface $iriConverter, ResourceMetadataFactoryInterface $resourceMetadataFactory, SerializerInterface $serializer, MessageBusInterface $messageBus = null, callable $publisher = null, ExpressionLanguage $expressionLanguage = null) + public function __construct(ResourceClassResolverInterface $resourceClassResolver, IriConverterInterface $iriConverter, ResourceMetadataFactoryInterface $resourceMetadataFactory, SerializerInterface $serializer, MessageBusInterface $messageBus = null, callable $publisher = null, RequestStack $requestStack, array $formats, ExpressionLanguage $expressionLanguage = null) { if (null === $messageBus && null === $publisher) { throw new InvalidArgumentException('A message bus or a publisher must be provided.'); ","We shouldn't use request stack here, because it makes the feature not fully compliant with GraphQL, and create a hard dependency to Symfony (we want to support Laravel and maybe PSR-7 at some point)."
"@@ -22,7 +22,7 @@ namespace CoreNodeModels.Input [SupressImportIntoVM] [IsDesignScriptCompatible] [AlsoKnownAs(DSCoreNodesUI.Input.IntegerSlider)] - public class IntegerSlider : SliderBase<int> + public class IntegerSlider : SliderBase<long> { /// <summary> /// The NodeType property provides a name which maps to the ",@mjkkirschner is this an API break too?
"@@ -506,7 +506,7 @@ module.exports = class huobipro extends Exchange { return this.parseOHLCVs (response['data'], market, timeframe, since, limit); } - async loadAccounts (reload = false) { + async loadAccounts (reload = false, params = {}) { if (reload) { this.accounts = await this.fetchAccounts (); } else { ",Forgot to pass `params` to `fetchAccounts` here )
"@@ -29,14 +29,14 @@ public interface TicketState { * @return the previous time used. */ - long getPreviousTimeUsed(); + ZonedDateTime getPreviousTimeUsed(); /** * Get the time the ticket was created. * * @return the creation time of the ticket. */ - long getCreationTime(); + ZonedDateTime getCreationTime(); /** * Authentication information from the ticket. This may be null. ",Don't think this will work with JPA ticket registries. We'll likely run into either schema or serialization issues. Let's keep this as long.
"@@ -59,7 +59,7 @@ export class IframeMessagingClient { /** * Send a postMessage to Host Window * @param {object} message The message to send. - * @private + * @protected */ messageHost_(message) { this.getHostWindow().postMessage/*OK*/(message, '*'); ","Why `@protected`? Why should this be overridden? Trailing underscore means `@private`, so would have to be removed."
"@@ -91,14 +91,12 @@ public class LogoutResourceIT { private WebTestClient webTestClient; <%_ } _%> - private OidcIdToken idToken; - @BeforeEach public void before() <% if (!reactive) { %>throws Exception <% } %>{ Map<String, Object> claims = new HashMap<>(); claims.put(groups, Collections.singletonList(ROLE_USER)); claims.put(sub, 123); - this.idToken = new OidcIdToken(ID_TOKEN, Instant.now(), Instant.now().plusSeconds(60), claims); + OidcIdToken idToken = new OidcIdToken(ID_TOKEN, Instant.now(), Instant.now().plusSeconds(60), claims); <%_ if (!reactive) { _%> SecurityContextHolder.getContext().setAuthentication(authenticationToken(idToken)); ",idToken is used in getLogoutInformation method
"@@ -230,11 +230,13 @@ namespace System.Data #endregion #region IBindingList -// TODO: Enable after System.ComponentModel.TypeConverter is annotated + // TODO: Enable after System.ComponentModel.TypeConverter is annotated #nullable disable /// <summary> /// Clears both expression-based and DataView's string-based sorting. /// </summary> + [UnconditionalSuppressMessage(ReflectionAnalysis, IL2026:UnrecognizedReflectionPattern, + Justification = This whole class is unsafe. Constructors are marked as such.)] void IBindingList.RemoveSort() { base.Sort = string.Empty; ",What is unsafe about the two methods below? Can these suppressions (and thus the RUC on the ctor) be removed on this class?
"@@ -80,7 +80,7 @@ func commitCmd(c *cli.Context) error { case oci: mimeType = buildah.OCIv1ImageManifest if c.IsSet(message) { - return errors.Errorf(messages cannot be added to the OCIv1 image format.) + return errors.Errorf(messages are only compatible with the docker image format (-f docker)) } case docker: mimeType = buildah.Dockerv2ImageManifest ","@rhatdan question, does the first docker here need to be capped?"
"@@ -1850,9 +1850,10 @@ class BaseRaw(ProjMixin, ContainsMixin, UpdateChannelsMixin, SetChannelsMixin, show=show, block=block, n_jobs=n_jobs, axes=axes, verbose=verbose) - @fill_doc + @verbose def estimate_rank(self, tstart=0.0, tstop=30.0, tol=1e-4, - return_singular=False, picks=None, scalings='norm'): + return_singular=False, picks=None, scalings='norm', + verbose=None): Estimate rank of the raw data. This function is meant to provide a reasonable estimate of the rank. ",I would consider deprecating this method to avoid having 2 (inconsistant) ways of computing the rank from raw data.
"@@ -94,6 +94,10 @@ class Server: self.options = options if os.path.isfile(STATUS_FILE): os.unlink(STATUS_FILE) + if self.fine_grained: + options.incremental = True + options.show_traceback = True + options.cache_dir = os.devnull def serve(self) -> None: Serve requests, synchronously (no thread or fork). ",Is this also going to be true for the real version of fine-grained?
"@@ -323,3 +323,13 @@ func isVMSSNameInAgentPoolsArray(vmss string, cs *api.ContainerService) bool { } return false } + +func azureStackImageBaseOverrides(kc *api.KubernetesConfig) { + // Azure Stack's custom hyperkube image is now hosted along with MS' images + // Override KubernetesImageBase/KubernetesImageBaseType if apimodel is set to the deprecated KubernetesImageBase + deprecatedAzureStackImageBase := mcr.microsoft.com/k8s/azurestack/core/ + if strings.EqualFold(kc.KubernetesImageBase, deprecatedAzureStackImageBase) { + kc.KubernetesImageBase = mcr.microsoft.com/ + kc.KubernetesImageBaseType = mcr + } +} ","@CecileRobertMichon do you have any thoughts on doing this override here? Is this preferable to the pattern we have currently, where we pass along upgrade context through the code flow and do upgrade-specific mutations during defaults enforcement?"
"@@ -861,6 +861,9 @@ class SemanticAnalyzer(NodeVisitor): return None return Instance(cast(TypeInfo, sym.node), []) + def external_instance(self, qualified_name: str, args: List[Type] = None) -> Instance: + return Instance(self.named_type_or_none(qualified_name).type, args or None) + def is_instance_type(self, t: Type) -> bool: return isinstance(t, Instance) ",The second argument shouldn't be `None` -- it should be an empty list if there are no arguments.
"@@ -123,7 +123,7 @@ def _stdio_stream_as(src_fd, dst_fd, dst_sys_attribute, mode): @contextmanager -def stdio_as(stdout_fd, stderr_fd, stdin_fd): +def stdio_as(stdout_fd, stderr_fd, stdin_fd, binary_mode=False): Redirect sys.{stdout, stderr, stdin} to alternate file descriptors. As a special case, if a given destination fd is `-1`, we will replace it with an open file handle ","afaict, the `binary_mode=True` case here is never exercised? should there be some `if PY3` conditional logic somewhere consuming this for when pants is executed with a 3.x interpreter?"
"@@ -201,8 +201,8 @@ func (r *ReplicaChecker) checkBestReplacement(region *core.RegionInfo) *Operator checkerCounter.WithLabelValues(replica_checker, all_right) return nil } - storeID, newScore := r.selectBestReplacement(region, oldPeer) - if storeID == 0 { + newPeer, newScore := r.SelectBestReplacedPeerToAddReplica(region, oldPeer) + if newPeer == nil { checkerCounter.WithLabelValues(replica_checker, no_replacement_store) return nil } ",I was intentional to return `storeID` instead of `peer` to avoid alloc too many IDs during replacement check.
"@@ -2,11 +2,14 @@ // This file is subject to the terms and conditions defined in // file 'LICENSE.txt', which is part of this source code package. +using System; + namespace Microsoft.Xna.Framework.Input { /// <summary> /// A struct that represents the current button states for the controller. /// </summary> + [Serializable] public struct GamePadButtons { internal readonly Buttons _buttons; ",I assume you're checking with XNA and these are cases where we missed having it serializable? Can you add `[DataContract]` to these as well if that is the case?
"@@ -1,6 +1,10 @@ FactoryGirl.define do Faker::Config.locale = 'en-US' + sequence :mobile do |n| + (999_000_0000 + n).to_s + end + factory :user do confirmed_at Time.current email { Faker::Internet.safe_email } ",change to string to avoid rubocop violation or disable cop locally since it's phone number  
"@@ -182,6 +182,8 @@ class NewCppInfo(object): current_values = result.get_init(requires, []) current_values.extend(component.requires) + # We copy the properties from the root object, even if we have components + result._generator_properties = copy.copy(self._generator_properties) # FIXME: What to do about sysroot? else: result = copy.copy(self.components[None]) ","Could this be breaking? I think it shouldn't, the aggregated_components is used only by the new generators, and it makes sense that aggregating the components in a single cppinfo, keeps the root properties. The aggregation cannot be done for the component's properties because they cannot be aggregated but keeping the root one make sense. right?"
"@@ -54,10 +54,12 @@ export function connect() { /** * Closes connection. * + * @param {boolean} requestFeedback - Whether or not to attempt showing a + * request for call feedback. * @returns {Function} */ -export function disconnect() { +export function disconnect(requestFeedback: boolean = false) { // XXX For web based version we use conference hanging up logic from the old // app. - return () => APP.conference.hangup(); + return () => APP.conference.hangup(requestFeedback); } ","This change supports the new hangup button in the new toolbar, which will call this action directly instead of emitting out through APP.UI.emitEvent. On hang up feedback should be requested."
"@@ -26,6 +26,7 @@ class NodeTest(TestRunnerTaskMixin, NodeTask): def prepare(cls, options, round_manager): super().prepare(options, round_manager) round_manager.require_data(NodePaths) + round_manager.require_data(NodePathsLocal) @classmethod def supports_passthru_args(cls): ",A node_test shouldn't depend on a NodePathsLocal because there isn't any inflection points.
"@@ -50,8 +50,8 @@ </span> </div> - <div class=pad *ngFor=let thread of getThreads()> - <h6> + <div id=modalThreadsMetrics class=pad *ngFor=let thread of getThreads()> + <h6 id=modalThreadsMetrics{{ thread.threadId }}> <span class=badge [ngClass]=getBadgeClass(thread.threadState)>{{ thread.threadState }}</span> &nbsp;{{ thread.threadName }} (ID {{ thread.threadId }}) ",Here `id=modalThreadsMetrics` is not best reference for `aria-describedby`. `id=modalThreadsMetrics{{ thread.threadId }}` is unused. Maybe put `{{ thread.threadName }}` into `span` and give it id which includes `{{ thread.threadId }}` and in table use the same id in `aria-describedby` attribute?
"@@ -45,6 +45,7 @@ public final class PlanJsonMapper { mapper.enable(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES); mapper.enable(DeserializationFeature.FAIL_ON_NULL_CREATOR_PROPERTIES); mapper.enable(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE); + mapper.setSerializationInclusion(Include.NON_EMPTY); return mapper; } } ","This configures Jackson to exclude `null`, `Optional.empty()` and empty collections when serializing."
"@@ -38,9 +38,10 @@ func resourceComputeInstanceGroupManager() *schema.Resource { }, version: &schema.Schema{ - Type: schema.TypeList, - Optional: true, - Computed: true, + Type: schema.TypeList, + Optional: true, + Computed: true, + Deprecated: Use the instance_group_manager resource in the google-beta provider instead. See https://terraform.io/docs/providers/google/provider-versions.html for more details., Elem: &schema.Resource{ Schema: map[string]*schema.Schema{ name: &schema.Schema{ ","What do you think about prefixing these fields with a message that the field is beta? This field is beta, use the instance_group_manager resource... Reading the message as it stands suggests that the resource itself is beta to me."
"@@ -1561,6 +1561,8 @@ void capi_free_key(CAPI_KEY * key) CryptReleaseContext(key->hprov, 0); if (key->pcert) CertFreeCertificateContext(key->pcert); + if (key->id) + OPENSSL_free(key->id); OPENSSL_free(key); } ",NULL check not needed.
"@@ -581,16 +581,13 @@ def plot_alignment(info, trans=None, subject=None, subjects_dir=None, It corresponds to Freesurfer environment variable SUBJECTS_DIR. surfaces : str | list Surfaces to plot. Supported values: - * scalp: one of 'head', 'outer_skin' (alias for 'head'), 'head-dense', or 'seghead' (alias for 'head-dense') * skull: 'outer_skull', 'inner_skull', 'brain' (alias for 'inner_skull') * brain: one of 'pial', 'white', 'inflated', or 'brain' (alias for 'pial'). - Defaults to 'head'. - .. note:: For single layer BEMs it is recommended to use 'brain'. coord_frame : str Coordinate frame to use, 'head', 'meg', or 'mri'. ",@GuillaumeFavelier can you avoid such cosmetic changes? it makes diff longer to read for little gain. thx
"@@ -75,6 +75,9 @@ class CentOSConfigurator(configurator.ApacheConfigurator): # Finish with actual config check to see if systemctl restart helped super(CentOSConfigurator, self).config_test() + def _pick_apache_config(self): + return configurator.find_ssl_apache_conf(centos) + def _prepare_options(self):  Override the options dictionary initialization in order to support ",We should probably fork the CentOS include into two as as well - the newest (CentOS 8) has Apache version 2.4.35 that supports TLS session tickets. We could probably just call the ancestor class with `centos-old` and `centos-current` prefixes.
"@@ -90,6 +90,10 @@ namespace Content.Server.Body.Behavior continue; } + // How much reagent is available to metabolise? + // This needs to be passed to other functions that have metabolism rate information, such that they don't overmetabolise a reagant. + var availableReagent = bloodstream.Solution.Solution.GetReagentQuantity(reagent.ReagentId); + //TODO BODY Check if it's a Toxin. If volume < _toxinTolerance, just remove it. If greater, add damage = volume * _toxinLethality //TODO BODY Check if it has BoozePower > 0. Affect drunkenness, apply damage. Proposed formula (SS13-derived): damage = sqrt(volume) * BoozePower^_alcoholExponent * _alcoholLethality / 10 //TODO BODY Liver failure. ","rather than relying on the metabolism behavior to check that it doesnt 'overmetabolize', shouldnt metabolizable/liver just check how much is returned and clamp it appropriately? i still think that available reagent amount should be passed in for stuff like chemicals that scale their power based off of reagent quantity, but i dont think that this is something that the behaviors should have to worry about handling"
"@@ -55,7 +55,7 @@ MYPYC_OPT_IN = [MYPYC_RUN, MYPYC_RUN_MULTI] # time to run. cmds = { # Self type check - 'self': python_name + ' -m mypy --config-file mypy_self_check.ini -p mypy', + 'self': '' + python_name + ' -m mypy --config-file mypy_self_check.ini -p mypy', # Lint 'lint': 'flake8 -j0', # Fast test cases only (this is the bulk of the test suite) ",this should use `shlex.quote`
"@@ -109,7 +109,7 @@ public class HoodieFlinkStreamer { .transform( bucket_assigner, TypeInformation.of(HoodieRecord.class), - new KeyedProcessOperator<>(new BucketAssignFunction<>(conf))) + new BucketAssignOperator<>(new BucketAssignFunction<>(conf))) .setParallelism(conf.getInteger(FlinkOptions.BUCKET_ASSIGN_TASKS)) .uid(uid_bucket_assigner) // shuffle by fileId(bucket id) ","Nice catch, can we fix the indentation ? And there is another PR same with this, can we close that ?"
"@@ -216,6 +216,17 @@ func BuildStorageFactory(masterConfig configapi.MasterConfig, server *kapiserver // keep Deployments in extensions for backwards compatibility, we'll have to migrate at some point, eventually storageFactory.AddCohabitatingResources(extensions.Resource(deployments), apps.Resource(deployments)) + if server.Etcd.EncryptionProviderConfigFilepath !=  { + glog.V(4).Infof(Reading encryption configuration from %q, server.Etcd.EncryptionProviderConfigFilepath) + transformerOverrides, err := encryptionconfig.GetTransformerOverrides(server.Etcd.EncryptionProviderConfigFilepath) + if err != nil { + return nil, err + } + for groupResource, transformer := range transformerOverrides { + storageFactory.SetTransformer(groupResource, transformer) + } + } + return storageFactory, nil } ",This log line was added by me. I think it won't hurt but it simplifies a debugging process.
"@@ -61,6 +61,10 @@ const ( WorkspaceFile = workspace.json // CachedVersionFile is the name of the file we use to store when we last checked if the CLI was out of date CachedVersionFile = .cachedVersionInfo + + // PulumiBookkeepingLocationEnvVar is a path to the folder where '.pulumi' folder is stored. + // The path should not include '.pulumi' itself. It defaults to the user's home dir if not specified. + PulumiBookkeepingLocationEnvVar = PULUMI_BOOKKEEPING_LOCATION ) // DetectProjectPath locates the closest project from the current working directory, or an error if not found. ",The name bookkeeping feels a bit unusual here for a public facing thing. Should it be `PULUMI_HOME_DIR`? or `PULUMI_HOME`?
"@@ -4,6 +4,6 @@ class WorkMailer < ActionMailer::Base def untouched_works_notification(work_ids) @works = Work.where(id: work_ids) - mail(to: 'anannict@gmail.com', subject: '【Annict::Marie】未更新の作品を更新して下さい') + mail(to: 'anannict@gmail.com', subject: '【Annict DB】未更新の作品を更新して下さい') end end ",Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
"@@ -22,7 +22,7 @@ You may occasionally receive notifications about optional moderation actions; please <a href=<%= app_url(user_settings_path(:notifications)) %>>unsubscribe</a> if you do not want to receive these updates. </p> <p> - If you have any questions or feedback for us, please write to <%= SiteConfig.email_addresses[:default] %> and share your thoughts. + If you have any questions or feedback for us, please write to <%= email_link %> and share your thoughts. </p> <p> ",replaced with `email_link` because this is a HTML template
"@@ -29,8 +29,9 @@ const ( Ubuntu1804 Distro = ubuntu-18.04 RHEL Distro = rhel CoreOS Distro = coreos - AKS Distro = aks - AKSDockerEngine Distro = aks-docker-engine // deprecated docker-engine distro + AKS Distro = aks // deprecated AKS 16.04 distro. Equivalent to aks-16.04. + AKSDockerEngine Distro = aks-docker-engine // deprecated docker-engine distro. + AKS1604 Distro = aks-16.04 AKS1804 Distro = aks-18.04 ACC1604 Distro = acc-16.04 ) ","Rather than deprecating this, we could just call it a mutable reference. So at some point aks is redirected from 16.04 to 18.04"
"@@ -529,9 +529,11 @@ class Optimizer(object): if not param.trainable: continue if param._ivar._grad_ivar() is not None: + Type = param._ivar._grad_ivar().type # create gradient variable grad_var = Variable( block=loss.block, + type=Type, name=param._ivar._grad_name(), stop_gradient=True, ivar=param._ivar._grad_ivar()) ",use lower case? `Type` -> `type`
"@@ -92,6 +92,17 @@ static const OPENSSL_CTX_METHOD rand_crng_ossl_ctx_method = { rand_crng_ossl_ctx_free, }; +static int prov_crngt_compare_previous(const unsigned char *prev, + const unsigned char *cur, + size_t sz) +{ + const int res = memcmp(prev, cur, sz) != 0; + + if (!res) + ossl_set_error_state(); + return res; +} + size_t prov_crngt_get_entropy(PROV_DRBG *drbg, unsigned char **pout, int entropy, size_t min_len, size_t max_len, ",Should this be configurable? i.e on by default but able to be turned off.. Should it be able to be disabled at compile time? I had to do similar things for #12745
"@@ -63,9 +63,7 @@ public class TestMultiFS extends HoodieClientTestHarness { @AfterEach public void tearDown() throws Exception { - cleanupSparkContexts(); - cleanupDFS(); - cleanupTestDataGenerator(); + cleanupResources(); } protected HoodieWriteConfig getHoodieWriteConfig(String basePath) { ",@garyli1019 : Is this one of the places where we are missing the cleanup of resources ?
"@@ -1693,8 +1693,15 @@ def compile_to_numba_ir(mk_func, glbls, typingctx=None, targetctx=None, # perform type inference if typingctx is available and update type # data structures typemap and calltypes if typingctx: - f_typemap, f_return_type, f_calltypes, _ = typed_passes.type_inference_stage( - typingctx, targetctx, f_ir, arg_typs, None) + f_typemap, f_return_type, f_calltypes, _ = ( + typed_passes.type_inference_stage( + typingctx, + targetctx, + f_ir, + arg_typs, + None, + ) + ) # remove argument entries like arg.a from typemap arg_names = [vname for vname in f_typemap if vname.startswith(arg.)] for a in arg_names: ",Maybe create a temporary for the outputs and subsequently unpack? The braces around the function call seems strange.
"@@ -660,8 +660,16 @@ public abstract class HoodieTable<T extends HoodieRecordPayload, I, K, O> implem public HoodieTableMetadata metadata() { if (metadata == null) { - metadata = HoodieTableMetadata.create(hadoopConfiguration.get(), config.getBasePath(), config.getSpillableMapBasePath(), - config.useFileListingMetadata(), config.getFileListingMetadataVerify(), config.isMetricsOn(), config.shouldAssumeDatePartitioning()); + HoodieEngineContext engineContext = context; + if (engineContext == null) { + // This is to handle scenarios where this is called at the executor tasks which do not have access + // to engine context, and it ends up being null (as its not serializable and marked transient here). + engineContext = new HoodieLocalEngineContext(hadoopConfiguration.get()); + } + + metadata = HoodieTableMetadata.create(engineContext, config.getBasePath(), config.getSpillableMapBasePath(), + config.useFileListingMetadata(), config.getFileListingMetadataVerify(), config.isMetricsOn(), + config.shouldAssumeDatePartitioning()); } return metadata; } ",a more elegant way to do this would be through a `getEngineContext()` method that reinits lazily
"@@ -168,7 +168,7 @@ func (korm ORM) CreateEthTransactionForUpkeep(sqlDB *sql.DB, upkeep UpkeepRegist if etx.ID == 0 { return etx, errors.New(a keeper eth_tx with insufficient eth is present, not creating a new eth_tx) } - err = korm.DB.First(&etx).Error + err = tx.First(&etx).Error if err != nil { return etx, errors.Wrap(err, keeper find eth_tx after inserting) } ",This sort of mistake might be best avoided by encapsulating this logic in one place
"@@ -104,7 +104,7 @@ const readCache = new Map(); * * @param {string} path * @param {string=} optionsHash - * @return {{contents: string, hash: string}} + * @return {Promise<{contents: string, hash: string}>} */ function batchedRead(path, optionsHash) { let read = readCache.get(path); ",This type had been incorrect
"@@ -78,7 +78,7 @@ <%= hidden_field_tag :my_module_id, @my_module.id %> <%= f.hidden_field :project_id, :value => @my_module.experiment.project.id %> <%= f.hidden_field :name, :value => t(tags.create.new_name) %> - <%= f.hidden_field :color, :value => TAG_COLORS[0] %> + <%= f.hidden_field :color, :value => <%= Constants::TAG_COLORS[0] %> %> <%= f.button class: btn btn-primary do %> <span class=glyphicon glyphicon-tag></span> <span class=hidden-xs><%=t experiments.canvas.modal_manage_tags.create_new %></span> ",here!!!! change to value: Constants::TAG_COLORS[0]
"@@ -2016,7 +2016,9 @@ void WalletImpl::doRefresh() } } catch (const std::exception &e) { setStatusError(e.what()); - } + break; + }while(!rescan && (rescan=m_refreshShouldRescan.exchange(false))); // repeat if not rescanned and rescan was requested + if (m_wallet2Callback->getListener()) { m_wallet2Callback->getListener()->refreshed(); } ",added: stop loop on exception
"@@ -77,6 +77,8 @@ func (s *Secret) Validate() error { case service_now: errors = requiredField(kvMap[username], requiredServiceNowUsernameError, errors) errors = requiredField(kvMap[password], requiredServiceNowPasswordError, errors) + case chef-server: + errors = requiredField(kvMap[key], requiredChefServerOrganizationKeyError, errors) } // Eventually I'd like to switch our error handling to be handle an aggregation of errors ","- As discussed have added type `chef-server` but it subject to change. - At present, it's required to add validation for admin `key` only."
"@@ -57,10 +57,10 @@ class VersionGuesser } /** - * @param array $packageConfig - * @param string $path Path to guess into + * @param array<string, mixed> $packageConfig + * @param string $path Path to guess into * - * @return null|array versionData, 'version', 'pretty_version' and 'commit' keys, if the version is a feature branch, 'feature_version' and 'feature_pretty_version' keys may also be returned + * @phpstan-return Version|null */ public function guessVersion(array $packageConfig, $path) { ",I would keep the `@return null|array` for other tooling than phpstan
"@@ -17,10 +17,15 @@ export const GTAG_CONFIG = /** @type {!JsonObject} */ ({ 'configRewriter': { 'url': 'https://www.googletagmanager.com/gtag/amp', + 'varGroups': { + 'dns': { + 'dr': 'DOCUMENT_REFERRER', + 'dl': 'SOURCE_URL', + }, + }, }, 'vars': { 'eventValue': '0', - 'documentLocation': 'SOURCE_URL', 'clientId': 'CLIENT_ID(AMP_ECID_GOOGLE,,_ga)', 'dataSource': 'AMP', 'anonymizeIP': 'aip', ",Is this the group we wanted enabled by default?
"@@ -126,7 +126,6 @@ ik_rec_free(struct btr_instance *tins, struct btr_record *rec, void *args) umem_id_t *rec_ret = (umem_id_t *) args; /** Provide the buffer to user */ *rec_ret = rec->rec_mmid; - rec->rec_mmid = UMMID_NULL; return 0; } utest_free(ik_utx, irec->ir_val_mmid); ","Is it redundant or any side-effect? As my understand, if the caller offer the @args parameter, then it needs to free the space (pointed by rec->rec_mmid) by itself. The @rec will be freed after ik_rec_free() returned. So whether reset the rec_mmid or not will not cause correctness issue, right?"
"@@ -23,6 +23,16 @@ module AuthenticationHelper Authentication::Providers.enabled_for_user(user) end + def signed_up_with(user = current_user) + providers = Authentication::Providers.enabled_for_user(user) + + # If the user did not authenticate with any provider, they signed up with an email. + auth_method = providers.presence ? providers.map(&:official_name).to_sentence : Email & Password + verb = providers.size > 1 ? any of those : that + + Reminder: you used #{auth_method} to authenticate your account, so please use #{verb} to sign in if prompted. + end + def available_providers_array Authentication::Providers.available.map(&:to_s) end ","I don't know why we used to render `Reminder: You used`, but I took the liberty of lowercasing it because...grammar."
"@@ -39,6 +39,7 @@ import org.apache.zeppelin.helium.HeliumPackage; import org.apache.zeppelin.interpreter.InterpreterGroup; import org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry; import org.apache.zeppelin.interpreter.thrift.InterpreterCompletion; +import org.apache.zeppelin.rest.message.InterpreterSettingListForNoteBind; import org.apache.zeppelin.user.AuthenticationInfo; import org.apache.zeppelin.interpreter.InterpreterOutput; import org.apache.zeppelin.interpreter.InterpreterResult; ",I think you'd better move this class into proper one. It's used in binding method only.
"@@ -278,7 +278,7 @@ void InstanceSaveManager::LoadResetTimes() continue; // the reset_delay must be at least one day - uint32 period = mapDiff->resetTime; + uint32 period = uint32(((mapDiff->resetTime * sWorld->getRate(RATE_INSTANCE_RESET_TIME))/DAY) * DAY); if (period < DAY) period = DAY; ",Whats going on here? `((X * Y)/Z) * Z` = `X * Y` is it not?
"@@ -1534,13 +1534,6 @@ $config['os'][$os]['icon'] = 'hp'; $config['os'][$os]['over'][0]['graph'] = 'device_toner'; $config['os'][$os]['over'][0]['text'] = 'Toner'; -$os = 'richoh'; -$config['os'][$os]['group'] = 'printer'; -$config['os'][$os]['text'] = 'Ricoh Printer'; -$config['os'][$os]['type'] = 'printer'; -$config['os'][$os]['over'][0]['graph'] = 'device_toner'; -$config['os'][$os]['over'][0]['text'] = 'Toner'; - $os = 'okilan'; $config['os'][$os]['group'] = 'printer'; $config['os'][$os]['text'] = 'OKI Printer'; ",Unfortunately you've removed the richoh code here :( If you can add this back in pls.
"@@ -0,0 +1,18 @@ +﻿// Licensed to the .NET Foundation under one or more agreements. +// The .NET Foundation licenses this file to you under the MIT license. +// See the LICENSE file in the project root for more information. + +using System; + +internal static partial class Interop +{ + internal static partial class User32 + { + public struct COPYDATASTRUCT + { + public UIntPtr dwData; + public uint cbData; + public IntPtr lpData; + } + } +} ",Why have these types been changed?
"@@ -625,8 +625,9 @@ def get_sqd_params(rawfile): return sqd -def read_raw_kit(input_fname, mrk=None, elp=None, hsp=None, stim='>', - slope='-', stimthresh=1, preload=False, verbose=None): +def read_raw_kit(input_fname, mrk=None, mrk2=None, elp=None, hsp=None, + stim='>', slope='-', stimthresh=1, preload=False, + verbose=None): Reader function for KIT conversion to FIF Parameters ","A problem with inserting new arguments is that it breaks backwards compatibility in cases where people call the function with non keyword arguments (`read_raw_kit(input_fname, mrk, elp, ...)`). Before making this change we should be sure that nobody is using this function in their scripts that way. Otherwise the safer alternative is to add new arguments at the end."
"@@ -509,7 +509,7 @@ class Yoast_Notification_Center_Test extends WPSEO_UnitTestCase { $a = new Yoast_Notification( 'a' ); $this->assertFalse( Yoast_Notification_Center::maybe_dismiss_notification( $a ) ); - $b = new Yoast_Notification( 'b', array( 'id' => uniqid( 'id' ) ) ); + $b = new Yoast_Notification( 'b', [ 'id' => uniqid( 'id' ) ] ); $this->assertFalse( Yoast_Notification_Center::maybe_dismiss_notification( $b ) ); } ",Avoid variables with short names like $b. Configured minimum length is 3.
"@@ -127,6 +127,9 @@ func addDefaultingFuncs(scheme *runtime.Scheme) { } }, func(obj *DNSConfig) { + if len(obj.ClusterDomain) == 0 { + obj.ClusterDomain = cluster.local + } if len(obj.BindNetwork) == 0 { obj.BindNetwork = tcp4 } ",@smarterclayton should this inform the routing config subdomain or leave that default as is?
"@@ -295,6 +295,12 @@ func NewApplication(config *orm.Config, ethClient eth.Client, advisoryLocker pos } app.HeadTracker = services.NewHeadTracker(store, headTrackables) + head, err := app.HeadTracker.HighestSeenHeadFromDB() + if err != nil { + return nil, err + } + logBroadcaster.SetLatestHeadFromStorage(head) + return app, nil } ",I think a better place for this would be inside of `broadcaster#Start()`
"@@ -232,13 +232,15 @@ func (a *AuthzServer) getAllowedMap( // Fetches the id of the current user PLUS the team ids for that user subjects := auth_context.FromContext(ctx).Subjects - resp, err := a.filterHandler.FilterAuthorizedPairs(ctx, subjects, mapByResourceAndAction, methodsInfo) + inputPairs := pairs.GetKeys(mapByResourceAndAction) + + filteredPairs, err := a.introspectionHandler.FilterAuthorizedPairs(ctx, subjects, inputPairs) if err != nil { log.WithError(err).Debug(Error on client.FilterAuthorizedPairs) return nil, err } endpointMap, err := pairs.GetEndpointMapFromResponse( - resp.Pairs, resp.MethodsInfo, resp.MapByResourceAndAction, true) + filteredPairs, methodsInfo, mapByResourceAndAction, true) if err != nil { log.WithError(err).Debug(Error on pairs.GetEndpointMapFromResponse) return nil, err ","There's only one set of `mapByResourceAndAction` and `methodsInfo`, so they're no longer passed in, but retrieved in the introspection code."
"@@ -62,7 +62,7 @@ namespace Dynamo.Search /// <summary> /// Utility methods for categorizing search elements. /// </summary> - public static class SearchCategory + public static class SearchCategoryUtil { private sealed class SearchCategoryImpl<TEntry> : ISearchCategory<TEntry> { ",This must be renamed as soon as LibraryUI introduces class with identical name `SearchCategory`.
"@@ -6,11 +6,13 @@ import os import re import socket -import OpenSSL +from OpenSSL import SSL, crypto # type: ignore # https://github.com/python/typeshed/issues/2052 import josepy as jose +from typing import Callable, Text, Union # pylint: disable=unused-import from acme import errors +from acme import str_utils logger = logging.getLogger(__name__) ",Do we get any benefit from only putting `type: ignore` for `SSL` if there is a stub for `crypto`?
"@@ -8,6 +8,14 @@ class Jetpack_Sync_Module_Themes extends Jetpack_Sync_Module { public function init_listeners( $callable ) { add_action( 'switch_theme', array( $this, 'sync_theme_support' ) ); add_action( 'jetpack_sync_current_theme_support', $callable ); + + // Sidebar updates. + add_action( update_option_sidebars_widgets, array( $this, 'sync_sidebar_widgets_actions' ), 10, 2 ); + add_action( 'jetpack_widget_added', $callable, 10, 2 ); + add_action( 'jetpack_widget_removed', $callable, 10, 2 ); + add_action( 'jetpack_widget_moved_to_inactive', $callable ); + add_action( 'jetpack_cleared_inactive_widgets', $callable ); + add_action( 'jetpack_widget_reordered', $callable ); } public function init_full_sync_listeners( $callable ) { ",this could use single quotes
"@@ -356,10 +356,16 @@ class FixedDialogTeacher(Teacher): if loop is None: loop = self.training if self.random: - new_idx = random.randrange(num_eps) + new_idx = ( + random.randrange( + num_eps // self.dws + int(num_eps % self.dws > self.rank) + ) + * self.dws + + self.rank + ) else: with self._lock(): - self.index.value += 1 + self.index.value += self.dws if loop: self.index.value %= num_eps new_idx = self.index.value ",what is this computation exactly?
"@@ -212,10 +212,7 @@ void MapgenV7Params::writeParams(Settings *settings) const int MapgenV7::getSpawnLevelAtPoint(v2s16 p) { - // Base terrain calculation - s16 y = baseTerrainLevelAtPoint(p.X, p.Y); - - // If enabled, check if inside a river + // If rivers are enabled, first check if in a river if (spflags & MGV7_RIDGES) { float width = 0.2; float uwatern = NoisePerlin2D(&noise_ridge_uwater->np, p.X, p.Y, seed) * 2; ",seems this loop is a good canditate to be replaced with a for loop
"@@ -155,7 +155,8 @@ func (a *ACME) CreateClusterConfig(leadership *cluster.Leadership, tlsConfig *tl } a.store = datastore - a.challengeProvider = &challengeProvider{store: a.store} + a.challengeTLSProvider = &challengeTLSProvider{store: a.store} + a.challengeHTTPProvider = &challengeHTTPProvider{store: a.store} ticker := time.NewTicker(24 * time.Hour) leadership.Pool.AddGoCtx(func(ctx context.Context) { ",I'm not in love with instantiating `challengeTLSProvider` & `challengeHTTPProvider` here.
"@@ -259,6 +259,18 @@ export class VideoContainer extends LargeContainer { this._resizeListeners = new Set(); this.$video[0].onresize = this._onResize.bind(this); + + if (isTestModeEnabled(APP.store.getState())) { + const cb = name => APP.store.dispatch(updateLastLargeVideoMediaEvent(name)); + const containerHandlers = {}; + + containerEvents.forEach(event => { + containerHandlers[event] = cb.bind(this, event); + }); + containerEvents.forEach(event => { + this.$video[0].addEventListener(event, containerHandlers[event]); + }); + } } /** ","I don't think you need a second loop here. You can add the code for adding a listener in the previous one, isn't it?"
"@@ -120,7 +120,7 @@ void Power::check() { } void Power::power_on() { - lastPowerOn = millis(); + lastPowerOn = millis() + 1; // add 1 because sometimes millis() return 0 if (!powersupply_on) { PSU_PIN_ON(); safe_delay(PSU_POWERUP_DELAY); ","The `millis()` function should only return 0 before the timer starts, and then only once every 49 days. And of course, 0xFFFFFFFF + 1 is also 0."
"@@ -71,6 +71,12 @@ func BinVersion() (string, error) { } func init() { + absPath, err := exec.LookPath(git) + if err != nil { + panic(fmt.Sprintf(Git not found: %v, err)) + } + GitExecutable = absPath + gitVersion, err := BinVersion() if err != nil { panic(fmt.Sprintf(Git version missing: %v, err)) ",I think this is unnecessary and we should change many other places git command invokes and add an option on app.ini.
"@@ -4396,6 +4396,7 @@ bool Blockchain::check_blockchain_pruning() return m_db->check_pruning(); } //------------------------------------------------------------------ +// returns min(Mb, 2Ml) as per https://github.com/ArticMine/Monero-Documents/blob/master/MoneroScaling2021-02.pdf from HF_VERSION_LONG_TERM_BLOCK_WEIGHT uint64_t Blockchain::get_next_long_term_block_weight(uint64_t block_weight) const { PERF_TIMER(get_next_long_term_block_weight); ","This is only true for `hf_version >= HF_VERSION_2021_SCALING`, otherwise it is `min(Mb, 1.4*Ml)`."
"@@ -989,8 +989,8 @@ define([ } var viewExtentCVCartographic = new Cartographic(); - var viewExtentCVNorthEast = Cartesian4.clone(Cartesian4.UNIT_W); - var viewExtentCVSouthWest = Cartesian4.clone(Cartesian4.UNIT_W); + var viewExtentCVNorthEast = new Cartesian3(); + var viewExtentCVSouthWest = new Cartesian3(); var viewExtentCVTransform = new Matrix4(); function extentCameraPositionColumbusView(camera, extent, projection, result, positionOnly) { var north = extent.north; ","You can remove these too. Below do: `var northEast = projection.project(cart, viewExtentCVNorthEast);` and remove `position`. Same thing for `southWest`."
"@@ -79,4 +79,4 @@ foreach ($slas as $sla) { echo '</div>'; } -$pagetitle[] = 'SLAs'; +$pagetitle[] = 'SLAs'; \ No newline at end of file ","Oopsie, files should have a blank line at the end."
"@@ -705,8 +705,16 @@ get_object_layout(struct pl_jump_map *jmap, struct pl_obj_layout *layout, D_DEBUG(DB_PL, Target unavailable  DF_TARGET . Adding to remap_list: fail cnt %d\n, DP_TARGET(target), fail_tgt_cnt); - rc = remap_alloc_one(remap_list, k, target, - false); + + if (remap_grp_used == NULL) { + remap_grp_used = remap_gpu_alloc_one(&dgu_remap_list, + dom_cur_grp_used); + if (remap_grp_used == NULL) + D_GOTO(out, rc = -DER_NOMEM); + realloc_grp_used = true; + } + + rc = remap_alloc_one(remap_list, k, target, false, remap_grp_used); if (rc) D_GOTO(out, rc); ","It's really hard to follow this, why don't you just simply allocate per-RDG used domain bitmap for all groups at the very beginning (Just like what we did for other bitmaps)?"
"@@ -35,7 +35,7 @@ let PropertyRulesDef; */ const GLOBAL_PROPERTY_RULES = { 'class': { - blacklistedValueRegex: '(^|\\W)i-amphtml-', + denylistedValueRegex: '(^|\\W)i-amphtml-', }, 'hidden': null, 'text': null, ","/cc @choumx I can't tell if this value is actually exposed to publishers. If so, this isn't safe to change."
"@@ -178,9 +178,13 @@ class PickDropChannelsMixin(object): inst = self.copy() if copy else self idx = [inst.ch_names.index(c) for c in ch_names if c in inst.ch_names] + if hasattr(inst, 'picks'): inst.picks = [inst.picks[k] for k in idx] + if hasattr(inst, 'cals'): + inst.cals = inst.cals[idx] + inst.info = pick_info(inst.info, idx, copy=False) my_get = lambda attr: getattr(inst, attr, None) ",@agramfort I like this better since it's a separate issue from preloading. WDYT? cc @dengemann
"@@ -52,9 +52,8 @@ class DataIterator: @classmethod def from_params(cls, params: Params): - from allennlp.experiments.registry import Registry # TODO(Mark): The adaptive iterator will need a bit of work here, # to retrieve the scaling function etc. - iterator_type = params.pop_choice(type, Registry.list_data_iterators()) - return Registry.get_data_iterator(iterator_type)(**params.as_dict()) # type: ignore + iterator_type = params.pop_choice(type, cls.list_available()) + return cls.by_name(iterator_type)(**params.as_dict()) # type: ignore ","Do we actually need the `# type: ignore` here? We don't have it in other places. Also, there is no listed return type for the method - maybe that's the reason there was a type failure?"
"@@ -429,6 +429,11 @@ static int def_load_bio(CONF *conf, BIO *in, long *line) if (!str_copy(conf, psection, &include, p)) goto err; + if (conf->flag_abspath && !ossl_is_absolute_path(include)) { + ERR_raise(ERR_LIB_CONF, CONF_R_RELATIVE_PATH); + goto err; + } + if (include_dir != NULL && !ossl_is_absolute_path(include)) { size_t newlen = strlen(include_dir) + strlen(include) + 2; ",I'd recommend considering semantics that enforces the absolute path check only after prepending the include_dir. IMO it would be much more useful.
"@@ -83,9 +83,6 @@ func testAPIDeleteOAuth2Application(t *testing.T) { oldApp := models.AssertExistsAndLoadBean(t, &models.OAuth2Application{ UID: user.ID, Name: test-app-1, - RedirectURIs: []string{ - http://www.google.com, - }, }).(*models.OAuth2Application) urlStr := fmt.Sprintf(/api/v1/user/applications/oauth2/%d?token=%s, oldApp.ID, token) ",reason to remove this?
"@@ -1,9 +1,16 @@ import logging +from dvc.exceptions import InvalidArgumentError + logger = logging.getLogger(__name__) def _update_import_on_remote(stage, remote, jobs): + if stage.is_repo_import: + raise InvalidArgumentError( + Can't update a repo import with --to-remote + ) + url = stage.deps[0].path_info.url stage.outs[0].hash_info = stage.repo.cloud.transfer( url, jobs=jobs, remote=remote, command=update ",~~What's a repo import?~~ Got it.
"@@ -175,12 +175,16 @@ func determineSeed(shoot *gardencorev1beta1.Shoot, seedLister gardencorelisters. return nil, err } - filteredSeeds, err := filterSeedsMatchingSeedSelector(cloudProfile, seedList) + seedsMatchingCloudProfileSelector, err := filterSeedsMatchingSeedSelector(seedList, cloudProfile.Spec.SeedSelector, CloudProfile) + if err != nil { + return nil, err + } + seedsMatchingShootSelector, err := filterSeedsMatchingSeedSelector(seedsMatchingCloudProfileSelector, shoot.Spec.SeedSelector, Shoot) if err != nil { return nil, err } - candidates, err := getCandidates(shoot, filteredSeeds, strategy) + candidates, err := getCandidates(shoot, seedsMatchingShootSelector, strategy) if err != nil { return nil, err } ","Hmm, this will yield an unhelpful message, if there are Seeds that are matching the `seedSelector` of the Shoot, but not the one of the CloudProfile. I.e. it will say none out of the <n> seeds has the matching labels required by seed selector of 'Shoot' although, all Seeds might actually match the Shoot's selector. Can you evaluate both selectors individually and then combine the filtered set of Seeds here to be able to give a more helpful error message?"
"@@ -741,7 +741,17 @@ static int check_id(X509_STORE_CTX *ctx) if (!check_id_error(ctx, X509_V_ERR_IP_ADDRESS_MISMATCH)) return 0; } - return 1; + + /* + * When verifying SSL server certificates, require that an + * identity be set for validating the certificate subject unless + * the X509_V_FLAG_ALLOW_NO_SUBJECT_CHECK flags is set instead. + */ + if (vpm->purpose != X509_PURPOSE_SSL_SERVER + || (vpm->flags & X509_V_FLAG_ALLOW_NO_SUBJECT_CHECK)) + return 1; + + return (vpm->hosts || vpm->email || vpm->ip); } static int check_trust(X509_STORE_CTX *ctx, int num_untrusted) ","Instead of `vpm->purpose != X509_PURPOSE_SSL_SERVER` it would have to be `vpm->purpose == X509_PURPOSE_SSL_CLIENT`. Otherwise, this breaks `X509_PURPOSE_SMIME_SIGN` and possibly others."
"@@ -236,6 +236,7 @@ func (b *BleveIndexer) Search(keyword string, repoIDs []int64, limit, start int) for _, repoID := range repoIDs { repoQueriesP = append(repoQueriesP, numericEqualityQuery(repoID, RepoID)) } + index, _ := strconv.ParseInt(keyword, 10, 64) repoQueries := make([]query.Query, len(repoQueriesP)) for i, v := range repoQueriesP { repoQueries[i] = query.Query(v) ",Maybe keyword is a string?
"@@ -329,13 +329,10 @@ func (a *apiServer) upsertWorkersForPipeline(pipelineInfo *pps.PipelineInfo) err workerRc, err := rc.Get( ppsutil.PipelineRcName(pipelineInfo.Pipeline.Name, pipelineInfo.Version), metav1.GetOptions{}) - if err == nil { - if (workerRc.Spec.Template.Spec.Containers[0].Resources.Requests == nil) && *workerRc.Spec.Replicas == 1 { - parallelism = 1 - resourceRequests = nil - resourceLimits = nil - } + if err != nil { + log.Errorf(error from rc.Get: %v, err) } + // TODO figure out why the statement below runs even if there's an error // rc was made by a previous version of pachyderm so we delete it if workerRc.ObjectMeta.Labels[version] != version.PrettyVersion() { if err := a.deleteWorkersForPipeline(pipelineInfo); err != nil { ",Shouldn't we be returning the error if there is an error here? I noticed you have a todo below to find out why the statement below is running when there is an error.
"@@ -1018,8 +1018,17 @@ def while_loop(cond, body, loop_vars, is_test=False, name=None): return loop_vars while_loop_block = While(pre_cond, is_test, name) + with_mutable_vars = assert_with_mutable_vars(loop_vars) with while_loop_block.block(): - output_vars = body(*loop_vars) + # If a variable with mutable type is included in vars, like `dict/list`, + # modifying them in the body function will cause origin variable be modified + # synchronously. This will raise an assignment error out of while block. + # Here we make a copy of the mutable object to aviod this problem. + if with_mutable_vars: + new_loop_vars = copy_mutable_vars(loop_vars) + output_vars = body(*new_loop_vars) + else: + output_vars = body(*loop_vars) if not isinstance(output_vars, (list, tuple)): output_vars = [output_vars] if len(output_vars) != len(loop_vars): ",Grammatical error: cause origin variable be modified to cause origin variable to be modified
"@@ -39,11 +39,12 @@ KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(COARSE_VELOCITY) KRATOS_CREATE_VARIABLE(double,FIC_BETA) // Adjoint variables -KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(ADJOINT_FLUID_VECTOR_1) -KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(ADJOINT_FLUID_VECTOR_2) -KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(ADJOINT_FLUID_VECTOR_3) KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(AUX_ADJOINT_FLUID_VECTOR_1) +KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS_WITH_TIME_DERIVATIVE(ADJOINT_FLUID_VECTOR_3, AUX_ADJOINT_FLUID_VECTOR_1); +KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS_WITH_TIME_DERIVATIVE(ADJOINT_FLUID_VECTOR_2, ADJOINT_FLUID_VECTOR_3); +KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS_WITH_TIME_DERIVATIVE(ADJOINT_FLUID_VECTOR_1, ADJOINT_FLUID_VECTOR_2); KRATOS_CREATE_VARIABLE(double, ADJOINT_FLUID_SCALAR_1) +KRATOS_CREATE_VARIABLE(Vector, PRIMAL_RELAXED_SECOND_DERIVATIVE_VALUES) // Non-Newtonian constitutive relations KRATOS_CREATE_VARIABLE(double, REGULARIZATION_COEFFICIENT) ",mmm... are these time derivatives?
"@@ -1,12 +1,15 @@ // Licensed to the .NET Foundation under one or more agreements. // The .NET Foundation licenses this file to you under the MIT license. +using System; + namespace System.Configuration { public enum SettingsSerializeAs { String = 0, Xml = 1, + [Obsolete(Obsoletions.BinaryFormatterMessage + @. Consider using Xml instead., false)] Binary = 2, ProviderSpecific = 3 } ",This is a change to public surface area. I would have expected the ref to also be updated with this.
"@@ -3130,7 +3130,7 @@ void ByteCodeGenerator::ProcessCapturedSym(Symbol *sym) FuncInfo *funcHome = sym->GetScope()->GetFunc(); FuncInfo *funcChild = funcHome->GetCurrentChildFunction(); - Assert(sym->NeedsSlotAlloc(funcHome) || sym->GetIsGlobal() || sym->GetIsModuleImport()); + Assert(sym->NeedsSlotAlloc(funcHome) || sym->GetIsGlobal() || sym->GetIsModuleImport() || sym->GetIsModuleExportStorage()); // If this is not a local property, or not all its references can be tracked, or // it's not scoped to the function, or we're in debug mode, disable the delayed capture optimization. ",do you need to make change to ByteCodeGenerator::InitBlockScopedNonTemps ? #Resolved
"@@ -247,6 +247,7 @@ define([ } var i; + var j; var len; // Clear the render list. ","At some point in this function, the quadtree should know (or could know) if we reached a leaf node, and we could use this to let the tile's billboards know that we reached the maximum level and they don't need updates."
"@@ -3133,6 +3133,16 @@ class FirstPass(NodeVisitor): func._fullname = self.sem.qualified_name(func.name()) if kind == GDEF: self.sem.globals[func.name()] = SymbolTableNode(kind, func, self.sem.cur_mod_id) + if func.impl: + # Also analyze the function body (in case there are conditional imports). + sem = self.sem + sem.function_stack.append(func.impl) + sem.errors.push_function(func.name()) + sem.enter() + func.impl.body.accept(self) + sem.leave() + sem.errors.pop_function() + sem.function_stack.pop() def visit_class_def(self, cdef: ClassDef) -> None: kind = self.kind_by_scope() ",Hmm... Refactor this to merge with the nearly identical block in the previous method?
"@@ -230,7 +230,7 @@ int d_fault_attr_err_code(uint32_t fault_id) { struct d_fault_attr_t *fault_attr; - uint32_t err_code; + int32_t err_code; fault_attr = d_fault_attr_lookup(fault_id); if (fault_attr == NULL) { ",Also don't need the case in return;
"@@ -382,11 +382,9 @@ static int rsa_get_ctx_params(void *vprsactx, OSSL_PARAM *params) } p = OSSL_PARAM_locate(params, OSSL_ASYM_CIPHER_PARAM_OAEP_LABEL); - if (p != NULL && !OSSL_PARAM_set_octet_ptr(p, prsactx->oaep_label, 0)) - return 0; - - p = OSSL_PARAM_locate(params, OSSL_ASYM_CIPHER_PARAM_OAEP_LABEL_LEN); - if (p != NULL && !OSSL_PARAM_set_size_t(p, prsactx->oaep_labellen)) + if (p != NULL && + !OSSL_PARAM_set_octet_ptr(p, prsactx->oaep_label, + prsactx->oaep_labellen)) return 0; p = OSSL_PARAM_locate(params, OSSL_ASYM_CIPHER_PARAM_TLS_CLIENT_VERSION); ",I wonder if this should really be an octet_string instead of an octet_ptr?
"@@ -163,6 +163,14 @@ export class UrlReplacements { return removeFragment(info.sourceUrl); })); + this.setAsync_('SOURCE_URL', () => { + return getTrackImpressionPromise().then( + this.getDocInfoValue_.bind(this, info => { + return removeFragment(info.sourceUrl); + }) + ); + }); + // Returns the host of the Source URL for this AMP document. this.set_('SOURCE_HOST', this.getDocInfoValue_.bind(this, info => { return parseUrl(info.sourceUrl).host; ",I think there is a problem here: Doc info eagerly reads `location.href` and never reads it again after.
"@@ -106,6 +106,16 @@ class Search_Replace_Command extends WP_CLI_Command { return $wpdb->get_col( $wpdb->prepare( SHOW TABLES LIKE %s, like_escape( $prefix ) . '%' ) ); } + private static function fast_handle_col( $col, $table, $old, $new, $dry_run ) { + global $wpdb; + + if ( $dry_run ) { + return $wpdb->get_var( $wpdb->prepare( SELECT COUNT(`$col`) FROM `$table` WHERE `$col` LIKE %s;, '%' . like_escape( esc_sql( $old ) ) . '%' ) ); + } else { + return $wpdb->query( $wpdb->prepare( UPDATE `$table` SET `$col` = REPLACE(`$col`, %s, %s);, $old, $new ) ); + } + } + private static function handle_col( $col, $primary_keys, $table, $old, $new, $dry_run, $recurse_objects ) { global $wpdb; ",`fast_handle_col` should be `sql_handle_col()`. Let's also rename the other method.
"@@ -31,6 +31,7 @@ public class ProjectLaunchImplTest extends TestCase { public static void testParseSystemCapabilities() throws Exception { Workspace ws = Workspace.getWorkspace(IO.getFile(test/ws)); Project project = ws.getProject(p1); + project.getTarget().mkdirs(); String systemCaps = null; try { ",Do you really need to mkdirs() here? I would think you just need `project.prepare()` which will make that target folder if necessary. Can you try that instead?
"@@ -405,13 +405,8 @@ int dgst_main(int argc, char **argv) } else { const char *sig_name = NULL; if (!out_bin) { - if (sigkey != NULL) { - const EVP_PKEY_ASN1_METHOD *ameth; - ameth = EVP_PKEY_get0_asn1(sigkey); - if (ameth) - EVP_PKEY_asn1_get0_info(NULL, NULL, - NULL, NULL, &sig_name, ameth); - } + if (sigkey != NULL) + sig_name = EVP_PKEY_get0_first_alg_name(sigkey); } ret = 0; for (i = 0; i < argc; i++) { ","This is very dodgy. One alias to the HMAC signature algorithm and the test may randomly go **BAMF**, because you might end up with, oh I don't know, id-Hmac. This is a case where the application has more accurate knowledge than libcrypto, as it really has *all* the data it needs to know exactly what names it's asking for. It's quite a simple program after all..."
"@@ -165,7 +165,9 @@ define([ that.state = Cesium3DTileContentState.FAILED; that._readyPromise.reject(error); }); + return true; } + return false; }; /** ","Since we prefer early return, flip the above `if(defined(promise))` check and return false immediately to make the code cleaner."
"@@ -350,7 +350,7 @@ def test_generalization_across_time(): reg = KernelRidge() def scorer_proba(y_true, y_pred): - roc_auc_score(y_true, y_pred[:, 0]) + return roc_auc_score(y_true, y_pred[:, 0]) # We re testing 3 scenario: default, classifier + predict_proba, regressor scorers = [None, scorer_proba, scorer_regress] ",fixes missing return in previous PR
"@@ -225,6 +225,12 @@ func resourceCloudFunctionsCreate(d *schema.ResourceData, meta interface{}) erro if err != nil { return err } + // We do this extra validation here since most regions are not valid, and the + // error message that Cloud Functions has for wrong region is not specific. + _, errs := validCloudFunctionRegion(region, region) + if len(errs) > 0 { + return errs[0] + } cloudFuncId := &cloudFunctionId{ Project: project, ","I see, the provider-level region skips the field validation. May be add a mention about this here?"
"@@ -1,4 +1,6 @@ class DeepLinksController < ApplicationController + AASA_PATHS = [/*, NOT /users/auth/*].freeze + def mobile; end # Apple Application Site Association - based on Apple docs guidelines ","_I think_ this is the correct way to freeze this array, but I'm open to any suggestions to improve it (or fix it altogether if I'm not even close to how it should be   )"
"@@ -84,7 +84,6 @@ class JavaThriftLibrary(JvmTarget): def include_paths(self): return self._include_paths - # TODO(Eric Ayers) As of 2/5/2015 this call is DEPRECATED and should be removed soon @property def is_thrift(self): return True ","Perhaps instead of adding a new call for is_thrift, this could move to a different pattern. Maybe it could look for the class instead via isinstance. It looks like the deprecation plan for the associated `is_*` methods involved types via marker mixins."
"@@ -224,6 +224,16 @@ class Environment: self._values[k] = new_value return self + def to_dict(self): + ret = OrderedDict() + for varname, varvalues in self._values.items(): + value = self._format_value(varname, varvalues, , os.pathsep) + ret[varname] = value + return ret + + def apply(self): + return _environment_add(self.to_dict()) + class ProfileEnvironment: def __init__(self): ","Maybe for the variable access we should provide access to the structure? Like if it is a list of items, it should be a list of items, not always a string that they will need to parse? I also understand the reason for always a string, to resemble the native env-vars, just a question."
"@@ -147,9 +147,9 @@ public class AWSJobConfigurationManager extends JobConfigurationManager { if (jobConfigDir.exists()) { LOGGER.info(Loading job configurations from  + jobConfigDir); final Properties properties = new Properties(); - properties.setProperty(ConfigurationKeys.JOB_CONFIG_FILE_DIR_KEY, jobConfigDir.getAbsolutePath()); + properties.setProperty(ConfigurationKeys.JOB_CONFIG_FILE_GENERAL_PATH_KEY, jobConfigDir.getAbsolutePath()); - final List<Properties> jobConfigs = SchedulerUtils.loadJobConfigs(properties); + final List<Properties> jobConfigs = SchedulerUtils.loadGenericJobConfigs(properties); LOGGER.info(Loaded  + jobConfigs.size() +  job configuration(s)); for (Properties config : jobConfigs) { LOGGER.debug(Config value:  + config); ",Please also change the config property name in conf/aws/application.conf
"@@ -26,10 +26,6 @@ namespace Microsoft.Xna.Framework.Graphics this.VertexCount = vertexCount; this.BufferUsage = bufferUsage; - // Make sure the graphics device is assigned in the vertex declaration. - if (vertexDeclaration.GraphicsDevice != graphicsDevice) - vertexDeclaration.GraphicsDevice = graphicsDevice; - _isDynamic = dynamic; PlatformConstruct(); ",We could live with this maybe... although I expect XNA does set it. I wonder how many people have as a hack assumed they could fetch the graphics device via `VertexDeclaration.GraphicsDevice`.
"@@ -479,7 +479,7 @@ All jobs created by a pipeline will create commits in the pipeline's repo. createPipeline.Flags().StringVarP(&pipelinePath, file, f, -, The file containing the pipeline, it can be a url or local file. - reads from stdin.) createPipeline.Flags().BoolVarP(&pushImages, push-images, p, false, If true, push local docker images into the cluster registry.) createPipeline.Flags().StringVarP(&registry, registry, r, docker.io, The registry to push images to.) - createPipeline.Flags().StringVarP(&username, username, u, , The username to push images as, defaults to your OS username.) + createPipeline.Flags().StringVarP(&username, username, u, , The username to push images as, defaults to your docker username.) createPipeline.Flags().StringVarP(&password, password, , , Your password for the registry being pushed to.) var reprocess bool ","Small nit: we should probably be prompting for password interactively by default, rather than asking people to input it as part of the command"
"@@ -1975,6 +1975,18 @@ def find_bad_channels_maxwell( .. versionadded:: 0.20  + if h_freq is not None: + if 'lowpass' in raw.info: + msg = (f'The input data has already been low-pass filtered with a ' + f'{raw.info[lowpass]} Hz cutoff frequency. If you wish ' + f'to avoid filtering again in find_bad_channels_maxwell(), ' + f'please pass `h_freq=None`.') + logger.warning(msg) + + logger.info(f'Applying low-pass filter with {h_freq} Hz cutoff ' + f'frequency ...') + raw = raw.copy().filter(l_freq=None, h_freq=h_freq) + limit = float(limit) onsets, ends = _annotations_starts_stops( raw, skip_by_annotation, invert=True) ",lowpass is always present but it can be None. I think you will warn all the time here. What I would do is something like this: `if raw.info.get('lowpass') and raw.info['lowpass'] < 'lowpass' `
"@@ -102,6 +102,7 @@ var mapServiceNames = []string{ codecommit, cognitoidentity, cognitoidentityprovider, + dataexchange, dlm, eks, glacier, ","This service supports updating tags via the `TagResource` and `UntagResource` API calls, which means it can be added to `aws/internal/keyvaluetags/generators/updatetags/main.go` as well for completeness. Will add its service entry and generate the new update function on merge."
"@@ -267,6 +267,16 @@ public class CommentManagerImpl implements CommentManager { return commentDocModel; } + protected DocumentModel createHiddenFolder(CoreSession session, String parentPath, String name) { + DocumentModel dm = session.createDocumentModel(parentPath, name, HiddenFolder); + dm.setProperty(dublincore, title, name); + dm.setProperty(dublincore, description, ); + Framework.doPrivileged(() -> dm.setProperty(dublincore, created, Calendar.getInstance())); + DocumentModel parent = session.createDocument(dm); // change variable name to be effectively final + setFolderPermissions(parent); + return parent; + } + private static void notifyEvent(CoreSession session, DocumentModel docModel, String eventType, DocumentModel parent, DocumentModel child, NuxeoPrincipal principal) { ",Can you explain why this change is not present in master and 10.10?
"@@ -412,9 +412,6 @@ public class FakeDatasetService implements DatasetService, Serializable { @Override public WriteStream createWriteStream(String tableUrn, Type type) throws IOException, InterruptedException { - if (type != Type.PENDING && type != Type.BUFFERED) { - throw new RuntimeException(We only support PENDING or BUFFERED streams.); - } TableReference tableReference = BigQueryHelpers.parseTableUrn(BigQueryHelpers.stripPartitionDecorator(tableUrn)); synchronized (tables) { ",We could check for COMMIT_AT_LEAST_ONCE explicitly.
"@@ -69,11 +69,17 @@ def test_compute_proj(): projs_evoked = compute_proj_evoked(evoked, n_grad=1, n_mag=1, n_eeg=0) # XXX : test something + # test parallelization + projs = compute_proj_epochs(epochs, n_grad=1, n_mag=1, n_eeg=0, n_jobs=2) + projs = activate_proj(projs) + proj_par, _, _ = make_projector(projs, epochs.ch_names, bads=[]) + assert_array_equal(proj, proj_par) # Test that the raw projectors work for ii in (1, 2, 4, 8, 12, 24): raw = Raw(raw_fname) - projs = compute_proj_raw(raw, duration=ii-0.1, n_grad=1, n_mag=1, n_eeg=0) + projs = compute_proj_raw(raw, duration=ii-0.1, n_grad=1, n_mag=1, + n_eeg=0) # test that you can compute the projection matrix projs = activate_proj(projs) ",Does this test work for you? It fails here.
"@@ -79,8 +79,11 @@ type Config struct { ActiveSeriesMetricsIdleTimeout time.Duration `yaml:active_series_metrics_idle_timeout` // Use blocks storage. - BlocksStorageEnabled bool `yaml:-` - BlocksStorageConfig tsdb.BlocksStorageConfig `yaml:-` + BlocksStorageEnabled bool `yaml:-` + BlocksStorageConfig tsdb.BlocksStorageConfig `yaml:-` + StreamChunksWhenUsingBlocks bool `yaml:-` + // Runtime-override for type of streaming query to use (chunks or samples). + StreamTypeFn func() QueryStreamType `yaml:-` // Injected at runtime and read from the distributor config, required // to accurately apply global limits. ",Why do we also need this if we have a runtime override? Can't we just used that?
"@@ -108,7 +108,7 @@ public class SearchAdminResource implements ResourceHandler { throw new CacheException(NotImplemented); } else { SearchStatistics searchStatistics = Search.getSearchStatistics(cache); - searchStatistics.getQueryStatistics().clear(); + Security.doAs(restRequest.getSubject(), () -> searchStatistics.getQueryStatistics().clear()); return completedFuture(responseBuilder.build()); } } ",why is this required? the cache already contains the subject (via `Cache.withSubject()`)
"@@ -46,11 +46,4 @@ public class AssetManagerTest { HttpURLConnection httpCon = (HttpURLConnection) url.openConnection(); assertEquals(HttpURLConnection.HTTP_NOT_FOUND, httpCon.getResponseCode()); } - - @Test - public void handlebarsLoad() throws Exception { - URL url = new URL(j.getURL() + assets/handlebars/jsmodules/handlebars3.js); - HttpURLConnection httpCon = (HttpURLConnection) url.openConnection(); - assertEquals(HttpURLConnection.HTTP_OK, httpCon.getResponseCode()); - } } ",Is there any change in the way the plugins consume handlebars3 now? Do plugin developers need to do any change? or are the plugins going to stop working because of that or trigger a 404 in the browser console?
"@@ -173,10 +173,11 @@ void MultiTopicDataReaderBase::data_available(DDS::DataReader_ptr reader) if (rc == RETCODE_NO_DATA) { return; } else if (rc != RETCODE_OK) { - ostringstream rc_ss; - rc_ss << rc; + OPENDDS_STRING rc_ss; + rc_ss.reserve(sizeof(ReturnCode_t)); + rc_ss += rc; throw runtime_error(Incoming DataReader for  + topic + -  could not be read, error # + rc_ss.str()); +  could not be read, error # + rc_ss); } const MetaStruct& meta = metaStructFor(reader); ","sizeof() is number of bytes in memory, not number of characters in the string string += int is appending the character value of the integer"
"@@ -326,6 +326,7 @@ OIDC_RP_SCOPES = config(OIDC_RP_SCOPES, default=openid profile email) OIDC_REDIRECT_ALLOWED_HOSTS = config( OIDC_REDIRECT_ALLOWED_HOSTS, default=, cast=Csv() ) +OIDC_AUTH_REQUEST_EXTRA_PARAMS = {access_type: offline} # Allow null on these because you should be able run Kuma with these set. # It'll just mean you can't use kuma to authenticate. And a warning ",  Interesting! I didn't know anything about this before. So this allows us to refresh an access token without the user needing to be present and authorize the refresh?
"@@ -609,10 +609,7 @@ class SharePermission(Model): } _attribute_map = { - 'permission': {'key': 'permission', 'type': 'str', 'xml': {'name': 'permission'}}, - } - - _xml_map = { + 'permission': {'key': 'permission', 'type': 'str'}, } def __init__(self, **kwargs): ","we should avoid manual edits to the generated files, right?"
"@@ -296,10 +296,15 @@ export function createIframeWithMessageStub(win) { element.expectMessageFromParent = msg => { return new Promise(resolve => { const listener = event => { + let expectMsg = msg; + let eventMsg = event.data.receivedMessage; + if (typeof expectMsg !== 'string') { + expectMsg = JSON.stringify(expectMsg); + eventMsg = JSON.stringify(eventMsg); + } if (event.source == element.contentWindow && event.data.testStubEcho - && JSON.stringify(msg) - == JSON.stringify(event.data.receivedMessage)) { + && expectMsg == eventMsg) { win.removeEventListener('message', listener); resolve(msg); } ",nit: rename `eventMsg` to `actualMsg`
"@@ -507,3 +507,5 @@ def cleanup_old_worker(*args, **kwargs):  name = kwargs['sender'].hostname _delete_worker(name, normal_shutdown=True) + # Recreate a new working directory for worker that is starting now + common_utils.create_worker_working_directory(name) ",Who calls `cleanup_old_worker()`?. I am having some trouble finding it.
"@@ -4,8 +4,10 @@ # Licensed under the MIT License. # ------------------------------------ +from typing import Optional from azure.core.polling.base_polling import ( LongRunningOperation, + PipelineResponseType, _is_empty, _as_json, BadResponse, ",This can't be imported here because it's defined in a type checking block. You'll need to redefine it in this file.
"@@ -27,6 +27,18 @@ public class JavaExternalSerializerProtocol extends AbstractSerializationProtoco */ @Override public void serialize(Object object, OutputStream out) throws SerializationException { + if (object instanceof CursorStreamProvider) { + try (CursorStream cursor = ((CursorStreamProvider) object).openCursor()) { + doSerialize(toByteArray(cursor), out); + } catch (IOException e) { + throw new SerializationException(createStaticMessage(Could not serialize cursor stream), e); + } + } else { + doSerialize(object, out); + } + } + + private void doSerialize(Object object, OutputStream out) { validateForSerialization(object); SerializationUtils.serialize((Serializable) object, out); } ",I think that at least we should create an issue to be able to serialize Cursor without loading everything into memory at the same time.
"@@ -12,6 +12,7 @@ describe 'two_factor_authentication/totp_verification/show.html.slim' do before do allow(view).to receive(:current_user).and_return(user) allow(view).to receive(:reauthn?).and_return(false) + allow(view).to receive(:confirmation_for_phone_change?).and_return(false) @presenter = TwoFactorAuthCode::AuthenticatorDeliveryPresenter. new(presenter_data, ApplicationController.new.view_context) ",This is not needed anymore.
"@@ -1,8 +1,15 @@ from django.template import Library +from ...core.utils import get_country_name_by_code + register = Library() @register.simple_tag def get_formset_form(formset, index): return formset.forms[index] + + +@register.simple_tag +def get_country_by_code(country_code): + return get_country_name_by_code(country_code) ",I think this can be done via `get_language_info` `i18n` templatetag
"@@ -647,7 +647,7 @@ function killme() /** * @brief Redirect to another URL and terminate this process. */ -function goaway($path) +function goaway($path = '') { if (strstr(normalise_link($path), 'http://')) { $url = $path; ",Interesting for #5907 So I will rename it from `System::redirectTo($url)` to `System::redirect($to = '');` :-)
"@@ -79,6 +79,18 @@ def test_lcmv(): assert_raises(ValueError, lcmv, evoked, forward, noise_cov, data_cov, reg=0.01, pick_ori=normal) + # Test picking normal orientation + stc_normal = lcmv(evoked, forward_surf_ori, noise_cov, data_cov, reg=0.01, + pick_ori=normal) + + assert_true((np.abs(stc_normal.data) <= stc.data + 0.8).all()) + + # Test picking source orientation maximizing output source power + stc_max_power = lcmv(evoked, forward, noise_cov, data_cov, reg=0.01, + pick_ori=max-power) + + assert_true((np.abs(stc_max_power.data) <= stc.data + 1).all()) + # Test if fixed forward operator is detected when picking normal or # max-power orientation assert_raises(ValueError, lcmv, evoked, forward_fixed, noise_cov, data_cov, ","why `+0.8`? shouldn't it always be lower? i.e., `np.abs(stc_normal.data) <= stc.data` should hold"
"@@ -1,6 +1,6 @@ require Rails.root.join('lib', 'config_validator.rb') -Figaro.require_keys( +Figaro.require_keys([ 'attribute_encryption_key', 'database_statement_timeout', 'disallow_all_web_crawlers', ",I vote to keep the splat/`*args`
"@@ -1094,7 +1094,7 @@ KUMASCRIPT_URL_TEMPLATE = 'http://developer.mozilla.org:9080/docs/{path}' ES_DISABLED = True ES_LIVE_INDEX = False -LOG_LEVEL = logging.WARN +LOG_LEVEL = logging.DEBUG SYSLOG_TAG = 'http_app_kuma' LOGGING = { ","Whoops, did these `settings.py` changes sneak in? Should these be in `settings_local.py`?"
"@@ -88,12 +88,12 @@ abstract class WPCOM_JSON_API_Comment_Endpoint extends WPCOM_JSON_API_Endpoint { && $this->api->token_details['user']['display_name'] === $comment->comment_author ) { - $user_can_read_coment = true; + $user_can_read_comment = true; } else { - $user_can_read_coment = current_user_can( 'edit_comment', $comment->comment_ID ); + $user_can_read_comment = current_user_can( 'edit_posts' ); } - if ( !$user_can_read_coment ) { + if ( !$user_can_read_comment ) { return new WP_Error( 'unauthorized', 'User cannot read unapproved comment', 403 ); } } ","Since you're editing that line, could you add a space after the `!` to make it super clean?"
"@@ -43,6 +43,11 @@ func NewPlan(ctx *plugin.Context, target *Target, prev *Snapshot, source Source, olds := make(map[resource.URN]*resource.State) if prev != nil { for _, oldres := range prev.Resources { + // Ignore resources that are pending deletion; these should not be recorded in the LUT. + if oldres.Delete { + continue + } + urn := oldres.URN contract.Assert(olds[urn] == nil) olds[urn] = oldres ",What the heck is a LUT?  
"@@ -812,10 +812,8 @@ func (mod *modContext) genNestedTypes(member interface{}, resourceType bool) []d // and if it appears in an input object and/or output object. mod.getTypes(member, tokens) - isK8s := isKubernetesPackage(mod.pkg) - var typs []docNestedType - for token, tyUsage := range tokens { + for token := range tokens { for _, t := range mod.pkg.Types { switch typ := t.(type) { case *schema.ObjectType: ",All or most of this deletion was related to generating the per-language API doc link for each object type.
"@@ -146,6 +146,16 @@ public class SCMPipelineManager implements PipelineManager { pipelineFactory.setProvider(replicationType, provider); } + @VisibleForTesting + public void setAllowPipelineCreation(boolean newState) { + this.allowPipelineCreation.set(newState); + } + + @VisibleForTesting + public boolean getAllowPipelineCreation() { + return allowPipelineCreation.get(); + } + protected void initializePipelineState() throws IOException { if (pipelineStore.isEmpty()) { LOG.info(No pipeline exists in current db); ","I would suggest to use pipelineCreationAllowed as the internal state name, it makes the code easier to read out as I I see. I know this is a regular getter and and setter pair, but... In the tests, the set method is always called with true as the parameter, so I suggest to call this method simply allowPipelineCreation() without a parameter, the getter part of the pair in this case can be called as isPipelineCreationAllowed(). This suggestion is simply about expressions from the usage point of view, and I don't have a strong opinion on this, however if we want to keep this name and want to name it as a regular getter setter as it is suggested by the books then we should use isAllowPipelineCreation as the getter name."
"@@ -319,7 +319,7 @@ func (s *StoreInfo) regionScoreV2(delta int64, deviation int) float64 { score = (K + M*(math.Log(C)-math.Log(A-F+1))/(C-A+F-1)) * R } else { // When remaining space is less then F, the score is mainly determined by available space. - score = (K+M*math.Log(C)/C)*R + (F-A)*(K+M*math.Log(F)/F) + score = (K+M*math.Log(C)/C)*R + B*(F-A)*(K+M*math.Log(F)/F) } return score / math.Max(s.GetRegionWeight(), minWeight) } ",can we make F configuration and set to a more suitable default value?
"@@ -31,6 +31,7 @@ from paddle.fluid.dygraph.dygraph_to_static.loop_transformer import LoopTransfor from paddle.fluid.dygraph.dygraph_to_static.print_transformer import PrintTransformer from paddle.fluid.dygraph.dygraph_to_static.return_transformer import ReturnTransformer from paddle.fluid.dygraph.dygraph_to_static.tensor_shape_transformer import TensorShapeTransformer +from paddle.fluid.dygraph.dygraph_to_static.cast_transformer import CastTransformer from paddle.fluid.dygraph.dygraph_to_static.static_analysis import StaticAnalysisVisitor from paddle.fluid.dygraph.dygraph_to_static.utils import get_attribute_full_name ","Here we import with alphabetical order, so please put this line after CallTransformer"
"@@ -720,8 +720,8 @@ def write_protocol_deps_cache(proto_deps: Dict[str, Set[str]], def write_plugins_snapshot(manager: BuildManager) -> None: Write snapshot of versions and hashes of currently active plugins. - name = os.path.join(_cache_dir_prefix(manager), '@plugins_snapshot.json') - if not atomic_write(name, json.dumps(manager.plugins_snapshot), '\n'): + name = '@plugins_snapshot.json' + if not manager.metastore.write(name, json.dumps(manager.plugins_snapshot)): manager.errors.set_file(_cache_dir_prefix(manager), None) manager.errors.report(0, 0, Error writing plugins snapshot, blocker=True) ",This should really be a defined constant.
"@@ -38,7 +38,10 @@ class ProfileParser(object): include = include[:-1] self.includes.append(include) else: - name, value = line.split(=, 1) + try: + name, value = line.split(=, 1) + except ValueError as error: + raise ConanParsingError(Error while parsing line %i: '%s' % (counter, line)) name = name.strip() if   in name: raise ConanException(The names of the variables cannot contain spaces) ","Let's throw a generic ``ConanException``. New exceptions will be introduced from now on, only if it is going to be captured and processed somewhere else. Let's keep it simple."
"@@ -2220,6 +2220,16 @@ describe User do end end + describe Destroying a user with security key do + let!(:security_key) { Fabricate(:user_security_key_with_random_credential, user: user) } + fab!(:admin) { Fabricate(:admin) } + + it removes the security key do + UserDestroyer.new(admin).destroy(user) + expect(UserSecurityKey.where(user_id: user.id).count).to eq(0) + end + end + describe 'Secure identifier for a user which is a string other than the ID used to identify the user in some cases e.g. security keys' do describe '#create_or_fetch_secure_identifier' do context 'if the user already has a secure identifier' do ",Isn't `admin` fabricated earlier?
"@@ -35,4 +35,9 @@ spec: <%_ } _%> ports: - name: http + <%_ if (app.applicationType === 'microservice' || app.applicationType === 'uaa') { _%> + port: 80 + targetPort: <%= app.serverPort %> + <%_ } else { _%> port: <%= app.serverPort %> + <%_ } _%> ","Unless there is a really good reason for this, I'd prefer using the condition : `!app.serviceDiscoveryType || app.applicationType === 'uaa'` -> so it will be specific to UAA and will not impact the other option as the other options works well with Kubernetes"
"@@ -246,10 +246,10 @@ public class JPMSModuleInfoPlugin implements VerifierPlugin { } private void requires(Entry<String, Attrs> instruction, Analyzer analyzer, Packages index, - ModuleInfoBuilder builder) { + Parameters moduleInfoOptions, ModuleInfoBuilder builder) throws Exception { String eeAttribute = instruction.getValue() - .get(ee); + .get(Constants.EE_ATTRIBUTE); EE moduleEE = (eeAttribute != null) ? EE.valueOf(eeAttribute) : DEFAULT_MODULE_EE; ","You should make this `orElseGet` to avoid all the work until it is needed. `orElse` is good when you already have the else value handy. But it you have to go to some work to make the else value, `orElseGet` can avoid that work when you don't need the else value."
"@@ -1,7 +1,7 @@ <div class=row> <div class=col-12> <h2>Notes</h2> - <% if @user.notes.count > 0 %> + <% if @user.notes.load.size > 0 %> <% @user.notes.each do |note| %> <p><em><%= note.created_at.strftime(%d %B %Y %H:%M UTC) %> by <%= User.find(note.author_id).username if note.author_id.present? %></em> - <% if !note.reason.blank? %><strong><%= note.reason %>:</strong> ","since we know that the notes are going to be iterated upon in the following line, we can preload them, to avoid a second `SELECT count` that would instead happen with `.each`"
"@@ -358,7 +358,12 @@ class TransformVisitor(NodeVisitor[Node]): new.fullname = original.fullname target = original.node if isinstance(target, Var): - target = self.visit_var(target) + # Do not transform references to global variables. + # TODO: is it really the best solution? Should we instead make + # a trivial copy, or do something completely different? See + # testGenericFunctionAliasExpand for an example where this is important. + if original.kind != GDEF: + target = self.visit_var(target) elif isinstance(target, Decorator): target = self.visit_var(target.var) elif isinstance(target, FuncDef): ","If you remove `visit_mypy_file` from the class (I think that it's unused), this will be completely reasonable, since this will be reference to something outside the AST node we are transforming."
"@@ -658,6 +658,9 @@ func (b *cloudBackend) PreviewThenPromptThenExecute( // Now do the real operation. We don't care about the events it issues, so just // pass a nil channel along. var unused chan engine.Event + + // Print the stack outputs at the end this time. + displayOpts.ShowStackOutputs = true return b.updateStack( updateKind, stack, pkg, root, m, opts, displayOpts, unused, false /*dryRun*/, scopes) ","Since we're always setting this to `true`, any reason not to make `true` the default, and change this to something like `SuppressStackOutputs`? Is there even a reason to make it conditional? Also, was it intentional that you only did this for the cloud backend? Why not local also? I really don't want to see us diverging in behavior here."
"@@ -253,7 +253,8 @@ class SubmissionsController < ApplicationController begin if !test_runs.empty? authorize! assignment, to: :run_tests? - AutotestRunJob.perform_later(request.protocol + request.host_with_port, current_user.id, test_runs) + @current_job = AutotestRunJob.perform_later(request.protocol + request.host_with_port, current_user.id, test_runs) + session[:job_id] = @current_job.job_id success = I18n.t('automated_tests.tests_running', assignment_identifier: assignment.short_identifier) else error = I18n.t('automated_tests.need_submission') ",Metrics/LineLength: Line is too long. [122/120]
"@@ -138,14 +138,11 @@ func signAndPublishDeviceEK(ctx context.Context, g *libkb.GlobalContext, generat } type deviceEKsResponse struct { - Results []struct { - MerklePayload string `json:merkle_payload` - Sig string `json:sig` - } `json:results` + Sigs []string `json:sigs` } -func getActiveDeviceEKMetadata(ctx context.Context, g *libkb.GlobalContext, merkleRoot libkb.MerkleRoot) (metadata map[keybase1.DeviceID]keybase1.DeviceEkMetadata, err error) { - defer g.CTrace(ctx, GetActiveDeviceEKMetadata, func() error { return err })() +func getAllDeviceEKMetadataMaybeStale(ctx context.Context, g *libkb.GlobalContext, merkleRoot libkb.MerkleRoot) (metadata map[keybase1.DeviceID]keybase1.DeviceEkMetadata, err error) { + defer g.CTrace(ctx, getAllDeviceEKMetadataMaybeStale, func() error { return err })() apiArg := libkb.APIArg{ Endpoint: user/device_eks, ",pre-existing bug. We should split this function into `maybeStale` and `active` like in user_ek -- the `getServerMaxDeviceEK` is busted if the latest key is stale.
"@@ -130,13 +130,16 @@ public class ClipboardActionsBean implements ClipboardActions, Serializable { private transient Map<String, List<Action>> actionCache; + @Override public void releaseClipboardableDocuments() { } + @Override public boolean isInitialized() { return documentManager != null; } + @Override public void putSelectionInWorkList(Boolean forceAppend) { canEditSelectedDocs = null; if (!documentsListsManager.isWorkingListEmpty(DocumentsListsManager.CURRENT_DOCUMENT_SELECTION)) { ",This cleanup should have gone in a separate commit.
"@@ -74,7 +74,7 @@ func (wh *webhook) run(stop <-chan struct{}) { mux := http.DefaultServeMux // HTTP handlers - mux.HandleFunc(/health/ready, wh.healthReadyHandler) + mux.HandleFunc(/healthz, wh.healthHandler) mux.HandleFunc(osmWebhookMutatePath, wh.mutateHandler) server := &http.Server{ ",We could put this string in a central place somewhere so we can reference it in both places where it appears in the code here in this PR.
"@@ -600,6 +600,7 @@ MINIFY_BUNDLES = { 'js/zamboni/buttons.js', 'js/zamboni/tabs.js', 'js/common/keys.js', + 'js/common-min.js', # jQuery UI 'js/lib/jquery-ui/jquery.ui.core.js', ","common-min.js is is a generated file. It shouldn't be included here. In fact, it's generated from this list of files, so I'm surprised that this helps."
"@@ -13,7 +13,7 @@ import ( code.gitea.io/gitea/modules/repository code.gitea.io/gitea/modules/setting api code.gitea.io/gitea/modules/structs - webhook_module code.gitea.io/gitea/modules/webhook + webhook_module code.gitea.io/gitea/services/webhook ) type webhookNotifier struct { ",I think we should rename _module to _service ...
"@@ -649,7 +649,8 @@ public class DataWeaveExpressionLanguageAdaptorTestCase extends AbstractWeaveExp @Test public void evaluateInvalidCompiledExpression() throws MuleException { ExpressionCompilationException e = new ExpressionCompilationException(createStaticMessage(oopsy)); - expectedEx.expect(is(sameInstance(e))); + expectedEx.expect(ExpressionRuntimeException.class); + expectedEx.expectCause(is(sameInstance(e))); CompiledExpression compiled = new IllegalCompiledExpression(#[ble], e); try (ExpressionLanguageSessionAdaptor session = ",we should assert thet the error message is meaningful here
"@@ -262,6 +262,18 @@ function indexToInsertByPosition (items, position) { return (query in queries) ? queries[query](idx) : idx } +function removeExtraSeparators (template) { + let visiblePrev + const visibleItems = template.filter(el => el.visible !== false) + + return visibleItems.filter((el, idx, array) => { + const meetsDeleteConditions = !visiblePrev || idx === array.length - 1 || array[idx + 1].type === 'separator' + const toDelete = el.type === 'separator' && meetsDeleteConditions + visiblePrev = toDelete ? visiblePrev : el + return !toDelete + }) +} + function insertItemByType (item, pos) { const types = { normal: () => this.insertItem(pos, item.commandId, item.label), ",This is _a little_ hard to scan. I think that a `reduce` would work wonders here.
"@@ -121,6 +121,9 @@ func (bc *BuildPodController) HandlePod(pod *kapi.Pod) error { nextStatus := build.Status.Phase currentReason := build.Status.Reason + // if the build is marked failed, the build status reason has already been + // set (probably by the build pod itself), so don't do any updating here + // or we'll overwrite the correct value. if build.Status.Phase != buildapi.BuildPhaseFailed { switch pod.Status.Phase { case kapi.PodPending: ","Should we have utility functions that delineate which non-successful BuildPhases are set by the build pod (where it is *currently* just Failed) and which are set outside of the build pod (i.e. BuildPhaseError), in case those two lists change over time?"
"@@ -328,6 +328,14 @@ func resourceComputeInstance() *schema.Resource { Computed: true, }, + network_ip: &schema.Schema{ + Type: schema.TypeString, + Optional: true, + ForceNew: true, + Computed: true, + Deprecated: Please use address, + }, + access_config: &schema.Schema{ Type: schema.TypeList, Optional: true, ",@danawillow what was the plan with `address` and `network_ip`?
"@@ -42,7 +42,8 @@ cov = mne.cov.regularize(cov, evoked.info) import pylab as pl pl.figure() ylim = dict(eeg=[-10, 10], grad=[-400, 400], mag=[-600, 600]) -plot_evoked(evoked, ylim=ylim, proj=True) +picks = fiff.pick_types(evoked.info, meg=True, eeg=True) +plot_evoked(evoked, picks=picks, ylim=ylim, proj=True, exclude='bads') ############################################################################### # Run solver ",This will throw a warning since the `exclude` parameter is not set. Might be saner to do `exclude='bads'` then omit from the next line.
"@@ -164,7 +164,8 @@ public class PullPhysicalPlan { // Could be one or more keys KEY_LOOKUP, RANGE_SCAN, - TABLE_SCAN + TABLE_SCAN, + UNKNOWN } /** ",We cannot know what the WHERE clause is for stream pull queries since it's not analyzed by the logical plan
"@@ -101,9 +101,7 @@ func Execute(configFile io.Reader) { context.GetLogger(app).Fatalln(err) } } else { - tlsConf := &tls.Config{ - ClientAuth: tls.NoClientCert, - } + tlsConf := crypto.SecureTLSConfig(&tls.Config{ClientAuth: tls.NoClientCert}) if len(config.HTTP.TLS.ClientCAs) != 0 { pool := x509.NewCertPool() ",`crypto` module isn't imported.
"@@ -630,6 +630,10 @@ export class Resource { */ pause() { if (this.state_ == ResourceState.NOT_BUILT || this.paused_) { + if (this.paused_) { + dev.warn(TAG, 'pause() called on an already paused resource:', + this.debugid); + } return; } this.paused_ = true; ","`#warn` won't give us the call stack, this has to be an `#error`."
"@@ -268,7 +268,10 @@ func (t *Team) Rotate(ctx context.Context) error { memSet := newMemberSet() // create the team section of the signature - section, err := memSet.Section(t.Chain.GetID()) + + // TODO -- fill in a non-nil if we can't write/admin this chain explicitly and need + // admin permissions. See CORE-5501 + section, err := memSet.Section(t.Chain.GetID(), nil) if err != nil { return err } ",why doesn't this try calling t.getAdminPermission()?
"@@ -32,13 +32,15 @@ const Routes = ({ match }) => ( <> <Switch> <%_ if (!readOnly) { _%> - <ErrorBoundaryRoute exact path={`${match.url}/:id/delete`} component={<%= entityReactName %>DeleteDialog} /> <ErrorBoundaryRoute exact path={`${match.url}/new`} component={<%= entityReactName %>Update} /> <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={<%= entityReactName %>Update} /> <%_ } _%> <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={<%= entityReactName %>Detail} /> <ErrorBoundaryRoute path={match.url} component={<%= entityReactName %>} /> </Switch> + <%_ if (!readOnly) { _%> + <ErrorBoundaryRoute exact path={`${match.url}/:id/delete`} component={<%= entityReactName %>DeleteDialog} /> + <%_ } _%> </> ); ","not so sure about that one... if the point of having the deletion modal on top of the entity list page is what matters, then there may be a better way to achieve that"
"@@ -17,6 +17,8 @@ package cluster import ( context + github.com/gogo/protobuf/proto + . github.com/pingcap/check github.com/pingcap/kvproto/pkg/metapb github.com/pingcap/kvproto/pkg/pdpb ",remove the empty line
"@@ -51,7 +51,14 @@ public class LuceneCacheWarmer implements Runnable { for (final File indexDir : indexDirs) { final long indexStartNanos = System.nanoTime(); - final EventIndexSearcher eventSearcher = indexManager.borrowIndexSearcher(indexDir); + final EventIndexSearcher eventSearcher; + try { + eventSearcher = indexManager.borrowIndexSearcher(indexDir); + } catch (final FileNotFoundException fnfe) { + logger.debug(Cannot warm Lucene Index directory {} because the directory no longer exists, indexDir); + continue; + } + indexManager.returnIndexSearcher(eventSearcher); final long indexWarmMillis = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - indexStartNanos); ","Hi, What do you think of extracting this nested try to a separate method?"
"@@ -17,12 +17,17 @@ import com.google.inject.Binder; import com.google.inject.Module; import com.google.inject.Scopes; +import static io.airlift.configuration.ConfigBinder.configBinder; +import static org.weakref.jmx.guice.ExportBinder.newExporter; + public class EventListenerModule implements Module { @Override public void configure(Binder binder) { + configBinder(binder).bindConfig(EventListenerConfig.class); binder.bind(EventListenerManager.class).in(Scopes.SINGLETON); + newExporter(binder).export(EventListenerManager.class).withGeneratedName(); } } ",No need to add this since `EventListenerManager` doesn't have any `@Managed` annotations.
"@@ -133,6 +133,17 @@ func (ms *Status) Start() error { return nil } + exists, err = ms.hasActionData() + if err != nil { + ms.updateErr(err.Error(), Unable to detect migration status) + return err + } + if exists { + ms.update(Starting migration of actions to the event-feed-service) + go ms.migrateAction() + return nil + } + return nil } ",The migration runs in the background and does not prevent the ingest-service for starting fully while migrating the actions.
"@@ -112,6 +112,15 @@ public abstract class HttpClientTracer<REQUEST, CARRIER, RESPONSE> extends BaseT super.endExceptionally(span, throwable, -1); } + /** Convenience method primarily for bytecode instrumentation. */ + public void endMaybeExceptionally(Context context, RESPONSE response, Throwable throwable) { + if (throwable != null) { + endExceptionally(context, throwable); + } else { + end(context, response); + } + } + private Span internalStartSpan( Context parentContext, REQUEST request, String name, long startTimeNanos) { SpanBuilder spanBuilder = ","I'd put this method in a PR with at least one usage of it - inClientSpan / withClientSpan are quite clear here, but not this method which isn't used. One way to keep PRs small is to change just one usage in one PR, and remaining usages in a mechanical way in another."
"@@ -48,10 +48,10 @@ namespace System.Text.Json.Serialization.Converters // Read method would have thrown if otherwise. Debug.Assert(tokenType == JsonTokenType.PropertyName); + ReadOnlySpan<byte> unescapedPropertyName = JsonSerializer.GetPropertyName(ref state, ref reader, options); JsonPropertyInfo jsonPropertyInfo = JsonSerializer.LookupProperty( obj, - ref reader, - options, + unescapedPropertyName, ref state, out bool useExtensionProperty); ","Note that `GetPropertyName` is marked with `AggressiveInline` but `LookupProperty` is not (it used to be, but there became 4 references to it over time causing code bloat)."
"@@ -27,6 +27,7 @@ return array( 'logout' => Log out, 'logoutok' => You have been logged out., 'logouterror' => We couldn't log you out. Please try again., + 'session_expired' => Your session has expired. Please reload the page to log in., 'loggedinrequired' => You must be logged in to view the requested page., 'adminrequired' => You must be an administrator to view the requested page., ",Reloading the page won't always prompt for login.
"@@ -117,8 +117,6 @@ class Collection(ModelBase): objects = CollectionManager() - top_tags = TopTags() - class Meta(ModelBase.Meta): db_table = 'collections' unique_together = (('author', 'slug'),) ",The `TopTags` at the beginning of the file is now unused and can be removed as well.
"@@ -179,6 +179,12 @@ $array = array('rowid' => 'ID', 'ref' => 'Ref', 'label' => 'Label', 'datec' => ' print $form->selectarray('TAKEPOS_SORTPRODUCTFIELD', $array, (empty($conf->global->TAKEPOS_SORTPRODUCTFIELD) ? 'rowid' : $conf->global->TAKEPOS_SORTPRODUCTFIELD), 0, 0, 0, '', 1); print </td></tr>\n; +print '<tr class=oddeven><td>'; +print $langs->trans('TakeposGroupSameProduct'); +print '<td colspan=2>'; +print ajax_constantonoff(TAKEPOS_GROUP_SAME_PRODUCT, array(), $conf->entity, 0, 0, 1, 0); +print </td></tr>\n; + $substitutionarray = pdf_getSubstitutionArray($langs, null, null, 2); $substitutionarray['__(AnyTranslationKey)__'] = $langs->trans(Translation); $htmltext = '<i>'.$langs->trans(AvailableVariables).':<br>'; ","If you use (and we should from v12) the new feature forcereload (param 1 at position 6), it means clicking on image is enough to switch. This also means you don't have to make the $res = dolibarr_set_const($db, 'TAKEPOS_GROUP_SAME_PRODUCT', ... when you click on save button or you will erase the setup"
"@@ -23,7 +23,7 @@ angular.module('<%=angularAppName%>') var url = '//' + loc.host + loc.pathname + 'websocket/tracker';<% if (authenticationType == 'oauth2') { %> /* globals localStorage */ /*jshint camelcase: false */ - var authToken = JSON.parse(localStorage.getItem('ls.token')).access_token; + var authToken = JSON.parse(localStorage.getItem('jhi-authenticationToken')).access_token; url += '?access_token=' + authToken;<% } %> var socket = new SockJS(url); stompClient = Stomp.over(socket); ",shouldnt this be `$localStorage.authenticationToken` ? @cicoub13
"@@ -1335,7 +1335,13 @@ class CheckoutDeliveryMethodUpdate(BaseMutation): ), ) - delivery_method = convert_to_shipping_method_data(shipping_method) + delivery_method = convert_to_shipping_method_data( + shipping_method, + shipping_models.ShippingMethodChannelListing.objects.filter( + shipping_method=shipping_method, + channel=checkout_info.channel, + ).get(), + ) cls._check_delivery_method( checkout_info, lines, shipping_method=delivery_method, collection_point=None ) ",Wouldn't be better to have here `.first()`? I don't see any try/catch here
"@@ -210,6 +210,7 @@ func (o *RollbackOptions) Run() error { return err } target = deployment + configName = r.Name } if target == nil { return fmt.Errorf(%s is not a valid deployment or deployment config, o.TargetName) ",add default or check if the `configName` is not empty
"@@ -28,9 +28,9 @@ module Idv end def render_document_capture_cancelled - failure(I18n.t('errors.doc_auth.document_capture_cancelled')) mark_steps_incomplete redirect_to idv_url + failure(I18n.t('errors.doc_auth.document_capture_cancelled')) end def render_step_incomplete_error ","Arguably we could remove `link_sent` from `HYBRID_FLOW_STEPS` since it's not having any effect here anyways, but I don't think it hurts anything to keep."
"@@ -41,7 +41,7 @@ var handlerRegistry = b.Build<MessageHandlerRegistry>(); var messageTypesHandled = GetMessageTypesHandledByThisEndpoint(handlerRegistry, conventions, settings); var typesToSubscribe = messageTypesHandled.Where(eventType => !requireExplicitRouting || publishers.GetPublisherFor(eventType).Any()).ToList(); - return new ApplySubscriptions(typesToSubscribe); + return new ApplySubscriptions(typesToSubscribe, settings.ExcludedTypes); }); } ",`var typesToSubscribe = messageTypesHandled.Where(eventType => !requireExplicitRouting || publishers.GetPublisherFor(eventType).Any()).ToList();` this part needs to be changed.
"@@ -26,10 +26,7 @@ public final class Jetty11Singletons { INSTRUMENTER = ServletInstrumenterBuilder.<HttpServletRequest, HttpServletResponse>create() .addContextCustomizer( - (context, request, attributes) -> { - context = ServerSpanNaming.init(context, CONTAINER); - return new AppServerBridge.Builder().init(context); - }) + (context, request, attributes) -> new AppServerBridge.Builder().init(context)) .build(INSTRUMENTATION_NAME, Servlet5Accessor.INSTANCE); private static final JettyHelper<HttpServletRequest, HttpServletResponse> HELPER = ","should `ServerSpanNaming.get()` context customizer be added here? I notice it's missing in some cases and included in others, but not clear to me why"
"@@ -14,7 +14,8 @@ * limitations under the License. */ -import {Messaging, WindowPortEmulator} from './messaging.js'; +import {Messaging, WindowPortEmulator} from './messaging'; +import {TouchHandler} from './touch_handler'; import {getAmpDoc} from '../../../src/ampdoc'; import {isIframed} from '../../../src/dom'; import {listen, listenOnce} from '../../../src/event-helper'; ",Please change file name to `touch-handler`.
"@@ -822,9 +822,7 @@ public class GlueHiveMetastore private static List<String> buildPartitionNames(List<Column> partitionColumns, List<Partition> partitions) { - return partitions.stream() - .map(partition -> makePartitionName(partitionColumns, partition.getValues())) - .collect(toList()); + return mappedCopy(partitions, partition -> makePartitionName(partitionColumns, partition.getValues())); } /** ","We could keep this as `toImmutableList()`. Moving away from streams simply to pre-size the output list, in code that's already doing expensive RPC calls, is a hard sell from a code readability standpoint."
"@@ -69,7 +69,7 @@ public class PluginSubtypeMarker extends AbstractProcessor { try { write(e); } catch (IOException x) { - processingEnv.getMessager().printMessage(Kind.ERROR, Functions.printThrowable(x), e); + processingEnv.getMessager().printMessage(Diagnostic.Kind.ERROR, Functions.printThrowable(x), e); } } } ",Not to be confused with `hudson.util.FormValidation.Kind`.
"@@ -100,6 +100,11 @@ class Api < Roda render_with_games end + r.on 'title', String do |title| + request.params['title'] = title + render(pin: request.params['pin'], games: Game.home_games(user, **request.params).map(&:to_h)) + end + r.on 'game', Integer do |id| halt(404, 'Game not found') unless (game = Game[id]) ",why do you do this?
"@@ -394,6 +394,14 @@ def _perform_kumascript_request(request, response_headers, document_locale, response_headers['X-Kumascript-Caching'] = ( '200 OK, Age: %s' % resp.headers.get('age', 0)) + # We defer bleach sanitation of kumascript content all the way + # through editing, source display, and raw output. But, we still + # want sanitation, so it finally gets picked up here. + resp_body = bleach.clean( + resp_body, attributes=ALLOWED_ATTRIBUTES, tags=ALLOWED_TAGS, + strip_comments=False + ) + # Cache the request for conditional GET, but use the max_age for # the cache timeout here too. cache.set_many({ ",This is to sanitize the HTML in the EJS templates?
"@@ -82,7 +82,7 @@ class MeshMovingTestCase(KratosUnittest.TestCase): MESH_VELOCITY_X, MESH_VELOCITY_Y, MESH_VELOCITY_Z], - output_file_name : \+result_file_name+\, + output_file_name : \+result_file_name.replace(\\, \\\\)+\, model_part_name : Probe_1, time_frequency : 0.1, use_node_coordinates : true ","ouch sorry guys this is my bad, I didn't know how to do this in a portable way :/ Would you say this is a good solution?"
"@@ -279,11 +279,16 @@ public class Task implements Runnable { @SuppressWarnings(unchecked) Class<? extends DataPublisher> dataPublisherClass = (Class<? extends DataPublisher>) Class.forName( this.taskState.getProp(ConfigurationKeys.DATA_PUBLISHER_TYPE, ConfigurationKeys.DEFAULT_DATA_PUBLISHER_TYPE)); - DataPublisher publisher = closer.register(DataPublisher.getInstance(dataPublisherClass, this.taskState)); + SingleTaskDataPublisher publisher = + closer.register(SingleTaskDataPublisher.getInstance(dataPublisherClass, this.taskState)); LOG.info(Publishing data from task  + this.taskId); publisher.publish(this.taskState); + } catch (IOException e) { + throw closer.rethrow(e); } catch (Throwable t) { + LOG.error(String.format(To publish data in task, the publisher class (%s) must extend %s, + ConfigurationKeys.DATA_PUBLISHER_TYPE, SingleTaskDataPublisher.class.getSimpleName()), t); throw closer.rethrow(t); } finally { closer.close(); ","This requires data publishers to be of type SingleTaskDataPublisher. If any user is already using a DataPublisher that is not of this type, Gobblin would fail."
"@@ -49,6 +49,8 @@ def sanitize(x: Any) -> Any: # pylint: disable=invalid-name,too-many-return-sta elif isinstance(x, (list, tuple)): # Lists and Tuples need their values sanitized return [sanitize(x_i) for x_i in x] + elif isinstance(x, type(None)): + return None else: raise ValueError(cannot sanitize {} of type {}.format(x, type(x))) ",Would `elif x is None` work?
"@@ -1,5 +1,5 @@ # -*- encoding : utf-8 -*- -class RemoveDefaultValueFromRequestCreatedAtAndRequestUpdatedAtOnRequestSummary < !rails5? ? ActiveRecord::Migration : ActiveRecord::Migration[4.2] # 4.1 +class RemoveDefaultValueFromRequestCreatedAtAndRequestUpdatedAtOnRequestSummary < ActiveRecord::Migration[4.2] # 4.1 def up change_column_default :request_summaries, :request_created_at, nil change_column_default :request_summaries, :request_updated_at, nil ",Line is too long. [117/80]
"@@ -359,7 +359,7 @@ namespace System.Xml.Serialization _writer.Write(if (type == typeof(); _writer.Write(CodeIdentifier.GetCSharpName(type)); _writer.Write()) return new ); - _writer.Write((string)serializers[xmlMappings[i].Key]); + _writer.Write((string)serializers[xmlMappings[i].Key!]!); _writer.WriteLine(();); } } ","At line 331, you do `(string?)` and here you do `!`? Maybe both are fine, just something I noticed. Not sure if it needs to be changed."
"@@ -1,9 +1,15 @@ 'use strict'; angular.module('<%=angularAppName%>') - .controller('HomeController', function ($scope, Principal) { + .controller('HomeController', function ($scope, Principal, $state, LoginService) { Principal.identity().then(function(account) { $scope.account = account; $scope.isAuthenticated = Principal.isAuthenticated; }); + + $scope.login = LoginService.open; + + $scope.register = function () { + $state.go('register'); + }; }); ","why is this required, register will still work as normal link??"
"@@ -47,10 +47,15 @@ def is_optimizer_op(op): class CollectiveHelper(object): - def __init__(self, role_maker, nrings=1, wait_port='6174'): + def __init__(self, + role_maker, + nrings=1, + wait_port='6174', + use_pipeline=False): self.nrings = nrings self.wait_port = wait_port self.role_maker = role_maker + self.use_pipeline = use_pipeline def update_startup_program(self, startup_program=None): self.startup_program = startup_program ","Create a new `PipelineHelper` to do compile, which could inherited from `CollectiveHelper`. As `PipelineHelper` is specific for pipeline, it could be put into corresponding meta optimizer."
"@@ -167,7 +167,7 @@ func NewClients(cfg *common.Config) ([]Connection, error) { } if proxyURL := config.Transport.Proxy.URL; proxyURL != nil { - logp.Info(using proxy URL: %s, proxyURL) + logp.Info(using proxy URL: %s, proxyURL.URI().String()) } params := config.Params ",we already implement `String` on proxyURL. No need to change that line.
"@@ -47,8 +47,8 @@ Menu.prototype._init = function () { this.delegate = delegate } -Menu.prototype.popup = function (options) { - if (options == null || typeof options !== 'object') { +Menu.prototype.popup = function (options = {}) { + if (typeof options !== 'object') { throw new TypeError('Options must be an object') } let {window, x, y, positioningItem, callback} = options ","We still need the `null` check here, `null` won't be defaulted and `typeof null === 'object'`"
"@@ -18,3 +18,13 @@ class ProductErrorCode(Enum): VARIANT_NO_DIGITAL_CONTENT = variant_no_digital_content CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT = cannot_manage_product_without_variant PRODUCT_NOT_ASSIGNED_TO_CHANNEL = product_not_assigned_to_channel + + +class CollectionErrorCode(Enum): + DUPLICATED_INPUT_ITEM = duplicated_input_item + GRAPHQL_ERROR = graphql_error + INVALID = invalid + NOT_FOUND = not_found + REQUIRED = required + UNIQUE = unique + CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT = cannot_manage_product_without_variant ",Do you use this error code somewhere? It doesn't sound like an error code for collection.
"@@ -1090,6 +1090,14 @@ Colorblind5 = Colorblind8[:5] Colorblind4 = Colorblind8[:4] Colorblind3 = Colorblind8[:3] +# Bokeh palette created from colors of shutter logo +BokehPalette7 = ('#EC1557', '#F05223', '#F6A91B', '#A5CD39', '#20B254', '#00AAAE', '#892889') +BokehPalette6 = BokehPalette7[:6] +BokehPalette5 = BokehPalette7[:5] +BokehPalette4 = BokehPalette7[:4] +BokehPalette3 = BokehPalette7[:3] + + YlGn = { 3: YlGn3, 4: YlGn4, 5: YlGn5, 6: YlGn6, 7: YlGn7, 8: YlGn8, 9: YlGn9 } YlGnBu = { 3: YlGnBu3, 4: YlGnBu4, 5: YlGnBu5, 6: YlGnBu6, 7: YlGnBu7, 8: YlGnBu8, 9: YlGnBu9 } GnBu = { 3: GnBu3, 4: GnBu4, 5: GnBu5, 6: GnBu6, 7: GnBu7, 8: GnBu8, 9: GnBu9 } ","I think I'd prefer just `Bokeh` since everything in here is a palette, `BokehPalette` seems a bit redundant"
"@@ -24,10 +24,9 @@ class StrConv(NodeVisitor[str]): def __init__(self, show_ids: bool = False) -> None: self.show_ids = show_ids + self.id_mapper = None # type: IdMapper if show_ids: self.id_mapper = IdMapper() - else: - self.id_mapper = None def get_id(self, o: object) -> int: return self.id_mapper.id(o) ","Why not Optional? (Currently mypy ignores the None initialization but we may change that, and it seems to me this function can definitely return with `id_mapper` still None."
"@@ -277,7 +277,7 @@ public final class LogoutManagerImpl implements LogoutManager { * @param url The url to send the message to * @param message Message to send to the url */ - public LogoutHttpMessage(final URL url, final String message) { + LogoutHttpMessage(final URL url, final String message) { super(url, message, LogoutManagerImpl.this.asynchronous); setContentType(MediaType.APPLICATION_FORM_URLENCODED_VALUE); } ",Why removing the `public` keyword?
"@@ -263,10 +263,7 @@ define([ op = ast.operator; left = createRuntimeAst(expression, ast.left); right = createRuntimeAst(expression, ast.right); - if (op === '+' || op === '-' || op === '*' || - op === '/' || op === '%' || op === '===' || - op === '!==' || op === '>' || op === '>=' || - op === '<' || op === '<=') { + if (binaryOperators.indexOf(op) > -1) { node = new Node(ExpressionNodeType.BINARY, op, left, right); } else { //>>includeStart('debug', pragmas.debug); ","This may have hurt compiling performance, which will be important for the responsive of a UI generating styles. I don't know for sure so we can see what a profile looks like later; at the least, we can order the linear search so the most common operators are first."
"@@ -664,6 +664,8 @@ public class RegisterMinionActionTest extends JMockBaseTestCaseWithUser { will(returnValue(Optional.of(MINION_ID))); allowing(saltServiceMock).getMachineId(MINION_ID); will(returnValue(Optional.of(MACHINE_ID))); + allowing(saltServiceMock).getGrains(with(any(String.class)), with(any(TypeToken.class)),with(any(String[].class))); + will(returnValue(Optional.of(new MinionStartupGrains(Optional.of(MACHINE_ID), true)))); allowing(saltServiceMock).syncGrains(with(any(MinionList.class))); allowing(saltServiceMock).syncModules(with(any(MinionList.class))); allowing(saltServiceMock).getGrains(MINION_ID); ","Indentation seems off here and in other places in this file, please double check them all."
"@@ -888,8 +888,12 @@ int capi_rsa_sign(int dtype, const unsigned char *m, unsigned int m_len, /* Now cleanup */ err: + if (hash) CryptDestroyHash(hash); + if (hprov && hprov != capi_key->hprov) + CryptReleaseContext(hprov, 0); + return ret; } ",I'd be nice to indent this line.
"@@ -9,6 +9,8 @@ Runs a full pipeline using MNE-Python: - forward model computation - source reconstruction using dSPM on the contrast : faces - scrambled +Note that this example does quite a bit of processing, so even on a very +fast machine it can take over 10 minutes to complete.  # Authors: Alexandre Gramfort <alexandre.gramfort@telecom-paristech.fr> # Denis Engemann <denis.engemann@gmail.com> ",A bit exaggerated. Maybe remove the 'very'.
"@@ -657,5 +657,5 @@ crt_proc_out_common(crt_proc_t proc, crt_rpc_output_t *data) rc = crt_proc_output(rpc_priv, proc); out: - return rc; + return crt_der_2_hgret(rc); } ",Same here regarding line 614
"@@ -29,7 +29,9 @@ public class ErrorHandlerAdvice { @Advice.Argument(0) Context ctx, @Advice.Argument(1) Throwable throwable) { Optional<Span> span = ctx.maybeGet(Span.class); if (span.isPresent()) { - DECORATE.onError(span.get(), throwable); + // TODO this emulates old behaviour of BaseDecorator. Has to review + span.get().setStatus(Status.UNKNOWN); + TRACER.addThrowable(span.get(), throwable); } } } ",Or remove status :-)
"@@ -266,9 +266,8 @@ class JvmTarget(Target, Jarable): @property def resources(self): - # TODO(John Sirois): Consider removing this convenience: - # https://github.com/pantsbuild/pants/issues/346 - # TODO(John Sirois): Introduce a label and replace the type test? + # TODO: We should deprecate this method, but doing so will require changes to JVM publishing. + # see https://github.com/pantsbuild/pants/issues/4568 return [dependency for dependency in self.dependencies if isinstance(dependency, Resources)] @property ",s/deprecate/kill/? It's not public API.
"@@ -2163,7 +2163,7 @@ namespace TTD Js::CallInfo callInfo(static_cast<Js::CallFlags>(generatorInfo->arguments_callInfo_flags), generatorInfo->arguments_callInfo_count, false /*unusedBool*/); - Js::Arguments arguments(callInfo, (Js::Var*)argVals); + Js::Arguments arguments(callInfo, unsafe_write_barrier_cast<Js::Var*>(argVals)); // TODO: BUGBUG - figure out how to determine what the prototype was. Just use GetNull() for now Js::RecyclableObject* prototype = ctx->GetLibrary()->GetNull(); ",This matches the pattern from the recent change to lib/Runtime/Library/BoundFunction.cpp
"@@ -30,7 +30,7 @@ module Idv end def message - t('headings.lock_failure') + nil end def next_steps ",What is going on here? Why did we remove this translation?
"@@ -61,9 +61,13 @@ public class AddProjectAction implements QProfileWsAction { @Override public void handle(Request request, Response response) throws Exception { AddProjectRequest addProjectRequest = toWsRequest(request); - String profileKey = projectAssociationFinder.getProfileKey(addProjectRequest.getLanguage(), addProjectRequest.getProfileName(), addProjectRequest.getProfileKey()); - String projectUuid = projectAssociationFinder.getProjectUuid(addProjectRequest.getProjectKey(), addProjectRequest.getProjectUuid()); - profileProjectOperations.addProject(profileKey, projectUuid, userSession); + + try (DbSession dbSession = dbClient.openSession(false)) { + String profileKey = projectAssociationFinder.getProfileKey(addProjectRequest.getLanguage(), addProjectRequest.getProfileName(), addProjectRequest.getProfileKey()); + ComponentDto project = projectAssociationFinder.getProject(dbSession, addProjectRequest.getProjectKey(), addProjectRequest.getProjectUuid()); + profileProjectOperations.addProject(dbSession, profileKey, project); + } + response.noContent(); } ",You could even have gone further by loading only once the quality profile because currently : - It's loaded by projectAssociationFinder.getProfileKey - It's loaded again by profileProjectOperations.addProject But that could be part of another refactoring
"@@ -130,6 +130,18 @@ function _conferenceFailed({ dispatch, getState }, next, action) { break; } + case JitsiConferenceErrors.CONFERENCE_RESTARTED: { + const reason = 'Restart initiated because of a bridge failure'; + + if (enableForcedReload) { + dispatch(showErrorNotification({ + description: reason, + titleKey: 'dialog.sessionRestarted' + })); + } + + break; + } case JitsiConferenceErrors.CONNECTION_ERROR: { const [ msg ] = error.params; ",Optional style: I'd put the text in the description bellow without defining a variable for it.
"@@ -1,12 +1,12 @@ -import core +import contextlib + import proto.framework_pb2 as framework_pb2 +import core from framework import OpProtoHolder, Variable, Program, Operator from initializer import Constant, Normal, Xavier, Initializer from paddle.v2.fluid.layer_helper import LayerHelper, unique_name -import re -import cStringIO +from registry import layer_registry from param_attr import ParamAttr -import contextlib __all__ = [ 'fc', 'data', 'cross_entropy', 'conv2d', 'pool2d', 'embedding', 'concat', ","The name should be `register_layer`, it's more meaningful."
"@@ -373,11 +373,12 @@ class ConstraintBuilderVisitor(TypeVisitor[List[Constraint]]): cb = infer_constraints(template.args[0], item, SUPERTYPE_OF) res.extend(cb) return res + elif isinstance(actual, TupleType) and self.direction == SUPERTYPE_OF: + return infer_constraints(template, actual.fallback, self.direction) elif (isinstance(actual, TupleType) and template.type.is_protocol and self.direction == SUPERTYPE_OF): if mypy.subtypes.is_subtype(actual.fallback, erase_typevars(template)): - res.extend(infer_constraints(template, actual.fallback, self.direction)) - return res + return infer_constraints(template, actual.fallback, self.direction) return [] else: return [] ","I don't see how this branch can ever be entered - when this condition is true, the condition of the branch above will be true, and this won't get entered."
"@@ -14,6 +14,17 @@ namespace Dynamo.Search { protected readonly Dictionary<V, Dictionary<string, double>> entryDictionary = new Dictionary<V, Dictionary<string, double>>(); + + private bool experimentalSearch = false; + + /// <summary> + /// Indicates whether experimental search mode is turned on. + /// </summary> + internal bool ExperimentalSearch + { + get { return experimentalSearch; } + set { experimentalSearch = value; } + } /// <summary> /// All the current entries in search. ",When implementing my own debug mode VS suggested; internal bool ExperimentalSearch { get; set; } = false;
"@@ -26,4 +26,4 @@ class Jsoncpp(CMakePackage): depends_on('python', type='test') def cmake_args(self): - return ['-DBUILD_SHARED_LIBS=ON'] + return ['-DBUILD_SHARED_LIBS=ON', '-DJSONCPP_WITH_TESTS=OFF'] ",@mdorier can you condition this on whether `self.run_tests` is `True`? by default it will be off. Otherwise I think the result may be unexpected given the python test dependency.
"@@ -71,13 +71,6 @@ class SnliReader(DatasetReader): @classmethod def from_params(cls, params: Params) -> 'SnliReader': -  - Parameters - ---------- - filename : ``str`` - tokenizer : ``Params``, optional - token_indexers: ``List[Params]``, optional -  tokenizer = Tokenizer.from_params(params.pop('tokenizer', {})) token_indexers = {} token_indexer_params = params.pop('token_indexers', Params({})) ","You'll also need to add this to `predict_entailment` in the model, I think."
"@@ -86,7 +86,7 @@ public class JnlpAccessWithSecuredHudsonTest { public void anonymousCanAlwaysLoadJARs() throws Exception { r.jenkins.setNodes(Collections.singletonList(createNewJnlpSlave(test))); JenkinsRule.WebClient wc = r.createWebClient(); - HtmlPage p = wc.login(alice).goTo(computer/test/); + HtmlPage p = wc.withBasicApiToken(User.getById(alice, true)).goTo(computer/test/); // this fresh WebClient doesn't have a login cookie and represent JNLP launcher JenkinsRule.WebClient jnlpAgent = r.createWebClient(); ",Why does simply `withBasicApiToken(alice)` not work here? Does that user not exist until created here?
"@@ -1 +1,2 @@ from allennlp.semparse.contexts.table_question_knowledge_graph import TableQuestionKnowledgeGraph +from allennlp.semparse.contexts import atis_tables ","This line doesn't actually do anything, because you're just importing a submodule into a place it was already accessible. Before this line, I could do `from allennlp.semparse.contexts import atis_tables` in code outside of `semparse`, and this line lets me do exactly the same thing. In contrast, the line above takes something that was only accessible in a submodule and makes it accessible here. So before, you had to do `from allennlp.semparse.contexts.table_question_knowledge_graph import TableQuestionKnowledgeGraph`, and after, you can do `from allennlp.semparse.contexts import TableQuestionKnowledgeGraph`."
"@@ -1641,10 +1641,13 @@ namespace Dynamo.Graph.Workspaces notes.Add(noteModel); } + var annotationGuidValue = IdToGuidConverter(annotationViewInfo.Id); var annotationModel = new AnnotationModel(nodes, notes); annotationModel.AnnotationText = annotationViewInfo.Title; annotationModel.FontSize = annotationViewInfo.FontSize; annotationModel.Background = annotationViewInfo.Background; + annotationModel.GUID = annotationGuidValue; + this.AddNewAnnotation(annotationModel); } ",assign the guid to the annotation GUID on deserialize.
"@@ -154,6 +154,12 @@ public abstract class Wrapper { // get all public method. boolean hasMethod = hasMethods(methods); if (hasMethod) { + Map<String, Integer> sameNameMethodCount = new HashMap<>(); + for (Method m : methods) { + sameNameMethodCount.compute(m.getName(), + (key, oldValue) -> oldValue == null ? 1 : oldValue + 1); + } + c3.append( try{); for (Method m : methods) { //ignore Object's method. ","it would be better if we give it a big enough initial size, such as `(int) (methods.size() / 0.75f) + 1`"
"@@ -91,6 +91,11 @@ class EagerFilesetWithSpec(FilesetWithSpec): def files_hash(self): return self._files_hash + def iter_relative_paths(self): + An alternative `__iter__` that joins files with the relative root. + for f in self: + yield os.path.join(self.rel_root, f) + def __repr__(self): return 'EagerFilesetWithSpec(rel_root={!r}, files={!r})'.format(self.rel_root, self.files) ",Better to call this `paths_from_buildroot_iter()` (and below). `relative` is a vague term.
"@@ -130,9 +130,9 @@ ENCODE_DIGESTINFO_SHA(sha3_512, 0x0a, SHA512_DIGEST_LENGTH) *len = sizeof(digestinfo_##name##_der); \ return digestinfo_##name##_der; -static const unsigned char *digestinfo_encoding(int nid, size_t *len) +const unsigned char *rsa_digestinfo_encoding(int md_nid, size_t *len) { - switch (nid) { + switch (md_nid) { #ifndef FIPS_MODE # ifndef OPENSSL_NO_MDC2 MD_CASE(mdc2) ",SHA1 is non FIPS_MODE here but in FIPS_MODE in rsa_aid.c. Why?
"@@ -73,7 +73,7 @@ int uname(struct utsname *buf) return -1; } - strncpy(buf->nodename, uname_nodename, _UTSNAME_LENGTH); + strncpy(buf->nodename, uname_nodename, _UTSNAME_LENGTH - 1); return 0; } ",This assumes that nodename has a null byte at _UTSNAME_LENGTH - 1. It should be followed with buf->nodename[_UTSNAME_LENGTH - 1] = '\0'; to be safe.
"@@ -71,7 +71,7 @@ public class NotebookRestApi { Gson gson = new Gson(); private Notebook notebook; private NotebookServer notebookServer; - private SearchService notebookIndex; + private SearchService noteIndex; private NotebookAuthorization notebookAuthorization; public NotebookRestApi() { ","Term `noteIndex` is little bit confusing for me. Since you are working on naming, how about changing it into `noteSearchService`?"
"@@ -8210,6 +8210,7 @@ main(int argc, char **argv) case 'm': case 'M': case 'O': + case 'r': case 'R': case 's': case 'S': ",Oh could we have 'r' added to usage as well? I spent forever wondering why `zdb -h` wasn't showing the new option :)
"@@ -130,6 +130,10 @@ </div> <% end %> +<% if current_user.created_at < Time.new(2016, 8, 25) %> + <%= render partial: 'projects/index/introductory_popup' %> + <%= javascript_include_tag projects/introdutory_popup%> +<% end %> <% if @projects_by_orgs.length > 0 %> <% @projects_by_orgs.each do |org, projects| %> <%= render partial: projects/index/org_projects, locals: {org: org, projects: projects} %> ",I would change this date to the actual date this will hit production.
"@@ -58,6 +58,12 @@ def docs(request): def _get_popular_item(): Get a single, random item off the popular pages list. + if not settings.DEKIWIKI_ENDPOINT: + # No MindTouch API calls are performed here. But, pending bug 759361, + # a False value also implies that the data behind popular.json is no + # longer available. + return None + try: pages = json.load(open(os.path.join( settings.MDC_PAGES_DIR, 'popular.json'))) ",and this one?
"@@ -143,11 +143,11 @@ public class TopologyAwareNodeSelector } InternalNode chosenNode = null; - int depth = networkLocationSegmentNames.size(); + int depth = topologicalSplitCounters.size() - 1; int chosenDepth = 0; Set<NetworkLocation> locations = new HashSet<>(); for (HostAddress host : split.getAddresses()) { - locations.add(networkLocationCache.get(host)); + locations.add(networkTopology.locate(host)); } if (locations.isEmpty()) { // Add the root location ",This kind of `xxx - 1` calculation looks rare. Maybe we could get the same information from NetworkLocation? I'm also thinking is SegmentNames really needed.
"@@ -154,6 +154,9 @@ type Config struct { // for testing ingesterClientFactory ring_client.PoolFactory `yaml:-` + + // when true the distributor does not validate labels at ingest time + SkipLabelValidation bool `yaml:-` } // RegisterFlags adds the flags required to config this to the given FlagSet ",Would you mind adding something like Cortex doesn't directly use it (and should never use it) but this feature is used by other projects built on top of it..
"@@ -62,7 +62,7 @@ bool bitmapNonEmpty(const OpenDDS::RTPS::SequenceNumberSet& snSet) } for (int bit = 31; bit >= 0; --bit) { if ((snSet.bitmap[i] & (1 << bit)) - && snSet.numBits >= i * 32 + (31 - bit)) { + && snSet.numBits > i * 32 + (31 - bit)) { return true; } } ",This should probably just create a mask and do a single comparison rather than loop over individual bits.
"@@ -84,11 +84,14 @@ def find(f: Callable[[T], bool], seq: Sequence[T]) -> T: return None -class ASTConverter(typed_ast.NodeTransformer): - def __init__(self): - self.in_class = False +class ASTConverter(ast35.NodeTransformer): + def __init__(self, pyversion, custom_typing_module = None): + self.class_nesting = 0 self.imports = [] + self.pyversion = pyversion + self.custom_typing_module = custom_typing_module + def generic_visit(self, node): raise RuntimeError('AST node not implemented: ' + str(type(node))) ",Why no type annotations here?
"@@ -131,7 +131,14 @@ namespace System.Text.Json.Serialization // For performance, only perform validation on internal converters on debug builds. if (IsInternalConverter) { - value = Read(ref reader, typeToConvert, options); + if (IsInternalConverterForNumberType && state.Current.NumberHandling != null) + { + value = ReadNumberWithCustomHandling(ref reader, state.Current.NumberHandling.Value); + } + else + { + value = Read(ref reader, typeToConvert, options); + } } else #endif ","What type is `NumberHandling`? Isn't it an enum value, how can it be null?"
"@@ -348,7 +348,8 @@ func (data *resourceRowData) ColorizedColumns() []string { func (data *resourceRowData) getInfoColumn() string { step := data.step - if step.Op == deploy.OpCreateReplacement || step.Op == deploy.OpDeleteReplaced { + switch step.Op { + case deploy.OpCreateReplacement, deploy.OpDeleteReplaced: // if we're doing a replacement, see if we can find a replace step that contains useful // information to display. for _, outputStep := range data.outputSteps { ",I assume that there's some hidden invariant here that `data.outputSteps[0]` is correct. Should we be asserting something about `step.Op` at this point? Would it make more sense to write the above as a range like we have for Create/Replace?
"@@ -138,7 +138,8 @@ module Engine end when :place_token - ability(entity).hexes.include?(hex.id) + ability(entity).hexes.include?(hex.id) && + hex.tile.cities.any? { |c| c.tokenable?(entity.owner, free: true) } when :lay_tile @game.hex_by_id(hex.id).neighbors.keys if hex == @destination end ","so one thing to note is that avialble_hex should return an array of edges, what you have now is a boolean which is hacky and sort of works, but is not consistent with how this method is used elsewhere"
"@@ -248,7 +248,7 @@ </dependency> <%_ } _%> <%_ } _%> -<%_ if (applicationType === 'gateway' && authenticationType === 'uaa') { _%> +<%_ if (applicationType === 'gateway') { _%> <dependency> <groupId>org.apache.httpcomponents</groupId> <artifactId>httpclient</artifactId> ",Remove the entire condition.
"@@ -109,7 +109,7 @@ class Storage end def promotable_blobs - mirrorable_blobs + mirrorable_blobs.where(created_at: (..7.days.ago)) end def secondary_blobs ",TIL! Assume this is shorthand for `Time.zone.now..7.days.ago`?
"@@ -423,6 +423,7 @@ ActiveRecord::Schema.define(version: 2020_04_08_213043) do t.boolean allow_prompt_login, default: false t.boolean signed_response_message_requested, default: false t.integer ial2_quota + t.boolean liveness_checking_enabled t.index [issuer], name: index_service_providers_on_issuer, unique: true end ","One thought, just an idea, not a requirement, what if we called this `liveness_checking_required` ? or `requires_liveness_checking` so it's slightly different than the global feature flag we have? I feel like having separate names would make it easier to debug"
"@@ -96,9 +96,7 @@ class Jetpack_Modules_List_Table extends WP_List_Table { <# var i = 0; if ( data.items.length ) { _.each( data.items, function( item, key, list ) { - if ( item === undefined ) return; - if ( 'minileven' == item.module && ! item.activated ) return; - if ( 'manage' == item.module && item.activated ) return; #> + if ( item === undefined ) return; #> <tr class=jetpack-module <# if ( ++i % 2 ) { #> alternate<# } #><# if ( item.activated ) { #> active<# } #><# if ( ! item.available ) { #> unavailable<# } #> id={{{ item.module }}}> <th scope=row class=check-column> <# if ( 'videopress' !== item.module ) { #> ",I took the opportunity to delete this reference to the Manage module.
"@@ -34,11 +34,7 @@ namespace Dnn.Modules.ResourceManager.Components search = (search ?? string.Empty).Trim(); - // Lucene does not support wildcards as the beginning of the search - // For file names we can remove any existing wildcard at the beginning - var cleanedKeywords = TrimStartWildCards(search); - - var files = FolderManager.Instance.SearchFiles(folder, cleanedKeywords, recursive); + var files = FolderManager.Instance.SearchFiles(folder, search, recursive); var sortProperties = SortProperties.Parse(sorting); var sortedFiles = SortFiles(files, sortProperties).ToList(); totalCount = sortedFiles.Count; ",Did something change with Lucene's support for wildcards? What's the behavior if you search with a wildcard at the beginning of your search?
"@@ -923,7 +923,7 @@ func (c *Container) cleanup() error { // Clean up network namespace, if present if err := c.cleanupNetwork(); err != nil { - lastError = nil + lastError = err } if err := c.cleanupCgroups(); err != nil { ","This had been non-fatal since #302, but I don't see any discussion there about why it was non-fatal then."
"@@ -18,6 +18,7 @@ use Automattic\Jetpack\Terms_Of_Service; use Automattic\Jetpack\Tracking; use Automattic\Jetpack\Plugin\Tracking as Plugin_Tracking; use Automattic\Jetpack\Redirect; +use Automattic\Jetpack\Jetpack_User_Agent_Info; /* Options: ","I think the `Jetpack_User_Agent_Info` should become part of the `jetpack-devices` package, and could more be renamed `Automattic\Jetpack\Device\User_Agent_Info`"
