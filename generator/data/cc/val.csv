code,review
"@@ -231,4 +231,8 @@ def setup_app(app): ) return rv + @app.template_test('list') + def _is_list(value): + return isinstance(value, list) + return app",Should we call it `is_list`?
"@@ -44,7 +44,7 @@ namespace OpenTelemetry.Trace configureSqlClientInstrumentationOptions?.Invoke(sqlOptions); builder.AddInstrumentation(() => new SqlClientInstrumentation(sqlOptions)); - builder.AddSource(SqlClientDiagnosticListener.ActivitySourceName); + builder.AddSource(new Source(SqlClientDiagnosticListener.ActivitySourceName)); return builder; }","in the instrumentation example, should we use minversion and maxversion = the assembly version or should ignore our assembly version?"
"@@ -25,7 +25,7 @@ from scapy.modules.six.moves import range ## Fields ## ############ -class Field(six.with_metaclass(Field_metaclass, object)): +class Field(object): For more informations on how this work, please refer to http://www.secdev.org/projects/scapy/files/scapydoc.pdf chapter ``Adding a New Field''",Why this change ? Is it useful ?
"@@ -0,0 +1,4 @@ +const titleNode = virtualNode.children.find(({ props }) => { + return props.nodeName === 'title'; +}); +return !!titleNode && titleNode.actualNode.textContent.trim() !== '';","I know this is a nitpick, but don't we always go `nodeName.toUpperCase`?"
"@@ -37,6 +37,11 @@ public class EMailValidatorTest { assertEquals(false, EMailValidator.isEmailValid(dora@.com, null)); assertEquals(false, EMailValidator.isEmailValid(, null)); assertEquals(false, EMailValidator.isEmailValid(null, null)); + /* + Add tests for 4601 + */ + assertEquals(true, EMailValidator.isEmailValid(ziller@wiso.uni-koeln.de, null)); + assertEquals(true, EMailValidator.isEmailValid(jayned@essex.ac.uk, null)); } }",We should reformat this emails in the test to be a little less real.
"@@ -449,14 +449,18 @@ class LNGossip(LNWorker): self.features |= LnFeatures.GOSSIP_QUERIES_OPT self.features |= LnFeatures.GOSSIP_QUERIES_REQ self.unknown_ids = set() + self.has_started = False def start_network(self, network: 'Network'): assert network + if self.has_started: + return super().start_network(network) asyncio.run_coroutine_threadsafe(self.taskgroup.spawn(self.maintain_db()), self.network.asyncio_loop) + self.has_started = True async def maintain_db(self): - await self.channel_db.load_data() + await self.channel_db.data_loaded.wait() while True: if len(self.unknown_ids) == 0: self.channel_db.prune_old_policies(self.max_age)","this looks wrong -- `data_loaded` is an asyncio.Event, not a bool"
"@@ -0,0 +1,11 @@ +class MoveClientAdminRole < ActiveRecord::Migration + def change + role = Role.find_or_create_by(name: 'client_admin') + + User.client_admin_emails.each do |email_address| + user = User.find_by_email_address(email_address) or next + user.add_role(role) + user.save! + end + end +end","We should avoid using the `.client_admin_emails` method here, since it will presumably be removed and thus break this migration in the future."
"@@ -29,6 +29,7 @@ class ServiceProvider extends ModuleServiceProvider $this->registerComponents(); $this->registerThemeLogging(); $this->registerCombinerEvents(); + $this->registerDatabaseLayerModels(); /* * Backend specific",Can you rename this to `registerHalcyonModels` @bennothommo ?
"@@ -37,6 +37,15 @@ public final class Const { public static final String V4_PREFIX = String.format(/v4/%s/registry, DOMAIN_NAME); + public static final String REGISTRY_VERSION; + static { + if (VERSION_V3.equals(CURRENT_VERSION)) { + REGISTRY_VERSION = 3.0.0; // old is strange + } else { + REGISTRY_VERSION = 0.4.0; + } + } + public static final String MICROSERVICE_OPERATION_ALL; static { if (VERSION_V3.equals(CURRENT_VERSION)) {","I think we just need keep tracking the API version instead of the service center version. For Java chassis, it only knows about the service center version."
"@@ -72,6 +72,13 @@ public enum Platform { } }, + WIN10(windows 10, win10) { + @Override + public Platform family() { + return WINDOWS; + } + }, + MAC(mac, darwin, os x) {}, SNOW_LEOPARD(snow leopard, os x 10.6) {",we'll also have to think about adding Windows Server 2014 or whatever they come up with later.
"@@ -29,7 +29,7 @@ import ( type Protocol interface { // RunStateTransition returns the state root CID resulting from applying the input ts to the // prior `stateID`. It returns an error if the transition is invalid. - RunStateTransition(ctx context.Context, ts block.TipSet, blsMsgs [][]*types.UnsignedMessage, secpMsgs [][]*types.SignedMessage, ancestors []block.TipSet, parentWeight fbig.Int, parentStateRoot cid.Cid, parentReceiptRoot cid.Cid) (cid.Cid, []vm.MessageReceipt, error) + RunStateTransition(ctx context.Context, ts block.TipSet, blsMsgs [][]*types.UnsignedMessage, secpMsgs [][]*types.SignedMessage, parentWeight fbig.Int, parentStateRoot cid.Cid, parentReceiptRoot cid.Cid) (cid.Cid, []vm.MessageReceipt, error) // BlockTime returns the block time used by the consensus protocol. BlockTime() time.Duration",FYI I've been meaning to delete this forever. In the future you can get rid of this instead of fixing.
"@@ -78,6 +78,15 @@ public class CsrfWebFilter implements WebFilter { this.csrfTokenRepository = csrfTokenRepository; } + /** + * Gets the {@link ServerCsrfTokenRepository} + * @return The {@link ServerCsrfTokenRepository} + * @since 5.1 + */ + public ServerCsrfTokenRepository getCsrfTokenRepository() { + return this.csrfTokenRepository; + } + public void setRequireCsrfProtectionMatcher( ServerWebExchangeMatcher requireCsrfProtectionMatcher) { Assert.notNull(requireCsrfProtectionMatcher, requireCsrfProtectionMatcher cannot be null);",We should not add a getter as it breaks encapsulation
"@@ -166,14 +166,14 @@ class ProductRepositoryTest extends DatabaseTestCase $product1 = $this->getReference(ProductDataFixture::PRODUCT_PREFIX . 1); $product2 = $this->getReference(ProductDataFixture::PRODUCT_PREFIX . 45); - $this->setProductOrderingPriority($product1, 0); - $this->setProductOrderingPriority($product2, 1); + $this->setProductOrderingPriority($product1, 2); + $this->setProductOrderingPriority($product2, 3); $results = $this->getProductsForSearchOrderedByPriority('sencor'); $this->assertSame($product2, $results[0]); $this->assertSame($product1, $results[1]); - $this->setProductOrderingPriority($product2, -1); + $this->setProductOrderingPriority($product2, 1); $results = $this->getProductsForSearchOrderedByPriority('sencor'); $this->assertSame($product1, $results[0]);",Why is this test updated? I thought that the behaviour of product ordering will be the same.
"@@ -170,6 +170,17 @@ func TestYARPCMaxMsgSize(t *testing.T) { }) } +func TestDataRace(t *testing.T) { + t.Parallel() + value := strings.Repeat(a, 32768) + doWithTestEnv(t, nil, nil, nil, func(t *testing.T, e *testEnv) { + assert.NoError(t, e.SetValueYARPC(context.Background(), foo, value)) + getValue, err := e.GetValueYARPC(context.Background(), foo) + assert.NoError(t, err) + assert.Equal(t, value, getValue) + }) +} + func TestApplicationErrorPropagation(t *testing.T) { t.Parallel() doWithTestEnv(t, nil, nil, nil, func(t *testing.T, e *testEnv) {",does this test fail without the fix?
"@@ -24,7 +24,12 @@ public class PMDASMVisitor extends ClassVisitor { private String outerName; - private Map<String, String> packages = new HashMap<>(); + private Map<String, String> packages = new HashMap() { + @Override + public Object put(Object key, Object value) { + return super.put(key, value); + } + }; private AnnotationVisitor annotationVisitor = new PMDAnnotationVisitor(this); ",what's the point of this override?
"@@ -62,6 +62,14 @@ type blockJournal struct { j diskJournal refs map[BlockID]blockRefMap isShutdown bool + + // Tracks the total size of on-disk blocks that will be put to the + // server (i.e., does not count reference adds). It is only + // accurate for users of this journal that properly flush entries; + // in particular, direct calls to `removeReferences` can cause + // this count to deviate from the actual disk usage of the + // journal. + blockBytes int64 } type bserverOpName string","A better name might be `bytesToFlush`, to emphasize that it only matters when flushing."
"@@ -706,7 +706,6 @@ class ArrayAssignmentAnalyzer } } elseif ($type instanceof TNonEmptyList && $key_value instanceof Type\Atomic\TLiteralInt - && ($key_value->value === $key_value->value || $key_value->value < $type->count) && count($key_values) === 1 ) { $has_matching_objectlike_property = true;","while the lhs of that or looks really redundant, the rhs does not immediately strike as useless"
"@@ -216,6 +216,7 @@ bool GenerateRustModuleRootFile(const Parser &parser, for (auto it = sub_modules.begin(); it != sub_modules.end(); it++) { code += pub mod  + it->first +  {; code.IncrementIdentLevel(); + code += #![deny(unsafe_op_in_unsafe_fn)]; code += use super::*;; it->second.GenerateImports(code); code.DecrementIdentLevel();","I think it makes more sense for this to be at the top of the module root file, or at the top of every generated object file. I believe the `#![...]` attributes will cover all nested modules so there's some redundant coverage and also it currently misses the generated code that's in the root namespace."
"@@ -239,12 +239,11 @@ func (k *KeybaseDaemonLocal) Resolve(ctx context.Context, assertion string) ( return libkb.NormalizedUsername(), keybase1.UserOrTeamID(), err } - // TODO(KBFS-2621): Resolve shouldn't work for implicit teams, but - // until CORE-6623 is done, this is required. - iti, err := k.localImplicitTeams.getLocalImplicitTeam(id.AsTeamOrBust()) - if err == nil { - // An implicit team exists, so use the display name. - return iti.Name, id, nil + _, ok := k.localImplicitTeams[id.AsTeamOrBust()] + if ok { + // An implicit team exists, so Resolve shouldn't work. + return libkb.NormalizedUsername(), keybase1.UserOrTeamID(), + fmt.Errorf(Team ID %s is an implicit team, id) } return ti.Name, id, nil",Meaning we should be using `ResolveImplicitTeamByID`?
"@@ -42,7 +42,7 @@ public class RemoteNetworkConnection implements NetworkConnection { @Override public ConnectionType setNetworkConnection( ConnectionType type) { - Map<String, ConnectionType> mode = ImmutableMap.of(type, type); + Map<String, Integer> mode = ImmutableMap.of(type, type.getBitMask()); return new ConnectionType(((Number) executeMethod.execute(DriverCommand.SET_NETWORK_CONNECTION, ImmutableMap .of(parameters, mode)))",can you change this instead to just `type.toString()` and then you wouldn't have to expose the getBitMask in the enum. (Alternatively you could have used `type.hashCode()` but that doesn't feel as nice)
"@@ -341,13 +341,17 @@ module Beaker # @param [Hash{Symbol=>String}] opts An options hash # @option opts [String] :version The version of Puppet to install, required # @option opts [String] :win_download_url The url to download puppet from + # + # @note on windows, the +:ruby_arch+ host parameter can determine in addition + # to other settings whether the 32 or 64bit install is used def install_puppet_from_msi( host, opts ) #only install 64bit builds if # - we are on puppet version 3.7+ # - we do not have install_32 set on host # - we do not have install_32 set globally version = opts[:version] - if !(version_is_less(version, '3.7')) and host.is_x86_64? and not host['install_32'] and not opts['install_32'] + is_config_32 = host['ruby_arch'] == 'x86' || host['install_32'] || opts['install_32'] + if !(version_is_less(version, '3.7')) && host.is_x86_64? && !is_config_32 host['dist'] = puppet-#{version}-x64 else host['dist'] = puppet-#{version}",Seems like `true == ...` comparison can be dropped.
"@@ -133,6 +133,16 @@ def build_permissions_set(object_uri, unbound_permission, return granters +# XXX: May need caching +def groupfinder(userid, request): + authn_type = getattr(request, 'authn_type', None) + if authn_type is None: + return [] + + prefixed_userid = '%s:%s' % (authn_type.lower(), userid) + return request.registry.permission.user_principals(prefixed_userid) + + @implementer(IAuthorizationPolicy) class AuthorizationPolicy(CliquetAuthorization): def get_bound_permissions(self, *args, **kwargs):",Now we have `request.prefixed_userid` :)
"@@ -49,6 +49,9 @@ SIGNATURE_V4_PARAMS = [ 'X-Amz-SignedHeaders', 'X-Amz-Signature' ] +# headers to blacklist from request_dict.signed_headers +BLACKLISTED_HEADERS = ['X-Amz-Security-Token'] + # query params overrides for multipart upload and node sdk ALLOWED_QUERY_PARAMS = [ 'X-id', 'X-Amz-User-Agent', 'X-Amz-Content-Sha256',","Looks great, Thanks for this PR @macnev2013 !   nit: I'd rename this to something more descriptive, e.g., `PRESIGN_SKIPPED_HEADERS = ...` (not critical - can be done in a future PR..)."
"@@ -33,9 +33,12 @@ final class MergeReleaseCandidateBranchReleaseWorker extends AbstractShopsysRele */ public function work(Version $version): void { - $this->symfonyStyle->note('You need to create a merge commit, see https://docs.shopsys.com/en/latest/contributing/merging-on-github/ for detailed instructions.'); - $this->symfonyStyle->warning(sprintf('If you are creating the merge commit locally, do not forget to push the %s branch!', $this->initialBranchName)); - $this->confirm(sprintf('Confirm %s branch was merged to %s', $this->createBranchName($version), $this->initialBranchName)); + $this->symfonyStyle->note('You need to create a merge commit locally, see https://docs.shopsys.com/en/latest/contributing/merging-on-github/ for detailed instructions.'); + $this->symfonyStyle->warning(sprintf( + 'Do not forget to push the %s branch!', + $this->initialBranchName + )); + $this->confirm(sprintf('Confirm %s branch was merged and pushed to %s', $this->createBranchName($version), $this->initialBranchName)); if ($this->initialBranchName === 'master') { $this->symfonyStyle->note('Rest assured, after the master branch is built on Heimdall, it is split automatically (using http://heimdall:8080/view/Tools/job/tool-monorepo-split/)');","If you need to create a merge commit locally, why do we provide link for docs about merging on github? :D"
"@@ -123,6 +123,15 @@ def distribution(): id=dist_id) +def sandboxed(): + Check whether the environment is a sandbox, i.e. has restricted access to the host system. + + Return: + True if the environment is a sandbox. +  + return distribution().parsed == Distribution.kde + + def _git_str(): Try to find out git version. ",`distribution()` can be `None` (e.g. on non-Linux systems)
"@@ -1207,6 +1207,8 @@ class Frame(object, metaclass=ABCMeta): >>> df['b'].sum(min_count=3) nan  + axis = validate_axis(axis) + numeric_only = None if axis == 1 else numeric_only def sum(spark_column, spark_type): if isinstance(spark_type, BooleanType):",`numeric_only = None if axis == 1 and numeric_only is True else numeric_only`?
"@@ -160,6 +160,11 @@ instr_encode_arch(dcontext_t *dcontext, instr_t *instr, byte *copy_pc, byte *fin CLIENT_ASSERT(instr_operands_valid(instr), instr_encode error: operands invalid); *(uint *)copy_pc = encode_common(final_pc, instr); + if (*(uint *)copy_pc == ENCFAIL) { + IF_DEBUG(instr_disassemble(dcontext, instr, STDERR)); + /* We were unable to encode this instruction. */ + ASSERT_NOT_IMPLEMENTED(false); /* FIXME i#1569 */ + } return copy_pc + 4; } ",Everything printed should go through the checks for stderr_mask. How about instr_disassemble_to_buffer and then print via SYSLOG_INTERNAL_ERROR which has the proper checks and also tees the print to the log file.
"@@ -33,6 +33,18 @@ public class TransactionPoolOptions private static final String ETH65_TX_ANNOUNCED_BUFFERING_PERIOD_FLAG = --Xeth65-tx-announced-buffering-period-milliseconds; + private static final String STRICT_TX_REPLAY_PROTECTION_ENABLED_FLAG = + --strict-tx-replay-protection-enabled; + + @CommandLine.Option( + names = {STRICT_TX_REPLAY_PROTECTION_ENABLED_FLAG}, + paramLabel = <Boolean>, + description = + Require transactions submitted via JSON-RPC to use replay protection in accordance with EIP-155 (default: ${DEFAULT-VALUE}), + fallbackValue = true, + arity = 0..1) + private Boolean strictTxReplayProtectionEnabled = false; + @CommandLine.Option( names = {TX_MESSAGE_KEEP_ALIVE_SEC_FLAG}, paramLabel = <INTEGER>,","Ah, so it IS unstable already. Cool, lets prefix with X."
"@@ -5,7 +5,7 @@ package ddevapp const DDevComposeTemplate = `version: '2' services: - {{ .plugin }}-{{.name }}-db: + db: container_name: {{ .plugin }}-${DDEV_SITENAME}-db image: $DDEV_DBIMAGE volumes:",Should we be using version 3 now?
"@@ -21,8 +21,11 @@ def main(argv): .filter(Instance.keywords_tsv.is_(None)) ) - for instance, owner, name in rows: + for idx, (instance, owner, name) in enumerate(rows): + print(%s/%s/%s % (owner, name, instance.hash)) instance.keywords_tsv = keywords_tsvector(owner, name, instance.contents) + if (idx + 1) % 100 == 0: + db.session.commit() db.session.commit() print(Done!)",extremely minor: if you use `%s/%s:%s` it will be consistent with install syntax. i guess we won't need to install from the logs.
"@@ -1690,10 +1690,12 @@ } if(shouldDelete) delete oSVersionData.chartData[i]; + delete platformVersionTotal[i]; } } oSVersionData.chartData = _.compact(oSVersionData.chartData); + platformVersionTotal = _.compact(platformVersionTotal); var platformVersionNames = _.pluck(oSVersionData.chartData, metric || _name), platformNames = [];","Since `shouldDelete` is not enclosed in {} brackets, it only includes `delete oSVersionData.chartData[i];` and thus `delete platformVersionTotal[i];` is executed for every segment deleting them"
"@@ -38,6 +38,9 @@ static int on_req(h2o_handler_t *_self, h2o_req_t *req) } h2o_http2_debug_state_t *debug_state = req->conn->callbacks->get_debug_state(req, self->hpack_enabled); + if (debug_state == NULL) { + return -1; + } // stringify these variables to embed in Debug Header h2o_iovec_t conn_flow_in, conn_flow_out;","I assume that we have similar code everywhere; one that check if the callback is NULL, if not, calls the callback and check if the return value is NULL. In other words, we are performing the check twice. I do not think that having such coding pattern is optimal. Instead, could we require every instance of `http_conn_callbacks_t` to setup all the callback pointers, so that we can call the callback unconditionally? For example, you could define default functions that return NULL (e.g. `h2o_http2_debug_state_t *h2o_conn_default_get_debug_state(h2o_req_t *req, int hpack_enabled) { return NULL; }`) and let the callbacks (that do not require a specialized implementation) use the default."
"@@ -69,7 +69,7 @@ class BaseUpdatePartitionSpec implements UpdatePartitionSpec { this.schema = spec.schema(); this.nameToField = indexSpecByName(spec); this.transformToField = indexSpecByTransform(spec); - this.lastAssignedPartitionId = base.lastAssignedPartitionId(); + this.lastAssignedPartitionId = base.lastPartitionId(); spec.fields().stream() .filter(field -> field.transform() instanceof UnknownTransform)","I don't think we need to rename the method, just the property in the metadata file."
"@@ -1,3 +1 @@ -return !axe.commons.aria.isValidRole(node.getAttribute('role'), { - flagUnsupported: true -}); +return axe.commons.aria.isUnsupportedRole(node.getAttribute('role'));","I know the `aria.isValidRole` does not `sanitize` the `role`. It may be worth doing `trim` or `axe.commons.text.sanitize`, as well as `toLoweCase`, so it matches the values in the `lookupTable`"
"@@ -516,7 +516,12 @@ function isDOMElement (obj) { */ function findDOMElement (element) { if (typeof element === 'string') { - return document.querySelector(element) + const elements = [].slice.call(document.querySelectorAll(element)) + if (elements.length > 1) { + return elements + } + return elements[0] + // return document.querySelector(element) } if (typeof element === 'object' && isDOMElement(element)) {",Changing this function means other cases (like a `target` option) where the selector exists more than once on the page also return an array. Maybe better to have a separate function that always returns an array?
"@@ -29,7 +29,7 @@ namespace Ethereum.VM.Test { private static readonly Dictionary<string, AbiType> TypesByName = new Dictionary<string, AbiType> { - {uint256, AbiType.UInt}, + {uint256, AbiType.UInt256}, {uint32[], new AbiArray(new AbiUInt(32))}, {bytes10, new AbiBytes(10)}, {bytes, AbiType.DynamicBytes},","UInt in Solidity is uint256, that was correct, it is not a C# uint"
"@@ -11,7 +11,12 @@ import ( github.com/aws/copilot-cli/internal/pkg/manifest ) -// Validation errors when rendering manifest into template. +// container dependency status constants. +const ( + dependsOnStart = start + dependsOnComplete = complete + dependsOnSuccess = success +) // Empty field errors. var (","What happens if someone puts START in their manifest, instead of start? Does Cloudformation accept uppercase?"
"@@ -0,0 +1,19 @@ +package kubernetes + +import ( + v1 k8s.io/api/core/v1 +) + +// CheckPodsRunning returns true if the number of pods is equal to expected pods and all pods are in running state +func CheckPodsRunning(pods v1.PodList, expectedPods int) bool { + if len(pods.Items) < expectedPods { + return false + } + + for _, pod := range pods.Items { + if pod.Status.Phase != Running { + return false + } + } + return true +}",any suggestions for improving this? How about creating predicate functions and testing against that ?
"@@ -86,6 +86,16 @@ def _column_op(f): args = [arg._scol if isinstance(arg, IndexOpsMixin) else arg for arg in args] scol = f(self._scol, *args) scol = booleanize_null(self._scol, scol, f) + # PySpark and pandas have a different way to calculate modulo operation. + # Below lines are needed for closing the gap. + if f is spark.Column.__mod__: + scol = F.when((self._scol * args[0] < 0) & (scol != 0), scol + args[0]).otherwise( + scol + ) + elif f is spark.Column.__rmod__: + scol = F.when( + (self._scol * args[0] < 0) & (scol != 0), scol + self._scol + ).otherwise(scol) return self._with_new_scol(scol) else:",Can you handle these differences in the implementation side? See `__sub__` or `__add__` for example.
"@@ -32,10 +32,11 @@ module RSpec include Pending extend SharedExampleGroup - unless respond_to?(:define_singleton_method) - # @private - def self.define_singleton_method(*a, &b) - (class << self; self; end).__send__(:define_method, *a, &b) + # @private + def self.idempotently_define_singleton_method(name, &definition) + (class << self; self; end).module_exec do + remove_method(name) if method_defined?(name) + define_method(name, &definition) end end ",Maybe this should be a module in rspec-support? It seems useful enough that we'll want it in other places.
"@@ -839,10 +839,9 @@ def handle_diff_results(args): init_logger(args.verbose if 'verbose' in args else None, stream) - require_export_dir = any([o in ['html', 'gerrit', 'codeclimate'] - for o in args.output_format]) - if require_export_dir and 'export_dir' not in args: - LOG.error(No export directory given!) + if len(args.output_format) > 1 and ('export_dir' not in args): + LOG.error(Export directory is required if multiple output formats  + are selected!) sys.exit(1) check_deprecated_arg_usage(args)","I think we should extend the help of this command too with this information. And mention that if only 1 output is given, the results will be printed to the standard output."
"@@ -18,10 +18,10 @@ node putTargets.js // Import required AWS SDK clients and commands for Node.js import { PutTargetsCommand } from @aws-sdk/client-cloudwatch-events; -import { cweClient } from ./libs/cloudWatchEventsClient; +import { cweClient } from ./libs/cloudWatchEventsClient.js; // Set the parameters -const params = { +export const params = { Rule: DEMO_EVENT, Targets: [ {",I dont think these imports need the .js right?
"@@ -3333,7 +3333,14 @@ instr_is_reg_spill_or_restore_ex(void *drcontext, instr_t *instr, bool DR_only, reg = &myreg; if (instr_check_tls_spill_restore(instr, spill, reg, &check_disp)) { int offs = reg_spill_tls_offs(*reg); - if (!DR_only || (offs != -1 && check_disp == os_tls_offset((ushort)offs))) { + if (!DR_only || + (offs != -1 && + /* Mangling may choose to spill registers to a not natural tls offset, + * e.g. rip-rel mangling will, if rax is used by the instruction. We + * allow for this here and still recognize the DR spill. + */ + (instr_is_our_mangling(instr) || + check_disp == os_tls_offset((ushort)offs)))) { if (tls != NULL) *tls = true; if (offs_out != NULL)","This only works for a mangled instruction list: i.e., only during bb building (after a client's events) or bb recreation (also after a client's events). Thus this call will never return true for a client. Plus, this is-spill function is used for more than instrlists: some callers use it when decoding raw instructions, such as drreg and also I think DR may use it that way when it decodes from the cache in some cases? So this does not seem a complete solution."
"@@ -43,7 +43,7 @@ namespace Samples .MapResult( (JaegerOptions options) => TestJaegerExporter.Run(options.Host, options.Port), (ZipkinOptions options) => TestZipkinExporter.Run(options.Uri), - (PrometheusOptions options) => TestPrometheus.RunAsync(options.Port, options.PushIntervalInSecs, options.DurationInMins), + (PrometheusOptions options) => TestPrometheusExporter.RunAsync(options.Port, options.PushIntervalInSecs, options.DurationInMins), (HttpClientOptions options) => TestHttpClient.Run(), (RedisOptions options) => TestRedis.Run(options.Uri), (ZPagesOptions options) => TestZPagesExporter.Run(),",separately we can remove the Exporters folder. This is not just showing Exporter sample anymore.
"@@ -23,7 +23,7 @@ import ( ) const ( - avgCPUUtilizationFanout int32 = 95 + avgCPUUtilizationFanout int32 = 30 avgCPUUtilizationIngress int32 = 95 avgCPUUtilizationRetry int32 = 95 // The limit we set (for Fanout and Retry) is 3000Mi which is mostly used","I am concerned if we are overfitting to solve rapid request spikes. If I have a gradual request increase that just causes fanout to use CPU at, say, 40%, this will result in 2 pods with low CPU utilization. Is my understanding correct?"
"@@ -164,6 +164,16 @@ module Beaker optionally_color GREY, string, false end + # Custom reporting for performance/sysstat messages + # Will not print unless we are at {LOG_LEVELS} 'debug' or higher. + # @param args[Array<String>] Strings to be reported + def perf_output *args + return unless is_debug? + strings = strip_colors_from args + string = strings.join + optionally_color MAGENTA, string, false + end + # Report a debug message. # Will not print unless we are at {LOG_LEVELS} 'debug' or higher. # @param args[Array<String>] Strings to be reported",Please add a yard @param tag here.
"@@ -22,9 +22,9 @@ define(['viewContainer', 'focusManager', 'queryString', 'layoutManager'], functi newView.initComplete = true; if (typeof options.controllerFactory === 'function') { - - // Use controller method var controller = new options.controllerFactory(newView, eventDetail.detail.params); + } else if (options.controllerFactory && typeof options.controllerFactory.default === 'function') { + var controller = new options.controllerFactory.default(newView, eventDetail.detail.params); } if (!options.controllerFactory || dispatchPageEvents) {",Maybe move `var controller` out of `if/else`? (_Code Smell_)
"@@ -357,6 +357,7 @@ OUTER_LOOP: // Render renders Markdown to HTML with special links. func Render(rawBytes []byte, urlPrefix string, metas map[string]string) []byte { + urlPrefix = bytes.Replace(urlPrefix, string(spaceBytes), string(spaceEncodedBytes), -1) result := RenderRaw(rawBytes, urlPrefix) result = PostProcess(result, urlPrefix, metas) result = Sanitizer.SanitizeBytes(result)",Can you compile this line?
"@@ -115,7 +115,7 @@ public class InMemoryProjectCache extends AbstractProjectCache implements Projec public Optional<Project> getProjectById(final Integer key) throws ProjectManagerException { Project project = this.projectsById.get(key); if (project == null) { - logger.error(Project not found in cache, fetching from DB); + logger.info(Project with ID  + key +  not found in cache, fetching from DB); project = fetchProjectById(key); } return Optional.ofNullable(project);",Can key be null?
"@@ -585,9 +585,12 @@ int flb_utils_write_str(char *buf, int *off, size_t size, } else if (c >= 0x80 && c <= 0xFFFF) { hex_bytes = flb_utf8_len(str + i); - if ((available - written) < 6) { + if (available - written < 6) { return FLB_FALSE; } + if (i + hex_bytes > str_len) { + break; /* skip truncated UTF-8 */ + } state = FLB_UTF8_ACCEPT; codepoint = 0;","Perhaps `return FLB_FALSE;`? (Oh, we're trying to continue conversion.)"
"@@ -35,7 +35,9 @@ #include <pthread.h> #include <pwd.h> #include <signal.h> +#ifndef __ANDROID__ #include <spawn.h> +#endif #include <stdio.h> #include <unistd.h> #include <sys/resource.h>",The same goes here as well.
"@@ -321,7 +321,7 @@ func (r *LocalRunner) Setup(dp *DebugParams) (err error) { ledger, states, err = makeAppLedger( balances, r.txnGroup, dp.GroupIndex, r.proto, dp.Round, dp.LatestTimestamp, appIdx, - dp.Painless, + dp.Painless, dp.IndexerURL, dp.IndexerToken, ) if err != nil { return",sounds like it is time for appLedgerParams struct..
"@@ -16,6 +16,7 @@ # TODO: Investigate improving so we can avoid the pylint disable. # pylint: disable=line-too-long +from google.cloud.security.common.data_access.csv_writer import GROUPS_FIELDNAMES from google.cloud.security.common.data_access.csv_writer import ORG_IAM_POLICIES_FIELDNAMES from google.cloud.security.common.data_access.csv_writer import PROJECTS_FIELDNAMES from google.cloud.security.common.data_access.csv_writer import PROJECT_IAM_POLICIES_FIELDNAMES",I think Andrew has been suggesting importing the module instead of the class or variable.
"@@ -23,16 +23,14 @@ import java.lang.annotation.Retention; import java.lang.annotation.RetentionPolicy; import java.lang.annotation.Target; -import org.springframework.core.annotation.AliasFor; - @Target({ElementType.PARAMETER}) @Retention(RetentionPolicy.RUNTIME) @Documented public @interface RawJsonRequestBody { - @AliasFor(name) + // aliasFor name String value() default ; - @AliasFor(value) + // aliasFor value String name() default ; boolean required() default true;",Will it introduce some backward compatibility issue?
"@@ -82,6 +82,7 @@ var DatePicker = React.createClass({ <div> <DateInput date={this.props.selected} + dateFormat={this.props.dateFormat || 'YYYY-MM-DD'} focus={this.state.focus} onBlur={this.handleBlur} onFocus={this.handleFocus}",Let's default to `YYYY-MM-DD` by setting it in `getDefaultProps`.
"@@ -4,12 +4,6 @@ class ApplicationController < ActionController::Base protect_from_forgery with: :exception before_action :capture_campaign_params - http_basic_authenticate_with( - name: ENV[HTTP_NAME], - password: ENV[HTTP_PASSWORD], - if: Proc.new { on_staging? }, - ) - def current_user super || Guest.new end","This is in its own commit and is just riding along for the PR, but is otherwise unrelated. We had implemented this in a random commit for the demo, but it was orphaned a bit back, so now I'm removing it for realz."
"@@ -19,6 +19,11 @@ package org.apache.iceberg.mr.hive.serde.objectinspector; +/** + * Interface for converting the Hive primitive objects for to the objects which could be added to an Iceberg Record. + * If the IcebergObjectInspector does not implement this then the default Hive primitive objects will be used without + * conversion. + */ public interface WriteObjectInspector { Object convert(Object value); }",typo: ... for to ...
"@@ -304,10 +304,18 @@ def define_scanner_parser(parent): title='action', dest='action') - action_subparser.add_parser( + run_scanner_parser = action_subparser.add_parser( 'run', help='Run the scanner') + run_scanner_parser.add_argument( + '--scanner', + choices=['external_access_scanner'], + help='Run a specific scanner, ' + 'currently only applicable for ' + 'the external project access scanner' + ) + def define_notifier_parser(parent): Define the notifier service parser.",Wouldn't the fullname be better? `external_project_access_scanner`?
"@@ -0,0 +1,8 @@ +package org.phoenicis.javafx.components.common.actions; + +/** + * An action that influences the currently shown details panel and its content + */ +public interface DetailsPanelAction { + // nothing +}",missing line break at EOF
"@@ -131,7 +131,7 @@ abstract class Type if (!isset($aliased_classes[strtolower($candidate_parts[0])])) { return $candidate; } - } elseif (!$namespace && stripos($value, '\\') === false) { + } elseif (!$namespace && strpos($value, '\\') === false) { return $value; } ",strpos is enough when the pattern doesn't include characters that have case
"@@ -31,6 +31,14 @@ import org.apache.iceberg.io.OutputFile; */ public interface EncryptedOutputFile { + /** + * Use flat filestream encryption (default) or pushdown to native format encryption + */ + default boolean useNativeEncryption() { + return false; + } + + /** * An OutputFile instance that encrypts the bytes that are written to its output streams. */",Nit: an extra empty line
"@@ -88,7 +88,7 @@ class Uploader { this._paused = true if (this.tus) { const shouldTerminate = !!this.tus.url - this.tus.abort(shouldTerminate) + this.tus.abort(shouldTerminate).catch(() => {}) } this.cleanUp() })","The `abort` function now returns a Promise. And if `shouldTerminate` is true, this Promise can be rejected. So, to avoid a unhandled promise rejection, I added a dummy handler. Since a possible error also wasn't handled before, I think it's OK to not handle it in this case as well."
"@@ -31,6 +31,12 @@ public class RandomUtil { private RandomUtil() { } + private static final Random NEGATIVE_VALUES = new Random(); + + private static boolean negate() { + return NEGATIVE_VALUES.nextInt(2) == 1; + } + @SuppressWarnings(RandomModInteger) public static Object generatePrimitive(Type.PrimitiveType primitive, Random random) {","All tests need to use the `Random` that is passed in so that the values that are generated are deterministic and repeatable. That's what allows us to generated an iterator instead of a list in some cases, and makes it so if we do have a problem, we can repeat the test and debug."
"@@ -255,6 +255,12 @@ public class MethodCallExprContext extends AbstractJavaParserContext<MethodCallE mappings.put(target.asTypeParameter(), source); return; } + if (source.isArray() && target.isArray()) { + ResolvedType sourceComponentType = source.asArrayType().getComponentType(); + ResolvedType targetComponentType = target.asArrayType().getComponentType(); + inferTypes(sourceComponentType, targetComponentType, mappings); + return; + } if (source.isArray() && target.isWildcard()){ if(target.asWildcard().isBounded()){ inferTypes(source, target.asWildcard().getBoundedType(), mappings);","The component type for `int[][][]` is `int[][]`, and its element type is `int`. Does this code work for multidimensional arrays too?"
"@@ -306,7 +306,7 @@ def extract_record_set(records, filters, sorting, paginated = {} for rule in pagination_rules or []: values = list(apply_filters(filtered, rule)) - paginated.update(dict(((x[id_field], x) for x in values))) + paginated.update(dict(((x.get(id_field), x) for x in values))) if paginated: paginated = paginated.values()","could be `x.get(id_field, )` too ;)"
"@@ -18,6 +18,7 @@ func Test_convertSidecar(t *testing.T) { mockImage := aws.String(mockImage) mockMap := map[string]string{foo: bar} mockCredsParam := aws.String(mockCredsParam) + mockEssential := aws.Bool(false) testCases := map[string]struct { inPort string ",nit: would you mind updating the testCases to take an `inEssential` field instead and in the `wanted` we can ensure that exact value is applied. Right now we don't have a scenario that tests if the conversion happens on `essential: true`
"@@ -96,6 +96,12 @@ func run(o *Options) error { features.DefaultFeatureGate.Enabled(features.AntreaPolicy)) _, serviceCIDRNet, _ := net.ParseCIDR(o.config.ServiceCIDR) + var serviceCIDRNetv6 *net.IPNet + // Todo: use FeatureGate to check if IPv6 is enabled and then read configuration item ServiceCIDRv6. + if o.config.ServiceCIDRv6 !=  { + _, serviceCIDRNetv6, _ = net.ParseCIDR(o.config.ServiceCIDRv6) + } + _, encapMode := config.GetTrafficEncapModeFromStr(o.config.TrafficEncapMode) networkConfig := &config.NetworkConfig{ TunnelType: ovsconfig.TunnelType(o.config.TunnelType),",This sentence seems incomplete.
"@@ -60,6 +60,10 @@ type Service interface { // HPA management functions. DescribeHPA(ctx context.Context, clientset, cluster, namespace, name string) (*k8sapiv1.HPA, error) ResizeHPA(ctx context.Context, clientset, cluster, namespace, name string, sizing *k8sapiv1.ResizeHPARequest_Sizing) error + + // Deployment management functions. + DescribeDeployment(ctx context.Context, clientset, cluster, namespace, name string) (*k8sapiv1.Deployment, error) + UpdateDeployment(ctx context.Context, clientset, cluster, namespace, name string, labels map[string]string, annotations map[string]string) error } type svc struct {","I dont really like how I'm passing through `labels map[string]string, annotations map[string]string` here, will probably refactor this."
"@@ -55,6 +55,16 @@ func nodeStatus(node *node.AlgorandFullNode) (res v1.NodeStatus, err error) { }, nil } +func txEncode(tx transactions.Transaction, ad transactions.ApplyData) (res v1.Transaction, err error) { + if tx.Type == protocol.PaymentTx { + return paymentTxEncode(tx, ad), nil + } + if tx.Type == protocol.KeyRegistrationTx { + return keyregTxEncode(tx, ad), nil + } + return v1.Transaction{}, errors.New(errUnknownTransactionType) +} + func paymentTxEncode(tx transactions.Transaction, ad transactions.ApplyData) v1.Transaction { payment := v1.PaymentTransactionType{ To: tx.Receiver.String(),",Use a case statement here to switch between the different transaction types.
"@@ -192,7 +192,17 @@ class MultiBackend extends AbstractBase implements \Zend\Log\LoggerAwareInterfac { $items = []; foreach ($ids as $id) { - $items[] = $this->getStatus($id); + try { + $items[] = $this->getStatus($id); + } catch (ILSException $e) { + $items[] = [ + [ + 'id' => $id, + 'error' => 'An error has occurred', + 'availability_message' => 'status_unknown_message' + ] + ]; + } } return $items; }","If you find a way to display the full unknown message above, it may be necessary to devise a different mechanism for filling it in in this situation. Maybe any entry with 'error' set automatically gets 'availability_message' set to unknown."
"@@ -0,0 +1,13 @@ +namespace Datadog.Trace.Agent +{ + internal static class TraceRequestDecorator + { + public static void AddHeaders(IApiRequest request) + { + request.AddHeader(AgentHttpHeaderNames.Language, .NET); + request.AddHeader(AgentHttpHeaderNames.TracerVersion, TracerConstants.AssemblyVersion); + // don't add automatic instrumentation to requests from datadog code + request.AddHeader(HttpHeaderNames.TracingEnabled, false); + } + } +}","This isn't a big deal, but without a full Decorator pattern, this feels a little weird to me. Maybe this could be `IApiRequestExtensions`?"
"@@ -46,7 +46,7 @@ namespace Microsoft.AspNetCore.Server.Kestrel.Core.Internal // REVIEW: This task should be tracked by the server for graceful shutdown // Today it's handled specifically for http but not for aribitrary middleware - _ = Execute(new DefaultConnectionContext(connection)); + _ = Execute(connection); } private async Task Execute(ConnectionContext connectionContext)",Where is DefaultConnectionContext even used now?
"@@ -130,7 +130,7 @@ func verifyBlockSignature(ctx context.Context, view FaultStateView, blk block.Bl if err != nil { panic(errors.Wrapf(err, failed to inspect miner addresses)) } - err = state.NewSignatureValidator(view).ValidateSignature(ctx, blk.SignatureData(), worker, blk.BlockSig) + err = state.NewSignatureValidator(view).ValidateSignature(ctx, blk.SignatureData(), worker, *blk.BlockSig) if err != nil { return errors.Wrapf(err, no consensus fault: block %s signature invalid, blk.Cid()) }",`*blk.BlockSig` will panic if nil. Is this guaranteed not to be?
"@@ -1809,6 +1809,12 @@ def disable_user(): username = data.get('username') _validate_username(username) + if g.auth.user == username: + raise ApiException( + 403, + Can't disable your own account. + ) + resp = requests.patch(%s%s/ % (user_modify_api, username) , headers=auth_headers, data=json.dumps({ 'is_active' : False","Use `requests.codes.forbidden`, for consistency with everything else."
"@@ -15,6 +15,8 @@ module OhlohUi config.active_record.schema_format = :sql config.active_record.raise_in_transactional_callbacks = true + config.google_maps_api_key = 'AIzaSyBGY091UPV-hajnLzUVSyp9pUGlWsIibDM' + config.autoload_paths << #{Rails.root}/lib end end",Does this key need to be hidden in a dot-env file?
"@@ -40,8 +40,8 @@ func ValidateCertificateSpec(crt *internalcmapi.CertificateSpec, fldPath *field. el = append(el, validateIssuerRef(crt.IssuerRef, fldPath)...) - if len(crt.CommonName) == 0 && len(crt.DNSNames) == 0 && len(crt.URISANs) == 0 && len(crt.EmailSANs) == 0 { - el = append(el, field.Invalid(fldPath, , at least one of commonName, dnsNames, uris or emailAddresses must be set)) + if len(crt.CommonName) == 0 && len(crt.DNSNames) == 0 && len(crt.URISANs) == 0 && len(crt.EmailSANs) == 0 && len(crt.IPAddresses) == 0 { + el = append(el, field.Invalid(fldPath, , at least one of commonName, dnsNames, uris ipAddresses, or emailAddresses must be set)) } // if a common name has been specified, ensure it is no longer than 64 chars","I was thinking about this earlier. Is it valid to have a CA certificate without any of these attributes? I've seen `commonName` used in CA certs, but that's deprecated."
"@@ -554,7 +554,13 @@ void Items::parseItemNode(const pugi::xml_node& itemNode, uint16_t id) it.name = itemNode.attribute(name).as_string(); - nameToItems.insert({ asLowerCaseString(it.name), id }); + if (!it.name.empty()) { + std::string lowerCaseName = asLowerCaseString(it.name); + auto result = nameToItems.find(lowerCaseName); + if (result == nameToItems.end()) { + nameToItems.insert({ std::move(lowerCaseName), id }); + } + } pugi::xml_attribute articleAttribute = itemNode.attribute(article); if (articleAttribute) {","I think the temporary `result` is not necessary `if (nameToItems.find(lowerCaseName) == nameToItems.end()) {` It is the only thing that I would change, the rest seems correct to me"
"@@ -1,3 +1,5 @@ +require 'socket' + module RSpec module Core class Runner","Given that the majority of uses won't need this, it'd be good to only require it when we actually need it."
"@@ -383,5 +383,5 @@ func newMetrics() metrics { } func (db *DB) Metrics() []prometheus.Collector { - return m.PrometheusCollectorsFromFields(db.metrics) + return append(m.PrometheusCollectorsFromFields(db.metrics), db.sharky.Metrics()...) }",i think `shed` has metrics too... maybe now would be the time to expose them
"@@ -37,10 +37,13 @@ module Bolt super require 'winrm' require 'winrm-fs' + + @transport_logger = Logging.logger[::WinRM] + @transport_logger.level = :warn end def with_connection(target) - conn = Connection.new(target) + conn = Connection.new(target, @transport_logger) conn.connect yield conn ensure",Do we want to set warn here since we're not trying to silence net::ssh?
"@@ -1139,6 +1139,18 @@ hashtable_fragment_reset(dcontext_t *dcontext, fragment_table_t *table) if (!dynamo_exited && !dynamo_resetting) ASSERT_TABLE_SYNCHRONIZED(table, WRITE); }); +# if !defined(DEBUG) && defined(CLIENT_INTERFACE) + if (!dr_fragment_deleted_hook_exists()) + return; + /* i#4226: Avoid the slow deletion code and just invoke the event. */ + for (i = 0; i < table->capacity; i++) { + f = table->table[i]; + if (!REAL_FRAGMENT(f)) + continue; + instrument_fragment_deleted(dcontext, f->tag, f->flags); + } + return; +# endif /* Go in reverse order (for efficiency) since using * hashtable_fragment_remove_helper to keep all reachable, which is required * for dynamo_resetting where we unlink fragments here and need to be able to","Nit: Most likely yes, but I am wondering whether or not we need to keep the remaining debug code given that it is not reachable anymore on release?"
"@@ -30,7 +30,7 @@ var ( 1.8.0: true, 1.9.0: true, 1.10.0: true, 1.11.0: true, 1.12.0: true, } - validDesiredVersion = version.GetVersion() + validDesiredVersion = strings.Split(version.GetVersion(), -)[0] ) // IsCurrentVersionValid verifies if the current version is valid or not",Q: When we perform an upgrade of the OpenEBS version will still deleting old version runtask and CASTemplates?
"@@ -111,6 +111,12 @@ public class FlinkCatalog extends AbstractCatalog { @Override public void open() throws CatalogException { + // Create the default database if it does not exist. + try { + createDatabase(getDefaultDatabase(), ImmutableMap.of(), true); + } catch (DatabaseAlreadyExistException e) { + throw new CatalogException(e); + } } @Override",Does this do what you want? It seems like if the intent is `IF NOT EXISTS` then you should ignore the `DatabaseAlreadyExistException`.
"@@ -270,6 +270,9 @@ func (raw *cgroupData) path(subsystem string) (string, error) { } cgPath := filepath.Join(raw.parent, raw.name) + if raw.config.CgroupsPath !=  { + cgPath = raw.config.CgroupsPath + } // If the cgroup name/path is absolute do not look relative to the cgroup of the init process. if filepath.IsAbs(cgPath) { // Sometimes subsystems can be mounted togethger as 'cpu,cpuacct'.","I am not sure we should just completely ignore parent and name if cgroupsPath is provided. Docker uses parent and name, and do we want to break compatibility? Also, cgroupsPath must always be relative to the cgroups mount on the system. I'm not sure if the same restriction applies to parent and name."
"@@ -0,0 +1,13 @@ +package org.phoenicis.engines; + +/** + * interface which must be implemented by all Verbs in Javascript + */ +public interface Verb { + /** + * installs the Verb in the given container + * @param container directory name (not the complete path!) of the container where the Verb shall be installed + * @param version version of the Verb + */ + void install(String container, String version); +}","What about a unique name? How does Phoenicis remember, whether a verb has been installed previously or not?"
"@@ -14,7 +14,7 @@ return [ 'reset' => 'Паролата е нулирана!', 'sent' => 'Изпратено е напомняне за вашата парола!', - 'throttled' => 'Please wait before retrying.', + 'throttled' => 'Моля изчакайте преди да опитате отново.', 'token' => 'Този токен за нулиране на парола е невалиден.', 'user' => 'Потребител с такъв e-mail адрес не може да бъде открит.', ];","It should be:  e, e  e "
"@@ -139,9 +139,11 @@ class GetItemStatuses extends AbstractBase implements TranslatorAwareInterface { $transList = []; foreach ($list as $current) { - $transList[] = $this->translate( - $transPrefix . $current, [], $current - ); + $default = $current; + if (!($current instanceof \VuFind\I18n\TranslatableString)) { + $current = $transPrefix . $current; + } + $transList[] = $this->translate($current, [], $default); } return $transList; }",Can we simplify the code changes in this file by using translateWithPrefix now that we have defined that method? Should we move the TranslatableString awareness into that function as well?
"@@ -46,13 +46,13 @@ export function createMethod(type, name, mutates) { throw new TypeError(name + ' method was called on an object of the wrong type!'); } - let result = rpc.callMethod(realmId, id, name, Array.from(arguments)); - - if (mutates) { - fireMutationListeners(realmId); + try { + return rpc.callMethod(realmId, id, name, Array.from(arguments)); + } finally { + if (mutates) { + fireMutationListeners(realmId); + } } - - return result; }; } ",what gets returns if this throws?
"@@ -12,8 +12,7 @@ import ( // To attempts rewrite. It attempts to rewrite to first valid path // or the last path if none of the paths are valid. -// Returns true if rewrite is successful and false otherwise. -func To(fs http.FileSystem, r *http.Request, to string, replacer httpserver.Replacer) Result { +func To(fs http.FileSystem, r *http.Request, to string, replacer httpserver.Replacer) (result Result) { tos := strings.Fields(to) // try each rewrite paths",I typically try to avoid named returns; I don't really know what we gain from this one here.
"@@ -170,7 +170,11 @@ class UIATextRangeAttributeValueFetcher(object): self.textRange=textRange def getValue(self,ID,ignoreMixedValues=False): - val=self.textRange.getAttributeValue(ID) + try: + val=self.textRange.getAttributeValue(ID) + except COMError: + # #7124: some text attributes are not supported in older Operating Systems + return UIAHandler.handler.reservedNotSupportedValue if not ignoreMixedValues and val==UIAHandler.handler.ReservedMixedAttributeValue: raise UIAMixedAttributeError return val","Is this something that would be helpful to log? Would that cause a lot of noise in the log? I'm considering a case where we are investigating why something does not work in a particular OS for instance. What happens when `reservedNotSupportedValue` is returned, is this handled gracefully in all cases?"
"@@ -3423,10 +3423,11 @@ bool CoreChecks::ValidateLayoutVsAttachmentDescription(const debug_report_data * const VkImageLayout first_layout, const uint32_t attachment, const VkAttachmentDescription2KHR &attachment_description) const { bool skip = false; - const char *vuid; const bool use_rp2 = (rp_version == RENDER_PASS_VERSION_2); // Verify that initial loadOp on READ_ONLY attachments is not CLEAR + // for both loadOp and stencilLoaOp rp2 has it in 1 VU while rp1 has it in 2 VU with half behind Maintenance2 extension + // Each is VUID is below in following order: rp2 -> rp1 with Maintenance2 -> rp1 with no extenstion if (attachment_description.loadOp == VK_ATTACHMENT_LOAD_OP_CLEAR) { if (use_rp2 && ((first_layout == VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL) || (first_layout == VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL) ||",Should this be `VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL`?
"@@ -133,7 +133,7 @@ void ZoneDatabase::AddLootDropToNPC(NPC *npc, uint32 lootdrop_id, ItemList *item int charges = loot_drop->Entries[i].multiplier; for (int j = 0; j < charges; ++j) { if (zone->random.Real(0.0, 100.0) <= loot_drop->Entries[i].chance && - npc->MeetsLootDropLevelRequirements(loot_drop->Entries[i])) { + npc->MeetsLootDropLevelRequirements(loot_drop->Entries[i], true)) { const EQ::ItemData *database_item = GetItem(loot_drop->Entries[i].item_id); npc->AddLootDrop( database_item,",We need to drop the verbose flag on this function. We can safely log detail logging without performance penalties because they are all macro expansions that do not allocate strings or run functions on the stack if the category and logging level is not enabled at all
"@@ -116,8 +116,13 @@ class CentralPlannerScheduler(Scheduler): def load(self): if os.path.exists(self._state_path): logger.info(Attempting to load state from %s, self._state_path) - with open(self._state_path) as fobj: - state = pickle.load(fobj) + try: + with open(self._state_path) as fobj: + state = pickle.load(fobj) + except: + logger.exception(Error when loading state. Starting from clean slate.) + return + self._tasks, self._active_workers = state # Convert from old format","I'm not sure what logging policy Spotify have, but I think we should include the stack trace. What if you find this message happening only once in the middle of a huge log file?"
"@@ -1443,9 +1443,9 @@ define(['browser', 'require', 'events', 'apphost', 'loading', 'dom', 'playbackMa var list = []; var video = document.createElement('video'); - //if (video.webkitSupportsPresentationMode && video.webkitSupportsPresentationMode('picture-in-picture') && typeof video.webkitSetPresentationMode === function) { - // list.push('PictureInPicture'); - //} + if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === function) { + list.push('PictureInPicture'); + } if (document.pictureInPictureEnabled) { list.push('PictureInPicture'); }",Can you merge two `if`s in one?
"@@ -257,13 +257,10 @@ func (c *Cluster) newClusterMember(node *corev1.Node) (string, error) { return , fmt.Errorf(obtain IP addresses from K8s Node failed: %v, err) } nodeAddr := nodeAddrs.IPv4 - fmtStr := %s:%d if nodeAddr == nil { nodeAddr = nodeAddrs.IPv6 - fmtStr = [%s]:%d } - member := fmt.Sprintf(fmtStr, nodeAddr, c.bindPort) - return member, nil + return nodeAddr.String(), nil } func (c *Cluster) allClusterMembers() (clusterNodes []string, err error) {",Doesn't memberlist expect IPv6 addrss wrapped by []?
"@@ -585,12 +585,12 @@ func runWeb(ctx *cli.Context) error { m.Get(/src/*, repo.Home) m.Get(/raw/*, repo.SingleDownload) m.Get(/commits/*, repo.RefCommits) - m.Get(/commit/:sha([a-z0-9]{7,40})$, repo.Diff) + m.Get(/commit/:sha([a-f0-9]{7,40})$, repo.Diff) m.Get(/forks, repo.Forks) }, context.RepoRef()) - m.Get(/commit/:sha([a-z0-9]{7,40})\\.:ext(patch|diff), repo.RawDiff) + m.Get(/commit/:sha([a-f0-9]{7,40})\\.:ext(patch|diff), repo.RawDiff) - m.Get(/compare/:before([a-z0-9]{7,40})\\.\\.\\.:after([a-z0-9]{7,40}), repo.CompareDiff) + m.Get(/compare/:before([a-z0-9]{40})\\.\\.\\.:after([a-z0-9]{40}), repo.CompareDiff) }, ignSignIn, context.RepoAssignment(), repo.MustBeNotBare) m.Group(/:username/:reponame, func() { m.Get(/stars, repo.Stars)",And now I can't compare `master...develop` anymore :unamused:
"@@ -134,6 +134,7 @@ class DagitWebserver(GraphQLServer): return Route( file_path, lambda _: FileResponse(path=self.relative_path(fwebapp/build{file_path})), + name=root_static, ) return [_static_file(f) for f in ROOT_ADDRESS_STATIC_RESOURCES]","Feels weird for multiple routes to have the same name - but I guess we're not using `url_for` for this, so it's fine as an identifier for now"
"@@ -97,14 +97,11 @@ lbann_callback* construct_callback(lbann_comm* comm, ////////////////////////////////////////////////////////////// if (proto_cb.has_ltfb()) { - auto&& m = parse_list<>(proto_cb.ltfb().eval_metrics()); - auto&& w = parse_list<>(proto_cb.ltfb().weights_tosend()); - std::unordered_set<std::string> metric_names(m.begin(), m.end()); - std::unordered_set<std::string> weight_names(w.begin(), w.end()); - return new lbann_callback_ltfb(proto_cb.ltfb().round_size(), - metric_names, - proto_cb.ltfb().increasing_metric_mode(), - weight_names, + const auto& params = proto_cb.ltfb(); + return new lbann_callback_ltfb(params.batch_interval(), + params.metric(), + parse_set<std::string>(params.weights()), + params.low_score_wins(), summarizer); } /// @todo","We are not using multiple metrics now but how would this support space-delimited metric (e.g., categorical accuracy) and multiple metrics with the same name as metric specified one of the metrics for training/inference ?"
"@@ -411,8 +411,8 @@ class UserController < ApplicationController if @new_friend if request.post? friend = Friend.new - friend.user_id = current_user.id - friend.friend_user_id = @new_friend.id + friend.befriender = current_user + friend.befriendee = @new_friend if current_user.is_friends_with?(@new_friend) flash[:warning] = t user.make_friend.already_a_friend, :name => @new_friend.display_name elsif friend.save",Imo here the old names were easier to understand.
"@@ -15,7 +15,7 @@ func newNodeChain(api *nodeAPI) *nodeChain { } func (api *nodeChain) Head() ([]*cid.Cid, error) { - ts := api.api.node.ChainMgr.GetHeaviestTipSet() + ts := api.api.node.ChainReader.Head() if len(ts) == 0 { return nil, ErrHeaviestTipSetNotFound }","Good lord, law of demeter out the window. No action required but wow, four levels deep, that's a rarity!"
"@@ -7,6 +7,9 @@ import {inject as service} from '@ember/service'; export default RESTAdapter.extend(DataAdapterMixin, AjaxServiceSupport, { host: window.location.origin, namespace: ghostPaths().apiRoot.slice(1), + xhrFields: { + withCredentials: true + }, session: service(), ",I'm pretty sure we need this
"@@ -85,7 +85,7 @@ namespace Microsoft.AspNet.Server.Kestrel.Filter private Task<int> ReadAsync(ArraySegment<byte> buffer) { - return _input.ReadAsync(buffer); + return _input.ReadAsync(buffer.Array, buffer.Offset, buffer.Count); } } }","Worth just overloading this on `SocketInput`? Notice a bunch of other methods here create an array segment to call this method. At least least, you could clean all of those up to avoid creating the `ArraySegment`"
"@@ -28,6 +28,8 @@ module Beaker v_file <<  v.vm.hostname = '#{host.name}'\n v_file <<  v.vm.box = '#{host['box']}'\n v_file <<  v.vm.box_url = '#{host['box_url']}'\n unless host['box_url'].nil? + v_file <<  v.vm.box_version = '#{host['box_version']}'\n unless host['box_version'].nil? + v_file <<  v.vm.box_check_update = '#{host['box_check_update'] ||= 'true'}'\n v_file <<  v.vm.base_mac = '#{randmac}'\n v_file <<  v.vm.network :private_network, ip: \#{host['ip'].to_s}\, :netmask => \#{host['netmask'] ||= 255.255.0.0}\\n ","To be consistent with the other options (similar to `v.vm.box_version` above), please use `unless` for this situation."
"@@ -0,0 +1,10 @@ +package cloudflow.daos; + +import cloudflow.models.FlowResponse; +import java.util.List; +import java.util.Optional; + +public interface FlowDao { + Optional<FlowResponse> getFlow(String flowId); + List<FlowResponse> getAllFlows(String projectId, String projectVersion); +}",If other DAOs are returning a null in similar situations then I would recommend following the same model and return a null here when the flow is not found. For other interfaces we are adding in CF we decided not to return an `Optional` and throw an exception instead.
"@@ -413,7 +413,12 @@ func (s *Server) serveHTTP(w http.ResponseWriter, r *http.Request) (int, error) // the URL path, so a request to example.com/foo/blog on the site // defined as example.com/foo appears as /blog instead of /foo/blog. if pathPrefix != / { - r.URL.Path = strings.TrimPrefix(r.URL.Path, pathPrefix) + // We need to use URL.EscapedPath() when trimming the pathPrefix as + // URL.Path is ambiguous about / or %2f - see docs. See #1927 + r.URL, err = r.URL.Parse(strings.TrimPrefix(r.URL.EscapedPath(), pathPrefix)) + if err != nil { + log.Printf([ERROR] unable to parse url: %s, %v, r.URL.Path, err) + } if !strings.HasPrefix(r.URL.Path, /) { r.URL.Path = / + r.URL.Path }",I have to reparse here as when I tried to simply assign to r.URL.Path I got unexpected results
"@@ -104,7 +104,7 @@ module Bolt def with_puppet_settings Dir.mktmpdir('bolt') do |dir| cli = [] - Puppet::Settings::REQUIRED_APP_SETTINGS.each do |setting| + Puppet::Settings::REQUIRED_APP_SETTINGS.reject { |k| k == :confdir }.each do |setting| cli << --#{setting} << dir end yield cli",This is required so we find `puppetdb.conf` and `ssldir`. It may have some interesting side-effects I haven't thought of yet.
"@@ -49,6 +49,9 @@ module Beaker # Wait for each node to reach status :running wait_for_status(:running) + # Add metadata tags to each instance + add_tags() + # Grab the ip addresses and dns from EC2 for each instance to use for ssh populate_dns() ",+1 on this abstraction.
"@@ -2,7 +2,7 @@ tool_name = Rails.configuration.branding[:application][:name] link = accept_invitation_url(@resource, :invitation_token => @token) helpdesk_email = Rails.configuration.branding[:organisation][:helpdesk_email] - contact_us_url = Rails.configuration.branding[:organisation][:contact_us_url] || contact_us_url + contact_us = (Rails.configuration.branding[:organisation][:contact_us_url] || contact_us_url) email_subject = _('Query or feedback related to %{tool_name}') %{ :tool_name => tool_name } %> <% FastGettext.with_locale FastGettext.default_locale do %>","thanks for changing it, the rename is for sure safer!"
"@@ -0,0 +1,15 @@ +/** + * External dependencies + */ + +/** + * Internal dependencies + */ +import SiteKitRegistry from 'googlesitekit-data'; +import siteStore, { STORE_NAME } from 'assets/js/googlesitekit/site'; + +const createStore = ( registry = SiteKitRegistry ) => { + registry.registerStore( STORE_NAME, siteStore ); +}; + +export default createStore;","Why is this file here? Doesn't seem to be used anywhere and wasn't discussed before I believe. There should just be a `googlesitekit-site.js` file that calls `SiteKitRegistry.registerStore( STORE_NAME, siteStore )`. No need for a separate `store/index.js` module, and particularly, it shouldn't use that name as there will be multiple stores."
"@@ -102,7 +102,7 @@ export function _injectProductInfo(key, element) { if (!warningMessage) { if (releaseTime > keyGenTime + 1) { warningMessage = toSingleLine` - Your license key of Handsontable Pro has expired.‌‌‌‌ + Your license key of Handsontable Pro has expired.‌‌‌‌ Renew your maintenance plan at https://handsontable.com or downgrade to the previous version of the software. `; }",Here you ate space character that is why after built I've got ...has expired.Renew your mainte... in the console.
"@@ -495,14 +495,7 @@ namespace AutoRest.Ruby.Model { IndentedStringBuilder builder = new IndentedStringBuilder(); builder.AppendLine(response = {0}_async({1}).value!, Name, MethodParameterInvocation); - if (ReturnType.Body != null) - { - builder.AppendLine(response.body unless response.nil?); - } - else - { - builder.AppendLine(nil); - } + builder.AppendLine(response.body unless response.nil?); return builder.ToString(); } ","@sarangan12 in the previous code, if body wasn't null, then we would return response.body (unless response was null), otherwise we'd return nil, since body was null. With the updated code I see that we're updating the resulting source code, does it change the resulting value? if response.body is null, what do we return? and if it's not, it looks like we're returning the same thing as before. What am I missing? Is there an example that would help see this in action?"
"@@ -23,8 +23,9 @@ import ( ) const ( - maxBins = 16 - nnLowWatermark = 2 // the number of peers in consecutive deepest bins that constitute as nearest neighbours + maxBins = 16 + nnLowWatermark = 2 // the number of peers in consecutive deepest bins that constitute as nearest neighbours + maxConnAttempts = 3 // when there is maxConnAttempts failed connect calls for a given peer it is considere non-connectable ) var (","questions about this: 1. if i start my node and i am disconnected from the internet, does this mean that within 3 attempts to connect to peers will be address book get entirely truncated? is this the desirable behavior? 2. how long will it take to reach this limit in the above case? 3. if the connection breaker is hit how long does it take to reach the third attempt?"
"@@ -57,7 +57,7 @@ import ( github.com/filecoin-project/go-filecoin/porcelain github.com/filecoin-project/go-filecoin/proofs github.com/filecoin-project/go-filecoin/proofs/sectorbuilder - bapi github.com/filecoin-project/go-filecoin/protocol/block + github.com/filecoin-project/go-filecoin/protocol/block github.com/filecoin-project/go-filecoin/protocol/hello github.com/filecoin-project/go-filecoin/protocol/retrieval github.com/filecoin-project/go-filecoin/protocol/storage",Please keep this as `bapi` here. Block is so overloaded and in the context of the node package readers will assume it means many other things.
"@@ -124,6 +124,7 @@ public class Graphite implements GraphiteSender { } if (address.getAddress() == null) { + address = null; throw new UnknownHostException(address.getHostName()); } ",This will cause a `NullPointerException` in the following line.  
"@@ -116,7 +116,14 @@ The `puppetfile` section of the configuration file configures how to retrieve mo ## Transport configuration options -Transport configuration options can be set in both the configuration file and inventory file. +Transport configuration options can be set in the inventory file. Options at +the inventory's top level will apply to all targets. + +### The transport option + +<% @transport_option[:options].each do |option, desc| -%> +| `<%= option %>` | <%= desc %> | <%= @transport_option[:defaults][option].to_s %> | +<% end %> <% @transports[:options].each do |transport, options| %> ### <%= transport %>","Definitely work for another ticket, but I think we need to look at creating separate ref pages for each config/inventory file. This is quickly getting confusing.  "
"@@ -24,9 +24,9 @@ using OpenTelemetry.Internal; namespace OpenTelemetry.Context.Propagation { /// <summary> - /// B3 text propagator. See https://github.com/openzipkin/b3-propagation for the specification. + /// A text map propagator for B3. See https://github.com/openzipkin/b3-propagation. /// </summary> - public sealed class B3Propagator : IPropagator + public sealed class B3Propagator : ITextMapPropagator { internal const string XB3TraceId = X-B3-TraceId; internal const string XB3SpanId = X-B3-SpanId;","Do we want an interface `ITextMapPropagator` or an abstract class `TextMapPropagator`? Interface gives benefit of multi-inheritance, which I don't see a useful scenario here (an extreme case would be having `TraceContextPropagator` implementing both the text and binary interface). On the other side interface forbids us from adding optional methods in the future (will have to introduce ITextMapPropagator2, ITextMapPropagator3, ...)."
"@@ -496,15 +496,15 @@ public class HttpCommandExecutor implements CommandExecutor, NeedsLocalLogs { return response; } - private static CommandInfo get(String url) { + protected static CommandInfo get(String url) { return new CommandInfo(url, HttpVerb.GET); } - private static CommandInfo post(String url) { + protected static CommandInfo post(String url) { return new CommandInfo(url, HttpVerb.POST); } - private static CommandInfo delete(String url) { + protected static CommandInfo delete(String url) { return new CommandInfo(url, HttpVerb.DELETE); } ","I suggest we revert all changes in this file. They are not necessary. Other classes that already create instances of CommandInfo outside of this class simply use CommandInfo constructor(s), we could keep doing the same here."
"@@ -635,7 +635,7 @@ public class ShardSplitTest extends BasicDistributedZkTest { log.info(Starting testSplitShardWithRule); String collectionName = shardSplitWithRule_ + splitMethod.toLower(); CollectionAdminRequest.Create createRequest = CollectionAdminRequest.createCollection(collectionName, conf1, 1, 2) - .setRule(shard:*,replica:<2,node:*); + ; CollectionAdminResponse response = createRequest.process(cloudClient); assertEquals(0, response.getStatus());",Doesn't seem to be an Autoscaling related rule.
"@@ -107,7 +107,7 @@ public class TestFlinkInputFormatReaderDeletes extends DeleteReadTests { RowType rowType = FlinkSchemaUtil.convert(projected); CatalogLoader hiveCatalogLoader = CatalogLoader.hive(catalog.name(), hiveConf, - hiveConf.get(HiveConf.ConfVars.METASTOREURIS.varname), + hiveConf.get(HiveConf.ConfVars.METASTOREURIS.varname), null, hiveConf.getInt(iceberg.hive.client-pool-size, 5) ); FlinkInputFormat inputFormat = FlinkSource.forRowData()",NIT: use `hiveConf.get(HiveConf.ConfVars.METASTOREWAREHOUSE.varname)` instead of null.
"@@ -0,0 +1,9 @@ +package azkaban.imagemgmt.daos; + +import azkaban.imagemgmt.models.ImageType; +import java.util.Optional; + +public interface ImageTypeDao { + public int createImageType(ImageType imageType); + public Optional<ImageType> getImageTypeByType(String type); +}",Can you please rename method to getImageTypeByName?
"@@ -311,4 +311,13 @@ public class Constants { public static final String START_TIME = startTime; public static final String TRIGGER_INSTANCE_ID = triggerInstanceId; } + + + public static class DefaultValue { + + public static final int PROJECT_DIR_CLEANUP_START_THRESHOLD = 90; + public static final int PROJECT_DIR_CLEANUP_STOP_THRESHOLD = 60; + //128G + public static final long PROJECT_DIR_MAX_SIZE = 12800; + } }",Is it in MB? Should it be 128_000 then?
"@@ -70,8 +70,15 @@ type AWSMachineSpec struct { // +optional AdditionalSecurityGroups []AWSResourceReference `json:additionalSecurityGroups,omitempty` + // FailureDomain is the failure domain unique identifier this Machine should be attached to, as defined in Cluster API. + // For this infrastructure provider, the ID is equivalent to an AWS Availability Zone. + // If multiple subnets are matched for the availability zone, the first one return is picked. + FailureDomain *string `json:failureDomainID,omitempty` + // AvailabilityZone is references the AWS availability zone to use for this instance. // If multiple subnets are matched for the availability zone, the first one return is picked. + // + // DEPRECATED: Switch to FailureDomainID. // +optional AvailabilityZone *string `json:availabilityZone,omitempty` ","If we are going generic with the naming here, should we add it to the Machine resource instead?"
"@@ -84,7 +84,7 @@ type Snapshot struct { // provider-specific, and using them will make that part of your application // non-portable, so use with care. // -// See the documentation for the subpackage used to instantiate Variable to see +// See the documentation for the subpackage used to instantiate Snapshot to see // which type(s) are supported. // // Usage:","I think `Variable` is correct here. They got `Snapshot` from the concrete type, not a sub-package. Maybe you used instead of used?"
"@@ -290,7 +290,7 @@ namespace NLog.Internal.FileAppenders #if !SILVERLIGHT && !MONO && !__IOS__ && !__ANDROID__ try { - if (!this.CreateFileParameters.ForceManaged && PlatformDetector.IsDesktopWin32) + if (!this.CreateFileParameters.ForceManaged && PlatformDetector.IsDesktopWin32 && !PlatformDetector.IsMono) { return this.WindowsCreateFile(this.FileName, allowFileSharedWriting); }",should !MONO be removed?
"@@ -62,7 +62,7 @@ func (t *tokenProvider) fetchTokenHandler(r *request.Request) { // Check if request timed out while waiting for response if e, ok := requestFailureError.OrigErr().(awserr.Error); ok { - if e.Code() == RequestError { + if e.Code() == request.ErrCodeRequestError { atomic.StoreUint32(&t.disabled, 1) } }","Regarding the usage of ErrorCodeRequestError for timeout. This would be a breaking change for V1 SDK. But for V2 SDK, I think a timeout should be wrapped with RequestTimeout error instead of Request Error."
"@@ -0,0 +1,13 @@ +class OrgLinksValidator < ActiveModel::Validator + include JSONLinkValidator + def validate(record) + links = record.links + if links.is_a?(Hash) + if !links.has_key?('org') + record.errors[:links] << _('A key org is expected for links hash') %{ :key => k } + end + else + record.errors[:links] << _('A hash is expected for links') + end + end +end","the hash key is never use, probably a copy/paste error. Please, mark it someone to be updated"
"@@ -887,7 +887,7 @@ public class CloudHttp2SolrClientTest extends SolrCloudTestCase { .process(cluster.getSolrClient()).getStatus()); cluster.waitForActiveCollection(COL, 1, 1); - // determine the coreNodeName of only current replica + // determine the replicaName of only current replica Collection<Slice> slices = cluster.getSolrClient().getZkStateReader().getClusterState().getCollection(COL).getSlices(); assertEquals(1, slices.size()); // sanity check Slice slice = slices.iterator().next();",Nit: rename variable on 895
"@@ -49,13 +49,13 @@ func Run(t crossdock.T) { }, nil) fatals.Error(err, expected a failure for timeout) - if err, ok := err.(transport.BadRequestError); ok { + if transport.IsBadRequestError(err) { t.Skipf(sleep/raw method not implemented: %v, err) return } form := strings.HasPrefix(err.Error(), `timeout for procedure sleep/raw of service yarpc-test after`) assert.True(form, error message has expected prefix for timeouts, got %q, err.Error()) - _, ok := err.(transport.TimeoutError) - assert.True(ok, error should be a TimeoutError, got %T, err) + assert.True( + transport.IsTimeoutError(err), error should be a TimeoutError, got %T, err) }",what the hell is this?
"@@ -11,7 +11,7 @@ import paths from './paths'; * @category Object * @sig [[k]] -> {k: {a}} -> {a} * @see {@link RA.mergeProps|mergeProps} - * @param {!Array} ps The property paths to merge + * @param {!Array} paths The property paths to merge * @param {!Object} obj The object to query * @return {!Object} The object composed of merged property paths of obj * @example","lets all so add `mergePath` here. ```javascript @see {@link RA.mergeProps|mergeProps}, {@link RA.mergePath|mergePath}"
"@@ -62,6 +62,15 @@ type TeamInfo struct { // whether a user was a member given some Merkle seqno? } +// ImplicitTeamInfo contains information needed after +// resolving/identifying an implicit team. TeamInfo is used for +// anything else. +type ImplicitTeamInfo struct { + Name libkb.NormalizedUsername + TID keybase1.TeamID + TlfID tlf.ID +} + // SessionInfo contains all the info about the keybase session that // kbfs cares about. type SessionInfo struct {","Is this gonna be used for single teams as well, or is the plan to use the old code path for single teams since we won't need a resolve for them? If former, it sounds like this could use a different name."
"@@ -94,7 +94,7 @@ type EncryptedTLFCryptKeyClientAndEphemeral struct { } const ( - defaultClientMetadataVer kbfsmd.MetadataVer = kbfsmd.SegregatedKeyBundlesVer + defaultClientMetadataVer kbfsmd.MetadataVer = kbfsmd.ImplicitTeamsVer ) // DataVer is the type of a version for marshalled KBFS data","This looked excitingly scary at first, but it seems this is only used in tests. Perhaps we should rename it to have a `ForTest` suffix?"
"@@ -1,8 +1,13 @@ from random import random +<<<<<<< HEAD +======= +from bzt.utils import to_json from tests import BZTestCase, r +>>>>>>> cba72f5388bd3647b636c773e6893428e37da306 from bzt.modules.aggregator import ConsolidatingAggregator, DataPoint, KPISet, AggregatorListener +from tests import BZTestCase, r from tests.mocks import MockReader ","This is unintentional, obviously"
"@@ -102,6 +102,7 @@ func TestBlockValidSyntax(t *testing.T) { StateRoot: validSt, Miner: validAd, Ticket: validTi, + Height: 1, } require.NoError(t, validator.ValidateSyntax(ctx, blk)) ","if unset the default value for height is 0, setting it to 1 as we don't want to treat this as a genesis block."
"@@ -1124,10 +1124,12 @@ describe('GridFS Stream', function() { download.on('error', function(error) { if (!testSpec.assert.error) { test.ok(false); + download.abort(); client.close(); done(); } test.ok(error.toString().indexOf(testSpec.assert.error) !== -1); + download.abort(); client.close(); done(); });",is this call to `abort` necessary?
"@@ -35,6 +35,12 @@ const ( WorkloadAddonsTemplateURLParamKey = AddonsTemplateURL ) +// Workload types. +const ( + backendSvcType = Backend Service + lbWebSvcType = Load Balanced Web Service +) + // Matches alphanumeric characters and -._ var pathRegexp = regexp.MustCompile(`^[a-zA-Z0-9\-\.\_/]+$`) ",Can we use these values from the `manifest` pkg?
"@@ -59,7 +59,7 @@ namespace OpenTelemetry.Metrics lock (this.bindUnbindLock) { var recStatus = isShortLived ? RecordStatus.UpdatePending : RecordStatus.Bound; - boundInstrument = this.counterBoundInstruments.GetOrAdd(labelset, this.CreateMetric(recStatus)); + boundInstrument = this.counterBoundInstruments.GetOrAdd(labelset, (_) => this.CreateMetric(recStatus)); } switch (boundInstrument.Status)","Pretty sure this still allocates a delegate for the lambda. The ones below aren't using a closure so we could just pass a static ref to avoid that. For the one here we could try calling TryGetValue first and then TryAdd if needed. Not sure which perf hit is worse, double-call or allocation."
"@@ -13,6 +13,13 @@ import java.awt.Insets; import javax.swing.JLabel; import javax.swing.SwingConstants; +import net.sourceforge.pmd.annotation.InternalApi; + +/** + * @deprecated Is internal API + */ +@Deprecated +@InternalApi public class GridBagHelper { GridBagLayout gridbag;","This should be added in the release notes, just for completeness"
"@@ -25,8 +25,12 @@ void CheckRingClosureBranchStatus(RDKit::Atom *atom, RDKit::RWMol *mp) { // the stereochem is wrong. // detect the branch (= atom isn't the last one) // and reverse the stereochem if the atom has chiral stereochemistry - // and is currently degree two (protects against C1CN[C@](O)(N)1) - if (atom->getIdx() != mp->getNumAtoms(true) - 1 && atom->getDegree() == 2 && + // and is currently degree one [C@@](F)1(C)CCO1 + // or currently degree two C1CN[C@](O)(N)1 + // and not the first atom [C@](Cl)(F)1CC[C@H](F)CC1 + if (atom->getIdx() != mp->getNumAtoms(true) - 1 && + (atom->getDegree() == 1 || + (atom->getDegree() == 2 && atom->getIdx() != 0)) && (atom->getChiralTag() == Atom::CHI_TETRAHEDRAL_CW || atom->getChiralTag() == Atom::CHI_TETRAHEDRAL_CCW)) { atom->invertChirality();",Isn't the first example degree three (no hydrogens) no? This one: [C@@](F)1(C)CCO1
"@@ -5,9 +5,11 @@ #include <time.h> #include <wayland-server.h> #include <wlr/config.h> +#include <wlr/backend/libinput.h> #include <wlr/types/wlr_idle.h> #include <wlr/types/wlr_layer_shell.h> #include <wlr/types/wlr_xcursor_manager.h> +#include <wlr/types/wlr_tablet_v2.h> #include <wlr/util/log.h> #include rootston/cursor.h #include rootston/input.h","Style: this should grouped with other external headers, sorted alphabetically."
"@@ -25,7 +25,7 @@ public interface ValidatorManager { * of {@link ValidationReport} with the key being the validator's name and the value being the * {@link ValidationReport} generated by that validator. */ - Map<String, ValidationReport> validate(Project project, File projectDir); + Map<String, ValidationReport> validate(Project project, File projectDir, String azkabanFlowVersion); /** * The ValidatorManager should have a default validator which checks for the most essential",How do you plan to discover and update all the users of this interface?
"@@ -13,6 +13,18 @@ // limitations under the License. // Package cloudmysql provides connections to managed MySQL Cloud SQL instances. +// See https://cloud.google.com/sql/docs/mysql/ for more information. +// +// URLs +// +// For mysql.Open, cloudmysql registers for the scheme cloudmysql. +// The default URL opener will create a connection using the default +// credentials from the environment, as described in +// https://cloud.google.com/docs/authentication/production. +// To customize the URL opener, or for more details on the URL format, +// see URLOpener. +// +// See https://gocloud.dev/concepts/urls/ for background information. package cloudmysql // import gocloud.dev/mysql/cloudmysql import (","I wonder whether we should rethink the name of this package, maybe `gcpmysql`, `googlecloudmysql`, or `gcpcloudmysql`."
"@@ -523,6 +523,7 @@ public class CharArrayMap<V> extends AbstractMap<Object,V> { * @throws NullPointerException * if the given map is <code>null</code>. */ + @SuppressWarnings(ReferenceEquality) public static <V> CharArrayMap<V> unmodifiableMap(CharArrayMap<V> map) { if (map == null) throw new NullPointerException(Given map is null);",This was the example you wanted to try out on how to suppress legitimate warnings of ReferenceEquality ( or any other warnings ) when we start enabling the checks ?
"@@ -406,8 +406,11 @@ func (t *MatcherTestSuite) TestMustOfferRemoteMatch() { }, ).Return(&matchingservice.AddWorkflowTaskResponse{}, nil) + time.Sleep(time.Second) + t.NoError(t.matcher.MustOffer(ctx, task)) cancel() + t.NotNil(req) t.NoError(err) t.True(remoteSyncMatch)","note: this was causing flakiness on my box until I added a sleep. Unlike the 2nd flakiness fix down below, this is a bit more suspicious. will dig deeper and if i can't figure it out will open an issue"
"@@ -3303,7 +3303,11 @@ namespace pwiz.Skyline private void ShowPeptideSettingsUI(IWin32Window parent, PeptideSettingsUI.TABS? tab) { - using (PeptideSettingsUI ps = new PeptideSettingsUI(this, _libraryManager) { TabControlSel = tab }) + using (PeptideSettingsUI ps = new PeptideSettingsUI(this, _libraryManager) { TabControlSel = tab ?? (PeptideSettingsUI.TABS) + (GetModeUIHelper().ModeUI == SrmDocument.DOCUMENT_TYPE.proteomic ? Settings.Default.PeptideSettingsTab : + (GetModeUIHelper().ModeUI == SrmDocument.DOCUMENT_TYPE.small_molecules ? Settings.Default.MoleculeSettingsTab : + Settings.Default.MixedMoleculeSettingsTab)) + }) { var oldStandard = RCalcIrtStandard(); ",Let's put this back inside PeptideSettingsUI in the constructor.
"@@ -214,10 +214,17 @@ class QueryController implements ContainerInjectionInterface { } /** - * Add the header row. + * Add the header row, from specified properties, if any, or the schema. */ private function addHeaderRow(array &$data) { - $header_row = array_keys(reset($data['schema'])['fields']); + + if (!empty($data['query']['properties'])) { + $header_row = $data['query']['properties']; + } + else { + $header_row = array_keys(reset($data['schema'])['fields']); + } + if (is_array($header_row)) { array_unshift($data['results'], $header_row); }",@thierrydallacroce possible to provide test coverage for this condition?
"@@ -125,6 +125,6 @@ func (s *EndpointControllerTestSuite) TestAddDNSName() { }) s.Require().NoError(err) s.Require().Len(spiffeIDList.Items, 1) - s.Require().Len(spiffeIDList.Items[0].Spec.DnsNames, 2) - s.Require().Equal(test-endpoint.default.svc, spiffeIDList.Items[0].Spec.DnsNames[1]) + s.Require().Len(spiffeIDList.Items[0].Spec.DnsNames, 1) + s.Require().Equal(test-endpoint.default.svc, spiffeIDList.Items[0].Spec.DnsNames[0]) }",What causes these lines to change?
"@@ -104,6 +104,11 @@ class WebView(QWebView): palette = self.palette() if col is None: col = self.style().standardPalette().color(QPalette.Base) + if self.view() is not None: + if col.alpha() < 255: + self.view().setAttribute(Qt.WA_TranslucentBackground) + else: + self.view().resetAttribute(Qt.WA_TranslucentBackground) palette.setColor(QPalette.Base, col) self.setPalette(palette) ","I think this also needs to be changed to `setAttribute(..., False)`."
"@@ -3797,6 +3797,16 @@ bool StatelessValidation::manual_PreCallValidateBeginCommandBuffer(VkCommandBuff pBeginInfo->pInheritanceInfo->pNext<VkCommandBufferInheritanceConditionalRenderingInfoEXT> is VK_TRUE.); } } + + auto p_inherited_viewport_scissor_info = LvlFindInChain<VkCommandBufferInheritanceViewportScissorInfoNV>(info->pNext); + if (p_inherited_viewport_scissor_info != nullptr && !physical_device_features.multiViewport && + p_inherited_viewport_scissor_info->viewportScissor2D == VK_TRUE && + p_inherited_viewport_scissor_info->viewportDepthCount != 1) { + skip |= LogError(commandBuffer, VUID-VkCommandBufferInheritanceViewportScissorInfoNV-viewportScissor2D-04783, + vkBeginCommandBuffer: multiViewport feature is disabled, but  + VkCommandBufferInheritanceViewportScissorInfoNV::viewportScissor2D in  + pBeginInfo->pInheritanceInfo->pNext is VK_TRUE and viewportDepthCount is not 1.); + } } } return skip;","`VkCommandBufferInheritanceViewportScissorInfoNV::viewportScissor2D` might be a bit more in line with the way other field members are reported here. We should probably standardize on something, though. The `<Struct>::<field>` seems somewhat intuitive from a C++ perspective, but we can definitely use something else if it's clearer to everyone."
"@@ -208,7 +208,7 @@ func findConfig(configPath, repoDir string) (*ecpb.ExtractionConfiguration, erro if os.IsNotExist(err) { // TODO(danielmoy): This needs to be configurable by builder, language, etc. return Load(mvn.DefaultConfig()) - } else { + } else if err != nil { return nil, fmt.Errorf(opening config file: %v, err) } ",Oops! My bad for missing that. :)
"@@ -78,7 +78,7 @@ class HistoryViewTest(HistoryWebTest): resp = self.app.get(self.history_uri, headers=self.headers) entry = resp.json[data][-1] assert entry[user_id] == self.principal - assert re.match(^\\d{4}\\-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{6}, entry[date]) + assert re.match(^....-..-..T..:..:..\\.......+..:..$, entry[date]) # # Bucket","I think I preferred it the other way, but both work fine. You probably could also use raw strings so you don't have to double escape things."
"@@ -16,10 +16,14 @@ package e2e import ( fmt + net + regexp strings testing time + k8s.io/apimachinery/pkg/util/wait + github.com/vmware-tanzu/antrea/pkg/agent/util ) ",put it to a separate group?
"@@ -132,7 +132,7 @@ util::Coordinate CoordinateExtractor::ExtractRepresentativeCoordinate( { const auto result = ExtractCoordinateAtLength( skipping_inaccuracies_distance, coordinates); - BOOST_ASSERT(is_valid_result(coordinates.back())); + BOOST_ASSERT(is_valid_result(result)); return result; } ",This asserts the result is neither the to nor the intersection node? The assertion before therefore could trigger at any time? Should this be backported to 5.5?
"@@ -48,10 +48,12 @@ const ( // Default number of workers processing traceflow request. defaultWorkers = 4 - // Min and max data plane tag for traceflow. dataplaneTag=0 means it's not a Traceflow packet. - // dataplaneTag=15 is reserved. - minTagNum uint8 = 1 - maxTagNum uint8 = 14 + // Min and max data plane tag for traceflow. minTagNum is 7 (0b000111), maxTagNum is 59 (0b111011). + // As per RFC2474, 16 different DSCP values are we reserved for Experimental or Local Use, which we use as the 16 possible data plane tag values. + // tagStep is 4 (0b100) to keep last 2 bits at 0b11. + tagStep uint8 = 0b100 + minTagNum uint8 = 0b1*tagStep + 0b11 + maxTagNum uint8 = 0b1110*tagStep + 0b11 // PodIP index name for Pod cache. podIPIndex = podIP",Nit: add . at the end of each line.
"@@ -171,12 +171,15 @@ type OutputInfo struct { FailureMessageWithoutPrivacyInfo string `json:failure_message_without_privacy_info,omitempty` } -func (i *InputParams) updateParams(p *string) { - if p == nil { +func (i *InputParams) updateParams(projectPointer *string) { + logParamsMutex.Lock() + defer logParamsMutex.Unlock() + + if projectPointer == nil { return } - project := *p + project := *projectPointer obfuscatedProject := Hash(project) if i.ImageImportParams != nil {",project is enough as it's obvious it's pointer from the type
"@@ -2,11 +2,11 @@ from __future__ import print_function # this is here for the version check to w import sys -if sys.version_info < (3, 5): +if sys.version_info < (3, 6): # This must be before any mitmproxy imports, as they already break! # Keep all other imports below with the 'noqa' magic comment. print(# * 49, file=sys.stderr) - print(# mitmproxy only supports Python 3.5 and above! #, file=sys.stderr) + print(# mitmproxy requires Python 3.6 or higher! #, file=sys.stderr) print(# * 49, file=sys.stderr) import argparse # noqa",why skip the and above?
"@@ -25,9 +25,11 @@ import apiFetch from '@wordpress/api-fetch'; * Internal dependencies */ import { createTestRegistry, unsubscribeFromAll } from 'tests/js/utils'; -import { INITIAL_STATE } from './index'; +import { default as datastore } from './index'; import { STORE_NAME } from './constants'; +const { INITIAL_STATE } = datastore; + describe( 'core/site store', () => { let apiFetchSpy; let registry;",I think this can be simplified to `import datastore from './index';`? Maybe let's name it `store` for consistency with the other ones.
"@@ -192,10 +192,6 @@ def registerInstallation(installDir,startMenuFolder,shouldCreateDesktopShortcut, _winreg.SetValueEx(k,config.CONFIG_IN_LOCAL_APPDATA_SUBKEY,None,_winreg.REG_DWORD,int(configInLocalAppData)) if easeOfAccess.isSupported: registerEaseOfAccess(installDir) - else: - import nvda_service - nvda_service.installService(installDir) - nvda_service.startService() if startOnLogonScreen is not None: config._setStartOnLogonScreen(startOnLogonScreen) NVDAExe=os.path.join(installDir,unvda.exe)","This makes no sense any more, as this will always be True."
"@@ -157,6 +157,18 @@ public final class Vector<T> implements IndexedSeq<T>, Serializable { return io.vavr.collection.Collections.fill(n, s, empty(), Vector::of); } + /** + * Returns a Vector containing {@code n} times the given {@code element} + * + * @param <T> Component type of the Vector + * @param n The number of elements in the Vector + * @param element The element + * @return A Vector of size {@code n}, where each element is the given {@code element}. + */ + public static <T> Vector<T> fill(int n, T element) { + return io.vavr.collection.Collections.fillObject(n, element, empty(), Vector::of); + } + /** * Creates a Vector of the given elements. * <p>","(...), where each element ~are~ **is the** given {\@code element}."
"@@ -6,10 +6,10 @@ import com.getcapacitor.Plugin; import com.getcapacitor.PluginCall; import com.getcapacitor.PluginMethod; -@NativePlugin() +@NativePlugin public class CLASS_NAME extends Plugin { - @PluginMethod() + @PluginMethod public void echo(PluginCall call) { String value = call.getString(value); ","Not related to the PR itself, but if the `()` is not really needed (tested and seems to work fine without it), we should probably remove it from all our core plugins, they all have it"
"@@ -240,6 +240,13 @@ public class ArrayReadWriteBuf implements ReadWriteBuf { // implemented in the same growing fashion as ArrayList int oldCapacity = buffer.length; int newCapacity = oldCapacity + (oldCapacity >> 1); + if (newCapacity - capacity <= 0) { + if (capacity < 0) { + // capacity has overflown + throw new OutOfMemoryError(); + } + newCapacity = capacity; + } buffer = Arrays.copyOf(buffer, newCapacity); return true; }",why does this have a separate case for `0`? surely that is also an error?
"@@ -0,0 +1,14 @@ +package de.danoeh.antennapod.core.sync; + +public interface SynchronizationSharedPreferenceKeys { + String NAME = synchronization; + String SELECTED_SYNC_PROVIDER = selected_sync_provider; + String IS_SYNC_PROVIDER_CONNECTED = provider_is_connected; + String LAST_SUBSCRIPTION_SYNC_TIMESTAMP = last_sync_timestamp; + String LAST_EPISODE_ACTIONS_SYNC_TIMESTAMP = last_episode_actions_sync_timestamp; + String QUEUED_FEEDS_ADDED = sync_added; + String QUEUED_FEEDS_REMOVED = sync_removed; + String QUEUED_EPISODE_ACTIONS = sync_queued_episode_actions; + String LAST_SYNC_ATTEMPT_TIMESTAMP = last_sync_attempt_timestamp; + String LAST_SYNC_ATTEMPT_SUCCESS = last_sync_attempt_success; +}",> I moved all constants that are shared preference keys to a separate (interface) class. What do you think of that? Different than the rest of the app but I am fine with it :) Maybe just `SynchronizationPreferenceKeys`?
"@@ -36,7 +36,7 @@ public class AzDBTestUtility { public EmbeddedH2BasicDataSource() { super(); - final String url = jdbc:h2:mem:test; + final String url = jdbc:h2:mem:test;IGNORECASE=TRUE; setDriverClassName(org.h2.Driver); setUrl(url); }",Does H2 DB not use the DB schema definition files?
"@@ -488,11 +488,13 @@ class Controller $useCache = !Config::get('cms.twigNoCache'); $isDebugMode = Config::get('app.debug', false); + $strictVariables = (Config::get('cms.enableTwigStrictVariables', null) !== null) ?: $isDebugMode; $forceBytecode = Config::get('cms.forceBytecodeInvalidation', false); $options = [ 'auto_reload' => true, 'debug' => $isDebugMode, + 'strict_variables' => $isDebugMode, ]; if ($useCache) {","This needs to be `$strictVariables`, please test each config value and ensure that they're working as intended (true = enabled, false = disabled, null = value of app.debug)"
"@@ -233,7 +233,7 @@ public class RestClient { * @return The client info. */ public ClientInfo getClientInfo() { - return clientInfo; + return oAuthRefreshInterceptor.clientInfo; } /**",the clientInfo is updated for the 2nd request using the access token from authTokenProvider once gotten a 401 return at the first time
"@@ -70,7 +70,7 @@ public class NodeOptions { Capabilities caps = info.getCanonicalCapabilities(); builders.stream() .filter(builder -> builder.score(caps) > 0) - .peek(builder -> LOG.info(String.format(Adding %s %d times, caps, info.getMaximumSimultaneousSessions()))) + .peek(builder -> LOG.finest(String.format(Adding %s %d times, caps, info.getMaximumSimultaneousSessions()))) .forEach(builder -> { DriverService.Builder freePortBuilder = builder.usingAnyFreePort(); ",This is an informational message that allows someone to read the console output and understand how the grid node is configured. Please leave.
"@@ -438,8 +438,17 @@ func (a *Account) removeClient(c *client) int { } } a.mu.Unlock() - if c != nil && c.srv != nil && a != c.srv.gacc && removed { - c.srv.accConnsUpdate(a) + + if c != nil && c.srv != nil && removed { + doRemove := false + c.srv.mu.Lock() + if a != c.srv.gacc { + doRemove = true + } + c.srv.mu.Unlock() + if doRemove { + c.srv.accConnsUpdate(a) + } } return n }","Hold lock, then do `doRemove = a != c.srv.gacc` then remove lock then conditional."
"@@ -110,12 +110,17 @@ type Detail struct { type createExperimentFunc func(*core.ExperimentInfo) error type updateExperimentFunc func(*core.ExperimentYAMLDescription) error +// StringStruct defines a common status struct. +type StringStruct struct { + Status string `json:status` +} + // @Summary Create a new chaos experiment. // @Description Create a new chaos experiment. // @Tags experiments // @Produce json // @Param request body core.ExperimentInfo true Request body -// @Success 200 create ok +// @Success 200 {object} core.ExperimentInfo // @Failure 400 {object} utils.APIError // @Failure 500 {object} utils.APIError // @Router /experiments/new [post]",How about naming it `StatusResponse`?
"@@ -298,6 +298,9 @@ class RustGenerator : public BaseGenerator { assert(!cur_name_space_); + // Generate global namespace imports. + GenNamespaceImports(); + // Generate all code in their namespaces, once, because Rust does not // permit re-opening modules. //","Please describe why we do this twice, for future maintainers."
"@@ -17,12 +17,13 @@ namespace MvvmCross.Droid.Support.V7.RecyclerView [MvxSetToNullAfterBinding] IEnumerable ItemsSource { get; set; } - IMvxTemplateSelector ItemTemplateSelector { get; set; } + MvxBaseTemplateSelector ItemTemplateSelector { get; set; } ICommand ItemClick { get; set; } ICommand ItemLongClick { get; set; } object GetItem(int position); int ItemTemplateId { get; set; } + } }",Is there any way to keep this as an interface to keep existing users working?
"@@ -354,13 +354,10 @@ type BPFDataplane interface { RemoveXDP(ifName string, mode XDPMode) error UpdateCIDRMap(ifName string, family IPFamily, ip net.IP, mask int, refCount uint32) error UpdateFailsafeMap(proto uint8, port uint16) error - loadXDPRaw(objPath, ifName string, mode XDPMode, mapArgs []string) error GetBPFCalicoDir() string AttachToSockmap() error DetachFromSockmap(mode FindObjectMode) error RemoveSockmap(mode FindObjectMode) error - loadBPF(objPath, progPath, progType string, mapArgs []string) error - LoadSockops(objPath string) error LoadSockopsWithBytes(objBytes []byte) error LoadSockopsAuto() error RemoveSockops() error",Please can you merge master in before making these changes. I just reinstated a bunch of BPF UTs. Possible that the UTs use this code.
"@@ -327,6 +327,16 @@ class FirefoxProfile(object): rc.append(node.data) return ''.join(rc).strip() + def parse_manifest_json(content): + Extracts the details from the contents of a WebExtensions `manifest.json` file. + manifest = json.loads(content) + return { + 'id': manifest['applications']['gecko']['id'], + 'version': manifest['version'], + 'name': manifest['version'], + 'unpack': False, + } + if not os.path.exists(addon_path): raise IOError('Add-on path does not exist: %s' % addon_path) ",The id is not mandatory for web extensions. Could you update this to support a web extension without an id?
"@@ -27,7 +27,7 @@ namespace Nethermind.Network.Enr; /// </summary> public class NodeRecord { - private int _enrSequence; + private long _enrSequence; private string? _enrString; ","Below: return string.Concat(enr:, Convert.ToBase64String(rlpData).Replace(+, -).Replace(/, _).Replace(=, )); Better with StringBuilder? Also why do we have GetValue and GetRef doing baiscally the same?"
"@@ -21,8 +21,8 @@ namespace MvvmCross.Droid.Shared.Presenter { public const string ViewModelRequestBundleKey = __mvxViewModelRequest; - private readonly FragmentHostRegistrationSettings _fragmentHostRegistrationSettings; - private readonly Lazy<IMvxNavigationSerializer> _lazyNavigationSerializerFactory; + protected FragmentHostRegistrationSettings _fragmentHostRegistrationSettings; + protected Lazy<IMvxNavigationSerializer> _lazyNavigationSerializerFactory; protected IMvxNavigationSerializer Serializer => _lazyNavigationSerializerFactory.Value; ",I would leave these as `private readonly` and just expose them as a protected property unless we want them to be assigned outside of the constructor.
"@@ -26,7 +26,7 @@ import ( ) var ( - log = ctrl.Log.WithName(store) + log = ctrl.Log.WithName(store -> dbstore) ) // DB defines a db storage.",why use `store -> dbstore` here?
"@@ -23,6 +23,7 @@ import org.apache.iceberg.catalog.TableIdentifier; import org.apache.iceberg.exceptions.NoSuchTableException; public class MetadataTableUtils { + private MetadataTableUtils() { } ",Do we need this class?
"@@ -34,6 +34,8 @@ namespace Nethermind.Core2.Types public static ValidatorIndex None => new ValidatorIndex(ulong.MaxValue); public static implicit operator ulong(ValidatorIndex validatorIndex) => validatorIndex.Number; + + public static explicit operator int(ValidatorIndex validatorIndex) => (int)validatorIndex.Number; public static implicit operator ValidatorIndex(ulong value) => new ValidatorIndex(value); ","Suggest that implicit from ValidatorIndex => ulong is okay, but keep the opposite direction explicit. Be consistent across all the types (Slot, Gwei, etc). To avoid situations like: ValidatorIndex index = currentEpoch + maxGwei;"
"@@ -61,6 +61,13 @@ public class OperationConfig { @InjectProperty(keys = {request.${op-any-priority}.timeout, request.timeout}, defaultValue = 30000) private long msRequestTimeout; + /** + * whether to remove certain headers from the 3rd party invocations + */ + @InjectProperty(keys = {request.${op-any-priority}.clientRequestHeaderFilterEnabled, + request.clientRequestHeaderFilterEnabled}, defaultValue = true) + private boolean clientRequestHeaderFilterEnabled = true; + /** * producer wait in thread pool timeout */","if need to compile pattern, then we can do that in setter method that can avoid check changes during main business logic."
"@@ -14,8 +14,11 @@ return [ ], 'dashboard' => [ 'active_theme' => [ + 'widget_title_default' => 'Веб-сайт', 'online' => 'Онлайн', 'maintenance' => 'в разработке', + 'manage_themes' => 'Управление темами', + 'customize_theme' => 'Настройка Темы' ] ], 'theme' => [","This already exists under the `theme` lang key, please move to there instead."
"@@ -103,5 +103,11 @@ namespace OpenTelemetry.Exporter.OpenTelemetryProtocol.Implementation { this.WriteEvent(7, exception); } + + [Event(8, Message = Unsupported protocol '{0}' is configured, default protocol will be used., Level = EventLevel.Warning)] + public void UnsupportedProtocol(string protocol) + { + this.WriteEvent(8, protocol); + } } }",nit: might be good to indicate which is the default here.
"@@ -77,9 +77,6 @@ struct flb_td *td_config_init(struct flb_output_instance *ins) return NULL; } } - else { - ctx->region = FLB_TD_REGION_US; - } flb_plg_info(ctx->ins, Treasure Data / database='%s' table='%s', ctx->db_name, ctx->db_table);","If `tmp` is guaranteed not to be `NULL`, whole if statement has to be removed."
"@@ -60,10 +60,10 @@ type UpstreamController struct { func (uc *UpstreamController) Start() error { klog.Info(Start upstream devicecontroller) - uc.deviceStatusChan = make(chan model.Message, config.Get().UpdateDeviceStatusBuffer) + uc.deviceStatusChan = make(chan model.Message, config.Get().Buffer.UpdateDeviceStatus) go uc.dispatchMessage() - for i := 0; i < config.Get().UpdateDeviceStatusWorkers; i++ { + for i := 0; i < int(config.Get().Buffer.UpdateDeviceStatus); i++ { go uc.updateDeviceStatus() } return nil",why need the type conversion?
"@@ -387,6 +387,7 @@ int command_init(void) command_add(unscribespells, - Clear out your or your player target's spell book., AccountStatus::GMCoder, command_unscribespells) || command_add(untraindisc, [spellid] - Untrain specified discipline from your target., AccountStatus::GMCoder, command_untraindisc) || command_add(untraindiscs, - Untrains all disciplines from your target., AccountStatus::GMCoder, command_untraindiscs) || + command_add(updatechecksum, gm only, AccountStatus::GMImpossible, command_updatechecksum) || command_add(uptime, [zone server id] - Get uptime of worldserver, or zone server if argument provided, AccountStatus::Steward, command_uptime) || command_add(version, - Display current version of EQEmu server, AccountStatus::Player, command_version) || command_add(viewcurrencies, - View your or your target's currencies, AccountStatus::GMAdmin, command_viewcurrencies) ||",Could use a bit more verbosity here on the command note.
"@@ -145,6 +145,8 @@ public class HttpSolrCall { public static final String INTERNAL_REQUEST_COUNT = _forwardedCount; public static final Random random; + + private boolean pushedSolrRequestInfo = false; static { // We try to make things reproducible in the context of our tests by initializing the random instance // based on the current seed",I know I suggested this name but lets call this mustClearSolrRequestInfo
"@@ -159,6 +159,16 @@ type Service struct { Methods []*Method } +// FQSN returns a fully qualified service name of this service. +func (s *Service) FQSN() string { + components := []string{} + if s.File.Package != nil { + components = append(components, s.File.GetPackage()) + } + components = append(components, s.GetName()) + return strings.Join(components, .) +} + // Method wraps descriptor.MethodDescriptorProto for richer features. type Method struct { *descriptor.MethodDescriptorProto",what does 'fully qualified' mean?
"@@ -158,7 +158,13 @@ func (q *Query) Get(ctx context.Context, fps ...FieldPath) *DocumentIterator { if err := q.initGet(fps); err != nil { return &DocumentIterator{err: wrapError(dcoll, err)} } - it, err := dcoll.RunGetQuery(ctx, q.dq) + + var err error + ctx = q.coll.tracer.Start(ctx, Query.Get) + defer func() { q.coll.tracer.End(ctx, err) }() + + var it driver.DocumentIterator + it, err = dcoll.RunGetQuery(ctx, q.dq) return &DocumentIterator{iter: it, coll: q.coll, err: wrapError(dcoll, err)} } ",You don't actually need this because you can use := with already declared err as we discovered in the other PR! :)
"@@ -503,6 +503,11 @@ drreg_insert_restore_all(void *drcontext, instrlist_t *bb, instr_t *inst, regs_restored[GPR_IDX(reg)] = false; if (!pt->reg[GPR_IDX(reg)].native) { if (force_restore || instr_reads_from_reg(inst, reg, DR_QUERY_INCLUDE_ALL) || + /* Restore all app values prior to an annotation to ensure the + * arguments passed to the handler are correct. + */ + (instr_is_label(inst) && + (ptr_uint_t)instr_get_note(inst) == DR_NOTE_ANNOTATION) || /* Treat a partial write as a read, to restore rest of reg */ (instr_writes_to_reg(inst, reg, DR_QUERY_INCLUDE_ALL) && !instr_writes_to_exact_reg(inst, reg, DR_QUERY_INCLUDE_ALL)) ||",In this context it may be better to s/handler/annotation handler/
"@@ -231,7 +231,7 @@ def _get_spotify_uri_for_listens(listens): def delete_user(musicbrainz_id):  Delete a user from ListenBrainz completely. - First, drops the user's influx measurement and then deletes her from the + First, drops the user's influx measurement and then deletes him/her from the database. Args:","given that you're fixing this anyways, we've decided to avoid gendered pronouns. Let's fix this to be `them` or `the user`."
"@@ -868,14 +868,13 @@ bool _checkMacrocycleAllInSameRingAmideEster14(const ROMol &mol, const Bond *, if (a3Num != 6) return false; - ROMol::ADJ_ITER nbrIdx, endNbrs; if (a2Num == 7 || a2Num == 8) { if (mol.getAtomDegree(atm2) == 3 && mol.getAtomDegree(atm3) == 3) { - boost::tie(nbrIdx, endNbrs) = mol.getAtomNeighbors(atm2); - while (nbrIdx != endNbrs) { - if (*nbrIdx != atm1->getIdx() && *nbrIdx != atm3->getIdx()) { - const auto &res = mol.getAtomWithIdx(*nbrIdx); - const auto &resbnd = mol.getBondBetweenAtoms(atm2->getIdx(), *nbrIdx); + for (auto nbrIdx : + boost::make_iterator_range(mol.getAtomNeighbors(atm2))) { + if (nbrIdx != atm1->getIdx() && nbrIdx != atm3->getIdx()) { + const auto &res = mol.getAtomWithIdx(nbrIdx); + const auto &resbnd = mol.getBondBetweenAtoms(atm2->getIdx(), nbrIdx); if ((res->getAtomicNum() != 6 && res->getAtomicNum() != 1) || // check is (methylated)amide resbnd->getBondType() != Bond::SINGLE) {",Just `mol.atomNeighbors()` ?
"@@ -13,6 +13,7 @@ module Beaker aws } + let( :options ) { make_opts.merge({ 'logger' => double().as_null_object }) } let(:amispec) {{ centos-5-x86-64-west => { :image => {:pe => ami-sekrit1},","Your spacing style differs from the rest of the file, see the ( :options ) you have here. I can see it in other places in the patch."
"@@ -115,7 +115,8 @@ module.exports = function exec(command, opt_options) { var proc = childProcess.spawn(command, options.args || [], { env: options.env || process.env, - stdio: options.stdio || 'ignore' + stdio: options.stdio || 'ignore', + detached: true }); // This process should not wait on the spawned child, however, we do","You're welcome to surface this option through the API, but I'm not going to make this the default behavior."
"@@ -1,5 +1,5 @@ from functools import update_wrapper -from typing import Any, Callable, Dict, List, Optional, Sequence, Set, Union +from typing import TYPE_CHECKING, Any, Callable, Dict, List, Optional, Sequence, Set, Union from dagster import check from dagster.core.decorator_utils import format_docstring_for_description","Oops, I'm going to move these changes that don't have anything to do with asset defs to a separate PR."
"@@ -48,11 +48,10 @@ import ( // Index holds lookup tables for id -> pack. type Index struct { - m sync.Mutex - blob map[restic.BlobHandle]indexEntry - duplicates map[restic.BlobHandle][]indexEntry - packs restic.IDs - treePacks restic.IDs + m sync.Mutex + byType map[restic.BlobType]*lowMemMap + packs restic.IDs + treePacks restic.IDs // only used by Store, StorePacks does not check for already saved packIDs packIDToIndex map[restic.ID]int ","This little map may well be a performance killer on the benchmark. In #2812, I inline two lazily-initialized header structures in the Index."
"@@ -24,7 +24,7 @@ class ChromiumService(service.Service):  def __init__(self, executable_path, port=0, service_args=None, - log_path=None, env=None, start_error_message=None): + log_path=None, env=None, start_error_message=None, create_no_window=False):  Creates a new instance of the Service ",This would be better served as a method/property that is set when people don't want to a window.
"@@ -196,6 +196,19 @@ def qute_bookmarks(_url: QUrl) -> _HandlerRet: return 'text/html', src +@add_handler('error') +def qute_error(error_url: QUrl) -> _HandlerRet: + Handler for qute://error. Display an error page. + queries = QUrlQuery(error_url) + url_string = queries.queryItemValue(u) + error = queries.queryItemValue(e) + error_page = jinja.render( + 'error.html', + title=Error loading page: {}.format(url_string), + url=url_string, error=error) + return 'text/html', error_page + + @add_handler('tabs') def qute_tabs(_url: QUrl) -> _HandlerRet: Handler for qute://tabs. Display information about all open tabs.",I'd prefer spelling out `url` and `error` for those arguments.
"@@ -929,7 +929,7 @@ class _Frame(object): On a DataFrame: - >>> df.skew() + >>> df.skew() # doctest: +SKIP a 0.000000e+00 b -3.319678e-16 dtype: float64",This change is not related but seems this test is flaky for some reasons.
"@@ -181,6 +181,9 @@ func (l *Logger) getOutputInfo(w *daisy.Workflow, err error) *OutputInfo { if err != nil { o.FailureMessage = getFailureReason(err) o.FailureMessageWithoutPrivacyInfo = getAnonymizedFailureReason(err) + if w != nil && w.Logger != nil { + o.SerialOutputs = w.Logger.ReadSerialPortLogs() + } } return &o","Due to serial logs being potentially large, it would good if we had a flag/config that would control if serial console logs are stored (it can default to true)."
"@@ -607,6 +607,10 @@ public class RegistrationRequest { + HUB_HOST +  X - + HUB_PORT +  5555. The specified config was - + HUB_HOST +   + hub +  - + HUB_PORT +   + port); } + + if(port==-1){ + throw new GridConfigurationException(No port was specified in -hub parameter. Example - http://+hub+:4444/grid/register); + } } ","I think if they _don't_ specify a port, we should assume grid default (which is 4444)"
"@@ -187,9 +187,13 @@ const util = { if (process.platform === 'win32') util.updateOmahaMidlFiles() + let num_compile_failure = 1 + if (config.ignore_compile_failure) + num_compile_failure = 1000 + const args = util.buildArgsToString(config.buildArgs()) util.run('gn', ['gen', config.outputDir, '--args=' + args + ''], options) - util.run('ninja', ['-C', config.outputDir, config.buildTarget], options) + util.run('ninja', ['-C', config.outputDir, config.buildTarget, '-k', num_compile_failure], options) }, submoduleSync: (options = {}) => {",maybe we want to allow more than 1k? I'm thinking chromium rebase sometimes might surpass since 1 real error can be much more. Merging in any case though.
"@@ -82,6 +82,15 @@ namespace NLog /// </summary> public LogFactory Factory { get; private set; } +#if !NET3_5 && !NET4_0 && !SILVERLIGHT && !WINDOWS_PHONE + + /// <summary> + /// Properties added with <see cref=WithProperty/> or <see cref=SetProperty/> + /// </summary> + public IReadOnlyDictionary<string, object> Properties => CreateContextPropertiesDictionary(_contextProperties); //clone for immutable + +#endif + /// <summary> /// Gets a value indicating whether logging is enabled for the specified level. /// </summary>",Maybe just change to `NET4_5` ?
"@@ -84,12 +84,14 @@ public class Pruner { } public void start() { - if (state.compareAndSet(State.IDLE, State.RUNNING)) { LOG.info(Starting Pruner.); executorService = executorServiceSupplier.get(); - pruningStrategy.prepare(); - blockAddedObserverId = blockchain.observeBlockAdded(this::handleNewBlock); + execute( + () -> { + pruningStrategy.prepare(); + blockAddedObserverId = blockchain.observeBlockAdded(this::handleNewBlock); + }); } } ",Should the whole block be in the execute runnable? i.e. add the compare and set check into the async part? Are we _sure_ start will only ever be called once?
"@@ -145,6 +145,9 @@ func newAgent( metadataManager = containermetadata.NewManager(dockerClient, cfg) } + resource := resources.New() + resource.ApplyConfigDependencies(cfg) + return &ecsAgent{ ctx: ctx, ec2MetadataClient: ec2MetadataClient,",shouldn't this be happening only if cgroup feature is enabled?
"@@ -136,14 +136,14 @@ int main(int argc, char *argv[]) { if (master) std::cerr << \n STARTING train - G1 solver model at step  << super_step <<  \n\n; model_2->train( super_step*pb_model_2.num_epochs(),pb_model_2.num_batches()); // Evaluate model on test set - model_2->evaluate(execution_mode::testing,pb_model_2.num_batches()); + // model_2->evaluate(execution_mode::testing,pb_model_2.num_batches()); if(master) std::cout <<  Copy all trained weights from discriminator to G2 and train/freeze as appropriate  << std::endl; model_3->copy_trained_weights_from(model1_weights); if (master) std::cerr << \n STARTING train - G2 solver model at step  << super_step <<  \n\n; model_3->train( super_step*pb_model_3.num_epochs(),pb_model_3.num_batches()); // Evaluate model on test set - model_3->evaluate(execution_mode::testing,pb_model_3.num_batches()); + // model_3->evaluate(execution_mode::testing,pb_model_3.num_batches()); if(master) std::cout <<  Update G1 weights  << std::endl; auto model2_weights = model_2->get_weights();",This make assumption that we will not need to evaluate in between training which may be true for current large-scale inference that uses inference engine but does not consider small scale/normal training/inference where training and inference are done in the same run.
"@@ -4087,6 +4087,13 @@ SwiftASTContext::GetTypeFromMangledTypename(const char *mangled_typename, .getPointer(); if (found_type) { + // If we have an inout type at the top level, turn it into an lvalue type. + // Function parameters that are inout are treated the same as mutable vars + // here. + if (auto *inout_type = found_type->getAs<swift::InOutType>()) { + found_type = swift::LValueType::get(inout_type->getObjectType()); + } + CacheDemangledType(mangled_name.GetCString(), found_type); CompilerType result_type(ast_ctx, found_type); if (log)",Thanks for tackling this! Do you understand better why turning it into an LValue type is the right thing to do here? I'm asking because down in ...
"@@ -151,7 +151,7 @@ func sentryNotSetupWarning() { // from the last saved version. If it is, prompt to request anon ddev usage stats // and update the info. func checkDdevVersionAndOptInSentry() error { - if !output.JSONOutput && version.COMMIT != globalconfig.DdevGlobalConfig.LastUsedVersion && globalconfig.DdevGlobalConfig.InstrumentationOptIn == false { + if !output.JSONOutput && version.COMMIT != globalconfig.DdevGlobalConfig.LastUsedVersion && globalconfig.DdevGlobalConfig.InstrumentationOptIn == false && os.Getenv(DDEV_NO_SENTRY) ==  { allowStats := util.Confirm(It looks like you have a new ddev release.\nMay we send anonymous ddev usage statistics and errors?\nTo know what we will see please take a look at\nhttps://ddev.readthedocs.io/en/latest/users/cli-usage/#opt-in-usage-information\nPermission to beam up?) if allowStats { globalconfig.DdevGlobalConfig.InstrumentationOptIn = true","I think it'd be a good idea to define the environment variable name as a constant in values.go because it's hard-coded in several places, but that's a small point."
"@@ -606,6 +606,16 @@ namespace AutoRest.Ruby.Model builder.AppendLine({1} = @client.deserialize(result_mapper, {0}, '{1}'), responseVariable, valueReference); } + if (type is CompositeType) + { + var composite = type as CompositeType; + if (composite.BaseModelType != null && composite.BaseModelType.Name == Resource) + { + builder.AppendLine({0}.resource_group = resource_group_name if defined?resource_group_name, valueReference); + builder.AppendLine({0}, valueReference); + } + } + return builder.ToString(); } ","We talked offline about the hard-coded string resource_group_name and I'm not sure of a way of obtaining this as a variable (for it not to be hard-coded), it seems to be a convention for it to be named that way, so it's probably ok. Though, should these lines be added to the code only if resource_group_name is one of the parameters of the method in which we're adding them? (as that's where the value is coming from)"
"@@ -8,11 +8,6 @@ from astroid.__pkginfo__ import version as astroid_version from pylint.__pkginfo__ import version as pylint_version -# Allow stopping after the first semicolon/hash encountered, -# so that an option can be continued with the reasons -# why it is active or disabled. -OPTION_RGX = re.compile(r\s*#.*\bpylint:\s*([^;#]+)[;#]{0,1}) - PY_EXTS = (.py, .pyc, .pyo, .pyw, .so, .dll) MSG_STATE_CONFIDENCE = 2",The `re` module is then useless here. It's the reason the CI doesn't success.
"@@ -63,6 +63,7 @@ enum { ELEMENT_TYPE_PROCESS_TIME, /* %{process-time}x */ ELEMENT_TYPE_RESPONSE_TIME, /* %{response-total-time}x */ ELEMENT_TYPE_DURATION, /* %{duration}x */ + ELEMENT_TYPE_TOTAL, /* %{total}x */ ELEMENT_TYPE_ERROR, /* %{error}x */ ELEMENT_TYPE_PROTOCOL_SPECIFIC, /* %{protocol-specific...}x */ NUM_ELEMENT_TYPES",Same here. Both `%{duration}x` and `%{total-time}x` can map to the same enum element.
"@@ -1444,7 +1444,8 @@ class CommandDispatcher: else: qnam = tab.networkaccessmanager() download_manager.get(self._current_url(), user_agent=user_agent, - qnam=qnam, target=target) + qnam=qnam, target=target, + title=self._current_title()) @cmdutils.register(instance='command-dispatcher', scope='window') def view_source(self):","I think passing a title here makes `get_request` needlessly complicated for only this single use case. Instead, you should be able to construct a `downloads.FileDownloadTarget` here (similar to what's done above when `--dest` is given), and pass that to `.get()` instead. Then there shouldn't be any changes in `qtnetworkdownloads.py` needed at all."
"@@ -23,6 +23,8 @@ type Service struct { settlementsSentFunc func() (map[string]uint64, error) settlementsRecvFunc func() (map[string]uint64, error) + + pay func(context.Context, swarm.Address, uint64) error } // WithsettlementFunc sets the mock settlement function","For consistency, this `pay` field should be called `payFunc`."
"@@ -469,14 +469,14 @@ def _init_modules(args, crash_handler): log.init.debug(Initializing sessions...) sessions.init(qApp) - log.init.debug(Initializing websettings...) - websettings.init(args) - log.init.debug(Initializing adblock...) host_blocker = adblock.HostBlocker() host_blocker.read_hosts() objreg.register('host-blocker', host_blocker) + log.init.debug(Initializing websettings...) + websettings.init(args) + log.init.debug(Initializing quickmarks...) quickmark_manager = urlmarks.QuickmarkManager(qApp) objreg.register('quickmark-manager', quickmark_manager)","Why is this move needed? I'm always a bit sceptical about moving init things around, though this should be fine."
"@@ -40,6 +40,8 @@ const ( ErrTooEarly = 43 //ErrConditionInvalid indicates that the condition attached to a voucher did not execute successfully ErrConditionInvalid = 44 + //ErrConditionValid indicates that the condition attached to a voucher did execute successfully and therefore can't be cancelled + ErrConditionValid = 45 ) // CancelDelayBlockTime is the number of rounds given to the target to respond after the channel","This reads funny. Also, it's applicable when it's no condition is provided. ErrInvalidCancel would be better."
"@@ -174,6 +174,11 @@ public class ReactorContextTestExecutionListenerTests { assertThat(Mono.subscriberContext().block().isEmpty()).isTrue(); } + @Test + public void afterTestMethodWhenDifferentHookIsRegistered() throws Exception { + this.listener.afterTestMethod(this.testContext); + } + @Test public void orderWhenComparedToWithSecurityContextTestExecutionListenerIsAfter() { OrderComparator comparator = new OrderComparator();","We want to ensure that this does not break a custom hook. So before we invoke afterTestMethod, we should register a Hooks.onLastOperator. Then afterwards we should validate it is still present. Of course after the whole test is done we want to ensure we remove the custom hook too. The test should fail before your the changes in src/main/java were made and succeed after it."
"@@ -7,8 +7,14 @@ const { DEFAULT_ISMASTER_36 // eslint-disable-next-line no-restricted-modules } = require('mongodb-mock-server'); +const { ObjectId } = require('bson'); const { HostAddress } = require('../../src/utils'); +const DEFAULT_HELLO_50 = { + ...DEFAULT_ISMASTER_36, + serverId: new ObjectId() +}; + /** * @callback GetHostAddress * @returns {import('../../src/mongo_client').HostAddress}",Shouldn't this be `serviceId`? I think this may be unused
"@@ -6,7 +6,9 @@ // distributed with this work for additional information // regarding copyright ownership. The ASF licenses this file // to you under the Apache License, Version 2.0 (the -// License); you may not use this file except in compliance +// License + +); you may not use this file except in compliance // with the License. You may obtain a copy of the License at // // http://www.apache.org/licenses/LICENSE-2.0",Will this compile? Looks like a stray line feed got added to the code.
"@@ -402,8 +402,9 @@ describe('src/Core', () => { .then(() => core.upload()) .then(() => { expect(postprocessor1.mock.calls.length).toEqual(1) - const lastModifiedTime = new Date() - const fileId = 'foojpg' + lastModifiedTime.getTime() + // const lastModifiedTime = new Date() + // const fileId = 'foojpg' + lastModifiedTime.getTime() + const fileId = 'uppy-foojpg-image' expect(postprocessor1.mock.calls[0][0].length).toEqual(1) expect(postprocessor1.mock.calls[0][0][0].substring(0, 17)).toEqual(",Could remove these lines entirely :)
"@@ -3,7 +3,7 @@ package version import ( tf github.com/filecoin-project/go-filecoin/internal/pkg/testhelpers/testflags github.com/filecoin-project/go-filecoin/internal/pkg/types - github.com/magiconair/properties/assert + github.com/stretchr/testify/assert github.com/stretchr/testify/require testing",we should standardize on testify assert
"@@ -862,7 +862,17 @@ ex_expr::exp_return_type ex_expr::evalClauses(ex_clause *clause, atp1->setDiagsArea(diagsArea); if (retcode == ex_expr::EXPR_ERROR) - return retcode; + { + if((getPCodeMode() & ex_expr::ERROR_CONTINUE) > 0) + { + ExpTupleDesc::setNullValue( op_data[0], + clause->getOperand(0)->getNullBitIndex(), + clause->getOperand(0)->getTupleFormat() ); + retcode = ex_expr::EXPR_OK; + } + else + return retcode; + } // copy result data into result buffer, if generated in an aligned buffer if (result_data)",-- this code also will return back from line #871 on the first conversion clause error instead of continuing to the next clause. -- it will also not work correctly if getPCodeMode() is not set.
"@@ -79,11 +79,6 @@ class TransloaditAssembly extends Emitter { this.emit('connect') }) - socket.on('connect_failed', () => { - this.#onError(new NetworkError('Transloadit Socket.io connection error')) - this.socket = null - }) - socket.on('connect_error', () => { socket.disconnect() this.socket = null","Since it never fires, outdated event?"
"@@ -14,6 +14,10 @@ namespace Datadog.Trace.ClrProfiler.Managed.Loader public partial class Startup { private const string AssemblyName = Datadog.Trace, Version=2.0.1.0, Culture=neutral, PublicKeyToken=def86d061d0d2eeb; + private const string AzureAppServicesKey = DD_AZURE_APP_SERVICES; + private const string AasCustomTracingKey = DD_AAS_ENABLE_CUSTOM_TRACING; + private const string AasCustomMetricsKey = DD_AAS_ENABLE_CUSTOM_METRICS; + private const string TraceEnabledKey = DD_TRACE_ENABLED; /// <summary> /// Initializes static members of the <see cref=Startup/> class.","`DD_AZURE_APP_SERVICES` is already defined in `AzureAppServices`, and `DD_TRACE_ENABLED` is already defined in `ConfigurationKeys`. I suggest we reuse those, and add `DD_AAS_ENABLE_CUSTOM_TRACING` and `DD_AAS_ENABLE_CUSTOM_METRICS` to `AzureAppServices`."
"@@ -51,6 +51,11 @@ namespace Nethermind.Network long next = 0; for (int i = 0; i < specProvider.TransitionBlocks.Length; i++) { + if (specProvider.TransitionBlocks[i] >= long.MaxValue - 100) + { + continue; + } + long transition = specProvider.TransitionBlocks[i]; if (transition > headNumber) {",Why this const? Can we name this const better?
"@@ -35,6 +35,19 @@ MAXIMUM_LOOP_COUNT = 600 DEFAULT_BUCKET_FMT_V1 = 'gs://{}-data-{}' DEFAULT_BUCKET_FMT_V2 = 'gs://{}-{}-data-{}' +FORSETI_V1_RULE_FILES = [ + 'bigquery_rules.yaml', + 'blacklist_rules.yaml', + 'bucket_rules.yaml', + 'cloudsql_rules.yaml', + 'firewall_rules.yaml', + 'forwarding_rules.yaml', + 'group_rules.yaml', + 'iam_rules.yaml', + 'iap_rules.yaml', + 'instance_network_interface_rules.yaml', + 'ke_rules.yaml'] + GCLOUD_MIN_VERSION = (180, 0, 0) GCLOUD_VERSION_REGEX = r'Google Cloud SDK (.*)' GCLOUD_ALPHA_REGEX = r'alpha.*'",Is it possible a user could have iam_rules.yaml and iam_rules2.yaml? Is it better to match for *.yaml?
"@@ -273,7 +273,13 @@ public class AzkabanExecutorServer implements IMBeanRegistrable { private void initActive() throws ExecutorManagerException { final Executor executor; - final int port = this.props.getInt(ConfigurationKeys.EXECUTOR_PORT, -1); + final int port; + final boolean useSsl = props.getBoolean(ConfigurationKeys.JETTY_USE_SSL, true); + if (useSsl) { + port = this.props.getInt(ConfigurationKeys.EXECUTOR_SSL_PORT, -1); + } else { + port = this.props.getInt(ConfigurationKeys.EXECUTOR_PORT, -1); + } if (port != -1) { final String host = requireNonNull(getHost()); // Check if this executor exists previously in the DB","In above class, default port value is 0. Here it is -1. Can you please make it consistent?"
"@@ -108,10 +108,11 @@ module Selenium def initialize(source, duration, x, y, element: nil, origin: nil) super(source) + @duration = duration * 1000 @x_offset = x @y_offset = y - @origin = element || origin + @origin = origin || POINTER end def type",Should be `@origin = element || origin || POINTER`
"@@ -27,7 +27,7 @@ import org.openqa.selenium.internal.Locatable; */ public abstract class SingleKeyAction extends KeysRelatedAction { protected final Keys key; - private static final Keys[] MODIFIER_KEYS = {Keys.SHIFT, Keys.CONTROL, Keys.ALT}; + private static final Keys[] MODIFIER_KEYS = {Keys.SHIFT, Keys.CONTROL, Keys.ALT, Keys.META, Keys.COMMAND, Keys.LEFT_ALT, Keys.LEFT_CONTROL, Keys.LEFT_SHIFT}; protected SingleKeyAction(Keyboard keyboard, Mouse mouse, Keys key) { this(keyboard, mouse, null, key);","LEFT_ALT, LEFT_CONTROL, and LEFT_SHIFT should already be aliases. META could be an alias for ALT but probably isn't yet."
"@@ -61,7 +61,7 @@ namespace System.Text.Json.Tests } } - private static ReadOnlySequence<byte> GetSequence(byte[] dataUtf8, int segmentSize) + internal static ReadOnlySequence<byte> GetSequence(byte[] dataUtf8, int segmentSize) { int numberOfSegments = dataUtf8.Length / segmentSize + 1; byte[][] buffers = new byte[numberOfSegments][];",good idea to reuse the existing code!  
"@@ -2,13 +2,19 @@ package dialog import ( github.com/mysterium/node/communication + github.com/mysterium/node/identity ) type dialog struct { communication.Sender communication.Receiver + peerID identity.Identity } func (dialog *dialog) Close() error { return nil } + +func (dialog *dialog) GetPeerID() identity.Identity { + return dialog.peerID +}","Usual go convention is not to use get, just `PeerID()`"
"@@ -68,12 +68,6 @@ func skipIfNotIPv6Cluster(tb testing.TB) { } } -func skipIfDualStackCluster(tb testing.TB) { - if clusterInfo.podV6NetworkCIDR !=  && clusterInfo.podV4NetworkCIDR !=  { - tb.Skipf(Skipping test as it is not supported in dual stack cluster) - } -} - func skipIfMissingKernelModule(tb testing.TB, nodeName string, requiredModules []string) { for _, module := range requiredModules { // modprobe with --dry-run does not require root privileges",Keep it for future use?
"@@ -162,7 +162,10 @@ func execProcess(context *cli.Context) (int, error) { if err != nil { return -1, err } - bundle := utils.SearchLabels(state.Config.Labels, bundle) + bundle, ok := utils.SearchLabels(state.Config.Labels, bundle) + if !ok { + return -1, errors.New(bundle not found in labels) + } p, err := getProcess(context, bundle) if err != nil { return -1, err","Are empty values allowed here for `bundle`? (Wondering if `` is ok to pass, so if there's an actual difference between not set and no value here)"
"@@ -1090,6 +1090,8 @@ read_instruction(byte *pc, byte *orig_pc, const instr_info_t **ret_info, }); #endif + di->opcode = info->type; + /* if just want opcode, stop here! faster for caller to * separately call decode_next_pc than for us to decode immeds! */","If the decision is to set di->opcode inside read_instruction, all its callers should be changed as well, as all but decode_eflags_usage are using info->type and setting di->opcode if necessary themselves. Since all other callers of read_instruction are using info->type for the opcode, the alternative fix is to change decode_eflags_usage to use info->type. (Ideally we could then remove di->opcode -- except there's the call to opnd_create_immed_float_for_opcode and one use when encoding.) If going this route, read_instruction's docs should then say it does not initialize the opcode field and returns the opcode in info->type. IIRC a memset to 0 was too expensive which is why this is so fragile."
"@@ -10,7 +10,11 @@ SQLALCHEMY_DATABASE_URI = os.environ['SQLALCHEMY_DATABASE_URI'] REGISTRY_URL = os.environ['REGISTRY_URL'] CATALOG_HOST = os.environ['CATALOG_HOST'] -CATALOG_URL = 'https://%s' % CATALOG_HOST +CATALOG_URL = os.environ.get('CATALOG_URL', 'https://%s' % CATALOG_HOST) +if not CATALOG_URL.startswith(https): + print(WARNING: INSECURE CONNECTION TO CATALOG) + # require verbose environment variable to be defined + ALLOW_INSECURE_CATALOG_ACCESS = os.environ['ALLOW_INSECURE_CATALOG_ACCESS'] PACKAGE_BUCKET_NAME = os.environ['PACKAGE_BUCKET_NAME'] ",I'm fine with `CATALOG_URL` - but we should then drop `CATALOG_HOST`. No point in having two of them
"@@ -40,6 +40,7 @@ install_requires = [ 'tornado>=4.0,<5', # https://pagure.io/python-daemon/issue/18 'python-daemon<2.2.0', + 'python-dateutil==2.7.5', 'enum34>1.1.0;python_version<3.4', ] ",Do we want to lock to this specific version? Or < 2.8? or < 3.0?
"@@ -951,11 +951,10 @@ class UpdateManager return base64_encode(hash_hmac('sha512', http_build_query($data, '', '&'), base64_decode($secret), true)); } - // - // Internals - // - - protected function getMigrationTableName() + /** + * @return string + */ + public function getMigrationTableName() { return Config::get('database.migrations', 'migrations'); }",Please check to make sure your linters haven't screwed with OctoberCMS stuff before making PRs ;)
"@@ -1,7 +1,11 @@ <% if current_user_has_active_subscription? %> <span><%= t 'products.show.free_to_subscribers' %></span> <% else %> - <span><%= number_to_currency price, precision: 0 %></span> + <%= t( + products.show.price.#{product.product_type}.#{variant}_html, + default: [:products.show.price.#{variant}_html], + price: number_to_currency(price, precision: 0) + ) %> <% if product.discounted? %> <span class=original-price>","I really like how you used translation for this, nice thinking."
"@@ -1228,7 +1228,7 @@ namespace Microsoft.AspNetCore.Server.Kestrel.Internal.Http if (needDecode) { // Read raw target before mutating memory. - rawTarget = target.GetAsciiString() ?? string.Empty; + rawTarget = target.GetAsciiStringNonNullCharacters() ?? string.Empty; // URI was encoded, unescape and then parse as utf8 int pathLength = UrlEncoder.Decode(path, path);",Return `string.Empty` from the call then drop the null+assign check?
"@@ -3,7 +3,7 @@ Name: felix Summary: Project Calico virtual networking for cloud data centers Version: 2.0.0 -Release: 0.3.beta3%{?dist} +Release: 0.1.rc2%{?dist} License: Apache-2 URL: http://projectcalico.org Source0: felix-%{version}.tar.gz",This has gone backwards from `0.3.beta3` so I think the new package will be a downgrade.
"@@ -28,11 +28,11 @@ if (labels.length > 1) { ); // more than 1 AT visible label will fail IOS/Safari/VO even with aria-labelledby if (ATVisibleLabels.length > 1) { - return true; + return undefined; } // make sure the ONE AT visible label is in the list of idRefs of aria-labelledby const labelledby = axe.commons.dom.idrefs(node, 'aria-labelledby'); - return !labelledby.includes(ATVisibleLabels[0]); + return !labelledby.includes(ATVisibleLabels[0]) ? undefined : false; } // only 1 CSS visible label",We'll need to add an incomplete message to the JSON file.
"@@ -201,6 +201,9 @@ r lw(\n(.lu*75u/100u).' result << %(.sp #{counter}. #{manify terms.map {|dt| dt.text }.join ' '} .RS 4) + when 'horizontal' + result << %(.TP +#{manify terms.map {|dt| dt.text }.join(', '), whitespace: :normalize}) else result << %(.sp #{manify terms.map {|dt| dt.text }.join(', '), whitespace: :normalize}",I tried this and it doesn't seem to have any effect. Can you clarify how the TP macro works?
"@@ -98,14 +98,17 @@ export default function SetupMain( { finishSetup } ) { // Get additional information to determine account and site status. const alerts = useSelect( ( select ) => select( STORE_NAME ).getAlerts( accountID ) ); const urlChannels = useSelect( ( select ) => select( STORE_NAME ).getURLChannels( accountID, clientID ) ); - const error = useSelect( ( select ) => select( STORE_NAME ).getError() ); + const accountsError = useSelect( ( select ) => select( STORE_NAME ).getError( 'getAccounts', [] ) ); + const alertsError = useSelect( ( select ) => select( STORE_NAME ).getError( 'getAlerts', [ accountID ] ) ); + const error = accountsError || alertsError; // Determine account and site status. const accountStatus = determineAccountStatus( { accounts, clients, alerts, - error, + accountsError, + alertsError, previousAccountID, previousClientID, } );","The IB says that `error` would be removed in this component, but it looks like perhaps we could still use this for cases where it is still used where it only seems to care if there is any error. In that case, I think it would be slightly better to name it something like `hasError` and cast it to a boolean, but that's a bit of a nitpick. I'm okay with keeping it if @felixarntz is."
"@@ -157,6 +157,8 @@ public class MessagingController implements Runnable { // Key is accountUuid:folderName:messageUid , value is unimportant private ConcurrentHashMap<String, String> deletedUids = new ConcurrentHashMap<String, String>(); + private static final Flag[] SYNCFLAGS = new Flag[] { Flag.SEEN, Flag.FLAGGED, Flag.ANSWERED, Flag.FORWARDED }; + private String createMessageKey(Account account, String folder, Message message) { return createMessageKey(account, folder, message.getUid()); }",These are two words -- they should be separated by an underscore (i.e. SYNC_FLAGS).
"@@ -74,8 +74,14 @@ type cpuUsage struct { User uint64 `json:user` } +type cfs struct { + Period uint64 `json:period,omitempty` + Quota int64 `json:quota,omitempty` +} + type cpu struct { Usage cpuUsage `json:usage,omitempty` + CFS cfs `json:cfs,omitempty` Throttling throttling `json:throttling,omitempty` } ","Do we want to make that stats output and this the same? You have `Scheduling` field, `cfs` tag, and `CpuCfs`, `cpu_cfs` in the two different places. I think we should pick one and stick with it"
"@@ -31,7 +31,7 @@ import org.apache.tuweni.bytes.MutableBytes; * * <h3>Message structure</h3> * - * The following describes the message structure: + * <p>The following describes the message structure: * * <pre> * authRecipient -&gt; E(remote-pubk,","Seems unrelated, but ok."
"@@ -249,9 +249,9 @@ class JUnitTester(JavaTestRunner, HavingInstallableTools): props.write(target_%s=%s\n % (index, item.replace(os.path.sep, '/'))) class_path = os.pathsep.join(self.base_class_path) - junit_command_line = [java, -cp, class_path, taurusjunit.CustomRunner, self.props_file] + junit_cmd_line = [java, -cp, class_path, -Djna.nosys=true, taurusjunit.CustomRunner, self.props_file] - self._start_subprocess(junit_command_line) + self._start_subprocess(junit_cmd_line) class TestNGTester(JavaTestRunner, HavingInstallableTools):","If it's for Windows only, maybe add it conditionally?"
"@@ -24,6 +24,8 @@ const globalStyle = { raisedColor: '#003363', raisedHighlightedColor: '#ffffff', + barStyle: 'dark-content', + warningBackgroundColor: '#FFD08D', // For WebView - must correspond to the properties above","Each theme has an `appearance` property which will tell you if it's light or dark, which is currently used to set the `keyboardAppearance` property. Likewise please could you make the `barStyle` property derive from the `appearance` property. Please have a look at how `keyboardAppearance` is set. I expect in your case you just need to add one line `style.barStyle = style.appearance + -content`"
"@@ -77,8 +77,8 @@ public class LocalNewSessionQueuer extends NewSessionQueuer { } @Override - public Optional<HttpRequest> remove() { - return sessionRequests.poll(); + public Optional<HttpRequest> remove(RequestId id) { + return sessionRequests.poll(id); } @Override",`poll` and `remove` have different meanings.
"@@ -497,8 +497,9 @@ namespace pwiz.Skyline.Controls.Graphs // Match each file status with a progress control. bool first = true; - var width = flowFileStatus.Width - 2 - - (flowFileStatus.VerticalScroll.Visible + var width = flowFileStatus.Width - 2 - // Avoid clipping the cancel/retry button when we need a vertical scrollbar + (flowFileStatus.VerticalScroll.Visible || + status.ProgressList.Count > (panelFileList.Height / (new FileProgressControl()).Height) // If scrollbar isn't visible already, it's about to be ? SystemInformation.VerticalScrollBarWidth : 0); List<FileProgressControl> controlsToAdd = new List<FileProgressControl>();","On further thought, I was curious why if status.ProgressList.Count is greater than zero (which it should always be, right?) you need to create a new FileProgessControl?"
"@@ -430,7 +430,11 @@ def keybd_event(*args): return user32.keybd_event(*args) def mouse_event(*args): - return user32.mouse_event(*args) + # #8452: NVDA should ignore mouse events that are injected by itself. + # Import late to avoid circular import + import mouseHandler + with mouseHandler.ignoreInjection(): + return user32.mouse_event(*args) def getAncestor(hwnd,flags): return user32.GetAncestor(hwnd,flags)",I don't think that we can rely on the timing of receiving these events. Currently this design relies on the events being received while this contextManager is active.
"@@ -1,9 +1,9 @@ -_base_ = './faster_rcnn_r50_fpn_1x_coco.py' +_base_ = './faster_rcnn_r50_caffe_fpn_mstrain_1x_coco.py' model = dict(roi_head=dict(bbox_head=dict(num_classes=3))) classes = ('person', 'bicycle', 'car') data = dict( train=dict(classes=classes), val=dict(classes=classes), test=dict(classes=classes)) -# TODO: Update model url after bumping to V2.0 -load_from = 'https://s3.ap-northeast-2.amazonaws.com/open-mmlab/mmdetection/models/faster_rcnn_r50_fpn_1x_20181010-3d1b3351.pth' # noqa + +load_from = 'http://download.openmmlab.com/mmdetection/v2.0/faster_rcnn/faster_rcnn_r50_caffe_fpn_mstrain_3x_coco/faster_rcnn_r50_caffe_fpn_mstrain_3x_coco_bbox_mAP-0.398_20200504_163323-30042637.pth' # noqa",Rename the file to be `faster_rcnn_r50_fpn_1x_coco-person-bicycle-car.py`
"@@ -1,7 +1,5 @@ class Exercise < ActiveRecord::Base - has_many :classifications, as: :classifiable, dependent: :destroy has_many :statuses, as: :completeable, dependent: :destroy - has_many :topics, through: :classifications has_one :trail, through: :step, as: :completeables has_one :step, dependent: :destroy, as: :completeable ",Should we have a migration to delete classification data for exercises? Is there any?
"@@ -349,7 +349,9 @@ namespace NLog.Targets /// <returns></returns> private EventLog GetEventLog(LogEventInfo logEvent) { - return eventLogInstance ?? (eventLogInstance = new EventLog(this.Log, this.MachineName, this.Source.Render(logEvent))); + if (eventLogInstance?.Source == this.Source.Render(logEvent)) + return eventLogInstance ?? (eventLogInstance = new EventLog(this.Log, this.MachineName, this.Source.Render(logEvent))); + return eventLogInstance = new EventLog(this.Log, this.MachineName, this.Source.Render(logEvent)); } /// <summary>",In worst case we're rendering the `source` two times? Also there is an (implicit) two times check on `null` and we need to check also log and machine?
"@@ -3776,7 +3776,7 @@ NABoolean HSGlobalsClass::isAuthorized(NABoolean isShowStats) if (privs == NULL) { *CmpCommon::diags() << DgSqlCode(-1034); - authorized = FALSE; + return FALSE; } // Requester must have at least select privilege",Changing this to an immediate return breaks the timer at line 3795. Please either add a call to LM->LogTimeDiff or revert this change.
"@@ -34,7 +34,7 @@ fr_FR.strings = { dashboardWindowTitle: 'Fenêtre de téléchargeur de fichier (Appuyez sur echap pour fermer)', dataUploadedOfTotal: '%{complete} sur %{total}', done: 'Terminé', - dropHereOr: 'Déposer les fichiers ici ou %{browse}', + dropHereOr: 'Déposer ici ou %{browse}', dropHint: 'Déposez vos fichiers ici', dropPasteBoth: 'Déposer les fichiers ici, coller ou %{browse}', dropPasteFiles: 'Déposer les fichiers ici, coller ou %{browse}',",@aduh95 isn't the previous one more correct?
"@@ -56,6 +56,12 @@ func (r *Reporter) Failed(cr *cmapi.CertificateRequest, err error, reason, messa r.recorder.Event(cr, corev1.EventTypeWarning, reason, message) apiutil.SetCertificateRequestCondition(cr, cmapi.CertificateRequestConditionReady, cmmeta.ConditionFalse, cmapi.CertificateRequestReasonFailed, message) + +} + +func (r *Reporter) InvalidRequest(cr *cmapi.CertificateRequest) { + apiutil.SetCertificateRequestCondition(cr, cmapi.CertificateRequestConditionInvalidRequest, + cmmeta.ConditionTrue, , ) } func (r *Reporter) Pending(cr *cmapi.CertificateRequest, err error, reason, message string) {","We need to also report information as to *why* the request failed (i.e. the 'reason' field) - if this method isn't used yet, it may be best to remove for now. Otherwise can you update the signature to ensure it's useful in future?  "
"@@ -63,6 +63,12 @@ class Plot(param.Parameterized): raise NotImplementedError + def cleanup(self): +  + Allows defining cleanup actions to perform on plot deletion. +  + + @property def id(self): return self.comm.id if self.comm else id(self.state)",Why not raise ``NotImplementedError`` here?
"@@ -3773,11 +3773,7 @@ public class MessagingController { return false; } - if (account.isNotifyContactsMailOnly() && !contacts.isAnyInContacts(message.getFrom())) { - return false; - } - - return true; + return !account.isNotifyContactsMailOnly() || contacts.isAnyInContacts(message.getFrom()); } public void deleteAccount(Account account) {",I find the old way makes this easier to read.
"@@ -800,6 +800,8 @@ func (k *k8sOrchestrator) createControllerDeployment(volProProfile volProfile.Vo return nil, err } + pvc := vol.Labels.K8sPersistentVolumeClaim + if clusterIP ==  { return nil, fmt.Errorf(Volume cluster IP is required to create controller for volume 'name: %s', vsm) }",Why do we need this change for the replica deployment?
"@@ -64,6 +64,8 @@ public class MailUtil { return BundleUtil.getStringFromBundle(notification.email.import.filesystem.subject, rootDvNameAsList); case CHECKSUMIMPORT: return BundleUtil.getStringFromBundle(notification.email.import.checksum.subject, rootDvNameAsList); + case CONFIRMEMAIL: + return BundleUtil.getStringFromBundle(notification.email.verifyEmail.subject, rootDvNameAsList); } return ; }",As I just mentioned to @sekmiller some day it might be nice to associate these bundle keys with the UserNotification object. Maybe you just call userNotification.getEmailSubject() or something. Out of scope for now but something to consider for the future.
"@@ -98,6 +98,7 @@ public class Dictionary { // TODO: really for suffixes we should reverse the automaton and run them backwards private static final String PREFIX_CONDITION_REGEX_PATTERN = %s.*; private static final String SUFFIX_CONDITION_REGEX_PATTERN = .*%s; + static final String DEFAULT_ENCODING = ISO8859-1; FST<IntsRef> prefixes; FST<IntsRef> suffixes;",This should reference a constant in StandardCharsets (and get the name from there).
"@@ -570,10 +570,12 @@ void wlr_xdg_popup_destroy(struct wlr_xdg_surface *surface) { static void xdg_popup_get_position(struct wlr_xdg_popup *popup, double *popup_sx, double *popup_sy) { - struct wlr_xdg_surface *parent = - wlr_xdg_surface_from_wlr_surface(popup->parent); - struct wlr_box parent_geo; - wlr_xdg_surface_get_geometry(parent, &parent_geo); + struct wlr_box parent_geo = {0}; + if (wlr_surface_is_xdg_surface(popup->parent)) { + struct wlr_xdg_surface *parent = + wlr_xdg_surface_from_wlr_surface(popup->parent); + wlr_xdg_surface_get_geometry(parent, &parent_geo); + } *popup_sx = parent_geo.x + popup->geometry.x - popup->base->geometry.x; *popup_sy = parent_geo.y + popup->geometry.y -","Perhaps I've misunderstood the issue, but don't we need to use the parent coordinates if the parent is a layer surface as well? Currently I don't see how this PR actually changes the result."
"@@ -1523,7 +1523,10 @@ module.exports = { const actual = objectSchema.properties[propName]; const expected = normalizeProperty(original.properties[propName]); TestCase.assertEqual(actual.name, propName); - TestCase.assertEqual(actual.indexed, expected.indexed); + + // The schema primary key is automatically indexed + const isPrimaryKey = original.primaryKey === propName; + TestCase.assertEqual(actual.indexed, expected.indexed || isPrimaryKey); if (actual.type == object) { TestCase.assertEqual(actual.objectType, expected.type === object ? expected.objectType : expected.type);","This test needed to be updated now that the `indexed` of a property pulled from the schema is correctly `true` for primary keys. They've always been indexed, but the schema didn't reflect this properly when read from the db."
"@@ -164,7 +164,7 @@ namespace OpenTelemetry.Instrumentation.AspNetCore.Tests var response = await client.GetAsync(/api/values/2); response.EnsureSuccessStatusCode(); // Status Code 200-299 - WaitForProcessorInvocations(spanProcessor, 4); + WaitForProcessorInvocations(spanProcessor, 2); } // begin and end was called once each.",I'm probably just missing it... but what accounted for this change?
"@@ -0,0 +1,11 @@ +import * as RA from '../src/index'; +import eq from './shared/eq'; + +describe('stubString', function() { + it(tests `function` that returns `'''`, function() { + eq(RA.stubString(), ''); + eq(RA.stubString([1]), ''); + eq(RA.stubString(new Array()), ''); + eq(RA.stubString(1, 2, 3), ''); + }); +});","context('when called', function() { specify('should always return empty string', function() { ....test here for equality of results of 2 consequent invocations }); });"
"@@ -225,4 +225,18 @@ describe CommunicartMailer do expect(sender_names(mail)).to eq([Communicart]) end end + + describe '#proposal_subject' do + it 'defaults when no client_data is present' do + proposal = FactoryGirl.create(:proposal) + mail = CommunicartMailer.proposal_created_confirmation(proposal) + expect(mail.subject).to eq(Request  + proposal.public_id) + end + + it 'includes custom text for ncr work orders' do + wo = FactoryGirl.create(:ncr_work_order) + mail = CommunicartMailer.proposal_created_confirmation(wo.proposal) + expect(mail.subject).to eq(Request #{wo.public_identifier}, #{wo.org_code}, #{wo.building_number}, from #{wo.requester.email_address}) + end + end end",Might want to consider setting explicit values when creating the instance and checking for explicit values here.
"@@ -29,6 +29,7 @@ import ( m_k8s github.com/openebs/maya/pkg/k8s deploy_appsv1 github.com/openebs/maya/pkg/kubernetes/deployment/appsv1/v1alpha1 deploy_extnv1beta1 github.com/openebs/maya/pkg/kubernetes/deployment/extnv1beta1/v1alpha1 + patch github.com/openebs/maya/pkg/kubernetes/patch/v1alpha1 podexec github.com/openebs/maya/pkg/kubernetes/podexec/v1alpha1 github.com/openebs/maya/pkg/template upgrade github.com/openebs/maya/pkg/upgrade/result/v1alpha1",can we rename the alias to `upgraderesult`
"@@ -28,7 +28,7 @@ func Example_openVariableFromURL() { // This example uses constantvar, an in-memory implementation. // We need to add a blank import line to register the constantvar driver's // URLOpener, which implements runtimevar.VariableURLOpener: - // import _ gocloud.dev/runtimevar/constantvar + // _ gocloud.dev/runtimevar/constantvar // constantvar registers for the constant scheme. // All runtimevar.OpenVariable URLs also work with runtimevar+ or runtimevar+variable+ prefixes, // e.g., runtimevar+constant://... or runtimevar+variable+constant://....",why remove import?
"@@ -288,6 +288,7 @@ func environmentConfig() (Config, error) { appArmorCapable := utils.ParseBool(os.Getenv(ECS_APPARMOR_CAPABLE), false) taskIAMRoleEnabled := utils.ParseBool(os.Getenv(ECS_ENABLE_TASK_IAM_ROLE), false) taskIAMRoleEnabledForNetworkHost := utils.ParseBool(os.Getenv(ECS_ENABLE_TASK_IAM_ROLE_NETWORK_HOST), false) + taskCPUMemLimitEnabled := utils.ParseBool(os.Getenv(ECS_ENABLE_TASK_CPU_MEM_LIMIT), true) credentialsAuditLogFile := os.Getenv(ECS_AUDIT_LOGFILE) credentialsAuditLogDisabled := utils.ParseBool(os.Getenv(ECS_AUDIT_LOGFILE_DISABLED), false)",Can you add this to the readme file?
"@@ -335,6 +335,11 @@ def _emit_no_member(node, owner, owner_name, ignored_mixins): return False if not all(map(has_known_bases, owner.type.mro())): return False + if node.attrname.startswith('_' + owner_name): + # Test if an attribute has been mangled ('private' attribute) + unmangled_name = node.attrname.split('_' + owner_name)[-1] + if owner.getattr(unmangled_name, None) is not None: + return False return True ","Please pass the second argument as a keyword argument. Whenever we pass numbers, strings, None, it is more obvious what they mean if we attach an additional context to them through the keyword argument"
"@@ -3,7 +3,7 @@ Name: felix Summary: Project Calico virtual networking for cloud data centers Version: 2.0.0 -Release: 0.3.beta3%{?dist} +Release: 0.1.rc2%{?dist} License: Apache-2 URL: http://projectcalico.org Source0: felix-%{version}.tar.gz",This has gone backwards from `0.3.beta3` so I think the new package will be a downgrade.
"@@ -42,13 +42,16 @@ def _getTPClass(temporalImp): return TP10X2.TP10X2 elif temporalImp == 'tm_py': return TP_shim.TPShim - elif temporalImp == 'tm_cpp': + elif temporalImp == 'tm_py_faster': return TP_shim.FastTPShim elif temporalImp == 'monitored_tm_py': return TP_shim.MonitoredTPShim + elif temporalImp == 'monitored_fast_tm_py': + return TP_shim.MonitoredFastTPShim else: raise RuntimeError(Invalid temporalImp '%s'. Legal values are: 'py',  - 'cpp', 'tm_py', 'tm_cpp', 'monitored_tm_py' % (temporalImp)) + 'cpp', 'tm_py', 'tm_py_faster', + 'monitored_tm_py', 'monitored_fast_tm_py' % (temporalImp)) ","Is this the pure C++ TM? If so, why the name change?"
"@@ -109,7 +109,7 @@ class ImapResponseParser { continue; } - if (untaggedHandler != null) { + if (response.getTag() == null && untaggedHandler != null) { untaggedHandler.handleAsyncUntaggedResponse(response); } ",I'm fairly sure this was the wrong behaviour. I was getting a tagged response sent to the callback in my testing.
"@@ -316,6 +316,12 @@ describe('Context', function() { }); + it('should default empty-object include to document', function () { + var result = new Context({ include: {}, exclude: {} }); + assert.lengthOf(result.include, 1); + assert.equal(result.include[0], document); + }); + }); describe('initiator', function() {",should these be arrays?
"@@ -422,7 +422,7 @@ class Addon(AddonBase): def _getPathForInclusionInPackage(self, package): extension_path = os.path.join(self.path, package.__name__) - return extension_path.encode(mbcs) + return extension_path def loadModule(self, name):  loads a python module from the addon directory","I think it would be best to fetch package directly name directly instead of going through this function unless someone says otherwise. I'm okay with this at the moment, although I think we may at some point revisit this function."
"@@ -1,7 +1,7 @@ class ObservationsController < ApplicationController before_action :authenticate_user! before_action :find_proposal - before_action ->{authorize @proposal, :can_edit!} + before_action ->{authorize @proposal, :can_show!} rescue_from Pundit::NotAuthorizedError, with: :auth_errors ",Wondering if it's worthwhile to break out a separate ObservationPolicy...
"@@ -66,7 +66,7 @@ namespace Datadog.Trace.Security.IntegrationTests Func<Task<(HttpStatusCode StatusCode, string ResponseText)>> attack = () => SubmitRequest(/Health/?arg=[$slice]); var resultRequests = await Task.WhenAll(attack(), attack(), attack(), attack(), attack()); agent.SpanFilters.Add(s => s.Tags[http.url].IndexOf(Health, StringComparison.InvariantCultureIgnoreCase) > 0); - var spans = agent.WaitForSpans(5); + var spans = agent.WaitForSpans(expectedSpans); Assert.Equal(expectedSpans, spans.Count()); foreach (var span in spans) {","This is actually unrelated to the review, it should help fix the security flaky test, thanks to @kevingosse for the tip!"
"@@ -0,0 +1,19 @@ +module.exports = { + roots: [ + <rootDir>/javascript/grid-ui/src + ], + testMatch: [ + <rootDir>/javascript/grid-ui/src/tests/**/*.test.tsx + ], + transform: { + ^.+\\.(ts|tsx)$: ts-jest + }, + moduleFileExtensions: [ts, tsx, js, jsx, json, node], + snapshotSerializers: [enzyme-to-json/serializer], + setupFilesAfterEnv: [<rootDir>/setupTests.ts], + testEnvironment: jsdom, + moduleNameMapper: { + .+\\.(svg|png|jpg|css)$: identity-obj-proxy, + selenium/javascript/grid-ui/(.*): <rootDir>/$1 + } +}","We don't need this file, we can use the one that is in the grid-ui directory"
"@@ -15,6 +15,7 @@ package server import ( bytes + errors testing ) ",Bump copyright date top of file to -2020
"@@ -70,12 +70,11 @@ void GenerateImports(grpc_generator::File *file, grpc_generator::Printer *printe printer->Print(//If you make any local changes, they will be lost\n); printer->Print(vars, //source: $filename$\n\n); printer->Print(vars, package $Package$\n\n); + printer->Print(import (\n); + printer->Indent(); if (file->additional_imports() != ) { printer->Print(file->additional_imports().c_str()); - printer->Print(\n\n); } - printer->Print(import (\n); - printer->Indent(); printer->Print(vars, $context$ \golang.org/x/net/context\\n); printer->Print(vars, $grpc$ \google.golang.org/grpc\\n); printer->Outdent();","this file is shared with the GRPC project, so formatting changes here are not desirable, they will make future updates/merges much harder."
"@@ -57,8 +57,8 @@ namespace NLog.LayoutRenderers /// <param name=logEvent>Logging event.</param> protected override void Append(StringBuilder builder, LogEventInfo logEvent) { - string msg = GlobalDiagnosticsContext.Get(this.Item); - builder.Append(msg); + // use AppendFormat to ensure that any IFormatProvider is respected + builder.AppendFormat(logEvent.FormatProvider, {0}, GlobalDiagnosticsContext.GetObject(this.Item)); } } }","This looks a bit strange. (string.format and {0}) I propose: `GlobalDiagnosticsContext.Get(this.item, logEvent.FormatProvider)`. - (so a new overload)"
"@@ -12,7 +12,7 @@ * * Redistributions in binary form must reproduce the above copyright notice, * this list of conditions and the following disclaimer in the documentation * and/or other materials provided with the distribution. - * + *sig * * Neither the name of Google, Inc. nor the names of its contributors may be * used to endorse or promote products derived from this software without * specific prior written permission.",Please do a self-review before posting.
"@@ -0,0 +1,19 @@ +class NameUnnamedRedactions < ActiveRecord::Migration[5.0] + def self.up + Redaction.find_each do |redaction| + if redaction.title.empty? + redaction.title = redaction.id.to_s + redaction.save! + end + end + end + + def self.down + Redaction.find_each do |redaction| + if redaction.title.eql? redaction.id.to_s + redaction.title =  + redaction.save! + end + end + end +end",Indentation should be the standard two spaces please.
"@@ -86,10 +86,10 @@ class OrderItemFacade $product = $this->productRepository->getById($productId); $orderDomainConfig = $this->domain->getDomainConfigById($order->getDomainId()); - $productPrice = $this->productPriceCalculationForUser->calculatePriceForUserAndDomainId( + $productPrice = $this->productPriceCalculationForUser->calculatePriceForCustomerUserAndDomainId( $product, $order->getDomainId(), - $order->getCustomer() + $order->getCustomerUser() ); $orderProduct = $this->orderItemFactory->createProduct(",Maybe `ProductPriceCalculationForUser` should be also renamed to `productPriceCalculationForCustomerUser`
"@@ -60,8 +60,11 @@ class DbalLogQuery implements LogQueryInterface private function getQuery(): QueryBuilder { return $this->connection->createQueryBuilder() - ->select('es.id, event, payload, recorded_at, recorded_by AS author_id, coalesce(u.first_name || \' \' || u.last_name, \'System\') AS author') - ->leftJoin('es', 'users', 'u', 'u.id = es.recorded_by') - ->from('event_store', 'es'); + ->select('es.id, payload, recorded_at, recorded_by AS author_id') + ->addSelect('coalesce(u.first_name || \' \' || u.last_name, \'System\') AS author') + ->addSelect('ese.translation_key as event') + ->from('event_store', 'es') + ->join('es', 'event_store_event', 'ese', 'es.event = ese.id') + ->leftJoin('es', 'users', 'u', 'u.id = es.recorded_by'); } }",It be better if you name event_id instead of event id in name give you information about relation
"@@ -40,8 +40,8 @@ namespace Nethermind.JsonRpc.Test.Modules private EthereumJsonSerializer _serializer; private NetworkConfig _networkConfig; private IBlockTree _blockTree; - private const string _enodeString = enode://e1b7e0dc09aae610c9dec8a0bee62bab9946cc27ebdd2f9e3571ed6d444628f99e91e43f4a14d42d498217608bb3e1d1bc8ec2aa27d7f7e423413b851bae02bc@127.0.0.1:30303; - private const string _exampleDataDir = /example/dbdir; + private const string EnodeString = enode://e1b7e0dc09aae610c9dec8a0bee62bab9946cc27ebdd2f9e3571ed6d444628f99e91e43f4a14d42d498217608bb3e1d1bc8ec2aa27d7f7e423413b851bae02bc@www.google.com:30303; + private const string ExampleDataDir = /example/dbdir; [SetUp] public void Setup()",it tests dns now but does not test ip any more
"@@ -288,6 +288,11 @@ MESSAGE_NO_ORGANIZATION = ( 'https://cloud.google.com/resource-manager/docs/' 'creating-managing-organization') +MESSAGE_RUN_FREQUENCY = ( + 'Forseti will run once every 12 hours, you can configure the run ' + 'frequency in the server deployment template field run-frequency' + ' and update the deployment using the deployment manager.') + # Questions templates QUESTION_ENABLE_WRITE_ACCESS = ( 'Enable write access for Forseti? '","nit: just to be consistent, can you please move the whitespace to the line above?"
"@@ -35,7 +35,7 @@ class WebDriver(ChromiumDriver): def __init__(self, executable_path=chromedriver, port=DEFAULT_PORT, options=None, service_args=None, desired_capabilities=None, service_log_path=DEFAULT_SERVICE_LOG_PATH, - chrome_options=None, service=None, keep_alive=True): + chrome_options=None, service=None, keep_alive=True, create_no_window=False):  Creates a new instance of the chrome driver. Starts the service and then creates new instance of chrome driver.",We shouldn't add this as a new `kwarg` here. This should all be done on the options class
"@@ -1390,6 +1390,8 @@ spec: type:  containers: - name: sjr + securityContext: + privileged: true image: {{ .Config.ScrubImage.value }} command: - sh",why it needs privileged access?
"@@ -73,11 +73,7 @@ const ( func (k Kind) ToApplicationKind() (model.ApplicationKind, bool) { upper := strings.ToUpper(string(k)) kind := strings.TrimSuffix(upper, APP) - appKind, ok := model.ApplicationKind_value[kind] - if !ok { - return -1, false - } - return model.ApplicationKind(appKind), true + return model.ToApplicationKind(kind) } var (","Here should be like `kind, ok := model.ApplicationKind_value[matcher.Kind]`, right?"
"@@ -3,7 +3,7 @@ widget :team_plan_subscriber_count do type number_and_secondary data do { - value: TeamPlan.instance.subscription_count + value: TeamPlan.all.sum(&:subscription_count) } end end","Maybe this should be a class method on TeamPlan, feels odd here and likely to change / have to hunt down later."
"@@ -11,10 +11,10 @@ <!--Text describing page content--> <%= raw _(<p>From here you can download your plan in various formats. This may be useful if you need to submit your plan as part of a grant application.</br> Select what format you wish to use and click to 'Export'.</p>)%> - <% if @plan.phases.count == 1 %> - <%= render :partial => /shared/export_links, locals: {plan: @plan, phase: @phan.phases[0]} %> + <% if @plan.template.phases.count == 1 %> + <%= render :partial => /shared/export_links, locals: {plan: @plan, phase: @phan.template.phases.first} %> <%else%> - <% @plan.phases.each do |phase| %> + <% @plan.template.phases.each do |phase| %> <div class=accordion id=project-accordion> <div class=accordion-group> <div class=accordion-heading>","plan.phases was a shortcut for accessing to the nested association, otherwise what's the purpose of having has_many :phases, through :template?"
"@@ -72,7 +72,7 @@ var opts struct { FeatureFlags struct { NoUpdate bool `long:noupdate description:Disable Please attempting to auto-update itself.` - NoCache bool `long:nocache description:Disable caches (NB. not incrementality)` + NoCache bool `long:nocache description:Deprecated, use plz build --rebuild or plz test --rerun flags instead.` NoHashVerification bool `long:nohash_verification description:Hash verification errors are nonfatal.` NoLock bool `long:nolock description:Don't attempt to lock the repo exclusively. Use with care.` KeepWorkdirs bool `long:keep_workdirs description:Don't clean directories in plz-out/tmp after successfully building targets.`",This is confusingly named. Feature flags are what I'm calling the things that gate breaking changes between releases. Might want to revisit this.
"@@ -7,7 +7,7 @@ module Beaker # @return [Array<Number>] array of port numbers # @api private def self.amiports(roles) - ports = [22] + ports = [22, 61613, 8139] if roles.include? 'database' ports << 8080",I hate this code :-).
"@@ -982,6 +982,10 @@ func (fbm *folderBlockManager) isQRNecessary( fbm.log.CWarningf(ctx, Couldn't get the current session: %+v, err) return false } + // It's ok to treat both MDs written by this process on this + // device, and MDs written by other processes (e.g., kbgit) in the + // same way. Other processes are likely to be short-lived, and + // probably won't do their own QR, so a conflict is unlikely here. selfWroteHead := session.VerifyingKey == head.LastModifyingWriterVerifyingKey() // Don't do reclamation if the head isn't old enough and it wasn't","If the unlikely happen, does it just mean a more expensive operation, but not affect correctness?"
"@@ -219,7 +219,8 @@ func (s *session) setup( return nil, nil, err } - s.packer = newPacketPacker(s.connectionID, s.cryptoSetup, s.connectionParameters, s.streamFramer, s.perspective, s.version) + s.packer = newPacketPacker(s.connectionID, s.cryptoSetup, s.connectionParameters, s.streamFramer, + s.perspective, s.version) s.unpacker = &packetUnpacker{aead: s.cryptoSetup, version: s.version} return s, handshakeChan, nil",Put this on 1 line or on 6 lines.
"@@ -63,11 +63,14 @@ func (v *VenafiTPP) Setup(cfg *config.Config) error { if v.config.Addons.Venafi.TPP.Zone ==  { return errors.NewSkip(fmt.Errorf(Venafi TPP Zone must be set)) } - if v.config.Addons.Venafi.TPP.Username ==  { - return errors.NewSkip(fmt.Errorf(Venafi TPP Username must be set)) - } - if v.config.Addons.Venafi.TPP.Password ==  { - return errors.NewSkip(fmt.Errorf(Venafi TPP Password must be set)) + + if v.config.Addons.Venafi.TPP.AccessToken ==  { + if v.config.Addons.Venafi.TPP.Username ==  { + return errors.NewSkip(fmt.Errorf(Venafi TPP requires either an access-token or username-password to be set: missing username)) + } + if v.config.Addons.Venafi.TPP.Password ==  { + return errors.NewSkip(fmt.Errorf(Venafi TPP requires either an access-token or username-password to be set: missing password)) + } } return nil",Small nit: can we also error that an access token can be used instead of username/pass ?
"@@ -269,6 +269,13 @@ def set_rate_limits(per_token_limit, per_ip_limit, window_size): set_rate_limits(per_token_limit, per_ip_limit, window_size) +@cli.command(name=update_all_user_listen_counts) +def update_all_user_listen_counts(): +  Scans listen table and update listen counts for all users  + application = webserver.create_app() + with application.app_context(): + ts_update_user_listen_counts() + @cli.command(name=recalculate_all_user_data) def recalculate_all_user_data(): ",Could use updating.
"@@ -324,8 +324,7 @@ int flb_metrics_fluentbit_add(struct flb_config *ctx, struct cmt *cmt) /* get hostname */ ret = gethostname(hostname, sizeof(hostname) - 1); if (ret == -1) { - strncpy(hostname, unknown, 7); - hostname[7] = '\0'; + strcpy(hostname, unknown); } /* Attach metrics to cmetrics context */",hostname will need the ending NULL byte
"@@ -191,7 +191,7 @@ func makeErrorCookie(value string) *http.Cookie { MaxAge: defaultErrorCookieMaxAge, Path: rootPath, Secure: true, - HttpOnly: true, + HttpOnly: false, SameSite: http.SameSiteLaxMode, } }",I changed this value to read the error message from JavaScript.
"@@ -335,7 +335,9 @@ class PlaylistAPITestCase(IntegrationTestCase):  Test to ensure creating a playlist with collaborators works  playlist = get_test_data() - playlist[playlist][extension][PLAYLIST_EXTENSION_URI][collaborators] = [self.user2[musicbrainz_id]] + # Owner is in collaborators, should be filtered out + playlist[playlist][extension][PLAYLIST_EXTENSION_URI][collaborators] = [self.user[musicbrainz_id], + self.user2[musicbrainz_id]] response = self.client.post( url_for(playlist_api_v1.create_playlist),","is this a TODO, or a description of this test? If it's a description, can you change it to If the owner is in collaborators, it should be filtered out"
"@@ -24,12 +24,16 @@ const test = (suite, buildConfig = config.defaultBuildConfig, options) => { config.update(options) const braveArgs = [ - '--enable-logging' + '--enable-logging=stderr' ] // Android doesn't support --v if (config.targetOS !== 'android') { braveArgs.push('--v=' + options.v) + + if (options.vmodule) { + braveArgs.push('--vmodule=' + options.vmodule) + } } if (options.filter) {",logs are only exposed if test fails
"@@ -168,7 +168,7 @@ void testRingMatching3Score() { // expect test1 to have better score than test2 since all halogens are on R1 // but this is not the case - TEST_ASSERT(test1 < test2); // Fix Me! + TEST_ASSERT(test1 > test2); // But it is for the fingerprint score ",Now it's fixed we can remove this line
"@@ -1150,7 +1150,7 @@ func buildFetchRegistrationEntryQuery(dbType string, req *datastore.FetchRegistr func buildFetchRegistrationEntryQuerySQLite3(req *datastore.FetchRegistrationEntryRequest) (string, []interface{}, error) { const query = ` WITH listing AS ( - SELECT id FROM registered_entries WHERE entry_id = ? + SELECT id FROM registered_entries WHERE entry_id = ? AND (expiry = 0 OR expiry >= strftime('%s','now')) ) SELECT id as e_id,",a Server User may be checking if some registration(s) exist in the DB with a faster `Read` op to decide if they should Create (totally fresh) or Update (just TTL). These queries now hide this information and forces user to execute `Create` and on `AlreadyExists` execute `Update` (just TTL) instead. Would be nice to have this new filtering as a flag on the API instead.
