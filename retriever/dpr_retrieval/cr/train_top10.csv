code,review,top_1,top_2,top_3,top_4,top_5,top_6,top_7,top_8,top_9,top_10
"@@ -595,8 +595,10 @@ namespace Kratos array_1d<double, 3> b = ZeroVector(3); b[0] = 1.0; - const array_1d<double, 3> c = MathUtils<double>::CrossProduct(a, b); - const array_1d<double, 3> d = MathUtils<double>::UnitCrossProduct(a, b); + array_1d<double, 3> c, d; + + MathUtils<double>::CrossProduct(c, b, a); + MathUtils<double>::UnitCrossProduct(d, b, a); KRATOS_CHECK_EQUAL(c[2], 2.0); KRATOS_CHECK_EQUAL(d[2], 1.0); ",I assumed that for CrossProduct the values were inverted as well... Is that right?,Good catch. Put `result` in brackets because its optional and add a description. See some of the other static functions for doc examples.,"Just one thing, be sure to define what each parameter means","Try to stick to one or the other abbreviation, i.e., CPS or CPF. It's less confusing this way.",This variable is defined in the Structural?,"This should `throw`...or all `from` functions should not require the `result` parameter, which is probably better since it avoids setting the members twice. The doc for `result` needs to be put back then.",Should just be `The modified result parameter.`,The `Cartesian3.fromCartesian4` calls are unnecessary and add more GC pressure.,"There is already a PENALTY parameters in the core, called INITIAL_PENALTY",:+1: Lets hope this doesn't change the values of the tests :D,"While this is more automated, I think its slightly overbuilt considering there are only 4 function. It should be fine to check the call name in `getEvaluateBinaryFunction` and apply the special cases."
"@@ -22,8 +22,13 @@ For internal use only; no backwards-compatibility guarantees. """""" +from __future__ import absolute_import + import sys import traceback +from builtins import next +from builtins import object +from builtins import zip import six ","I think we should we avoid `import six` for consistency with the approach followed elsewhere. What do you think, @RobbeSneyders ? Looks like we are using `six.reraise` in a few places and `six.text_type` in apiclient.py.",Why did you change this one?,"This rename in a81f5cd5408497642f691925940360c6e251942d is the real problem and it's misleading, I'd suggest just reverting the rename instead of aliasing here. The `tarfile.TarFile` code does not implement `__next__` in python2 or python3, instead it implents `__iter__` with custom returned iterators that are not `tarfile.TarFile` objects.","This will stop working in Python 3.8 and is deprecated for some time. However, `from collections.abc import Sequence`, which is the upgrade path, won't work in Python 2.7 Do you really need to subclass from it?",Erm. I was hoping you'd just focus the TODO with an issue tied to the python 3 port to add this once we were on python 3. Having different functionality in 2 and 3 seems like a thing we want to stay away from.,Should probably use the default name for the `str` function.,"@benjyw can you look over this file please? This override means that in line 39, during call to `_RWBuf.write()`, it will call `_RWBuf.do_write()` with `unicode`, rather than `bytes`, which might be a problem. However, `do_write()` simply raises `NotImplementedError`, so I don't know if this actually matters?",Should we do this before `import io`?,Please delete this line. No need for three lines.,Are we using timezone from pytz or tz from dateutil?,"not part of this PR, but I smell star imports that ought to be removed."
"@@ -25,13 +25,16 @@ module View def should_render_revenue? revenue = @tile.revenue_to_render + # special case: city with multi-revenue - no choice but to draw separate revenue + return true if revenue.any? { |r| !r.is_a?(Numeric) } + return false if revenue.empty? return false if revenue.first.is_a?(Numeric) && (@tile.cities + @tile.towns).one? return false if revenue.uniq.size > 1 - return false if @tile.cities.sum(&:slots) < 3 && @tile.stops.size == 2 + return false if @tile.cities.sum(&:slots) < 3 && (@tile.cities + @tile.towns).size == 2 true end ","we call cities + towns . size a lot, maybe make a helper method on tiles",can just make this a one liner,did you miss this? values uniq twice,why don't you do a return unless corporation first routes.size < corporations&trins&.size will crash if there is no corporation 3 < nil is undefined,"I'm not entirely sure about this. This will work differently than other player preferences which are stored on the server. Maybe there should be an option on the profile, and the local option is just a temporary option",Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.,would label.to_s == 'OO' work ?,should this be multiple abilities?,@tile.city_towns.size > 1,Trigger the dividend step for games that have revenue that comes from other places beyond their trains.,@routes.select { |r| r.hexes.any? }
"@@ -947,6 +947,7 @@ out: D_ERROR(""pool ""DF_UUID"" event %d failed: rc %d\n"", DP_UUID(svc->ps_uuid), src, rc); daos_prop_fini(&prop); +#endif } static void ",This will be removed.,From this point forward (successful daos_cont_create of either form above) would it be possible to unconditionally use *cuuid in the daos_cont_open() and daos_cont_destroy() calls?,(style) line over 100 characters,(style) trailing whitespace,"Are the default props used only during new pool creation, or might also be used afterwards? If the latter, or even regardless, it'd be more straightforward to initialize them fully during module initialization.",(style) line over 80 characters,"are there cases in the client pool disconnect execution flow that, following dc_pool_hdl_unlink(), could result in rc=-DER_NOMEM being returned to the daos_pool_disconnect() caller? I'm looking at the flow and having a hard time seeing where it can happen.",(style) code indent should use tabs where possible,Is this a TODO? (future),there is a D_STRNDUP,"Is it safe to remove this? What if there is code that relies on this being set to NULL? I.e. D_FREE free's this, but does not set to NULL, correct?"
"@@ -160,6 +160,11 @@ func (r *routeBuilder) profileHandler() (request.Handler, error) { return middleware.Wrap(h, backendMiddleware(r.cfg, r.authenticator, r.ratelimitStore, profile.MonitoringMap)...) } +func (r *routeBuilder) firehoseLogHandler() (request.Handler, error) { + h := firehose.Handler(r.batchProcessor, r.authenticator) + return middleware.Wrap(h, firehoseMiddleware(r.cfg, intake.MonitoringMap)...) +} + func (r *routeBuilder) backendIntakeHandler() (request.Handler, error) { requestMetadataFunc := emptyRequestMetadata if r.cfg.AugmentEnabled { ",nit: `firehoseLogHandler` vs. `firehoseMiddleware` looks like a naming inconsistency? (`log` is not used anywhere else).,There is no test for this use case,Shouldn't we only do these two within the L34-L37 if case? Do we want to return L39 a handler that is a tracefinisher even when the underlying handler is not traceable?,You should use the `healthcheck.Balancers` instead of `[]healthcheck.Balancer`.,"im not convinced about this. i wanted to not have any logic at all on the top level handlers (backend, frontend) and just chain downstream handlers, so they can be better reused. chaining would be their only responsibility. this ways you are doing too many things imo: composing _and_ branching. i'd liked more eg. @simitt idea of renaming the feSwitchHandler so it could be used in the backend if needed. this way you would have to duplicate the logic, and is not like this affords code or something.","Can you please add a TODO (or just do it) to pass in the `kibana.ClientConfig` directly, rather than another round-trip through `libbeat/common`? Then we can change `apm-server/kibana` to call `libbeat/kibana.NewClientWithConfig`, rather than _yet another_ round-trip :)",What's the purpose of removing this option?,Were we resorting to this middleware because previously the APMEvent didn't have a timestamp we could rely on for the timings?,These could be squashed.,I think you wanted this `true`,"I wonder if it would make more sense to call this `/modules`, do you plan to add anything else?"
"@@ -416,7 +416,8 @@ class GradeEntryFormsController < ApplicationController end end - #If the request is a post type and the abort flag is down (operation can continue) + # If the request is a post type and the abort flag is down + # (operation can continue) if request.post? && !abort_upload grades_file = params[:upload][:grades_file] begin ",Trailing whitespace detected.,Line is too long. [87/80],Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.,I've made the fast path resilient to more redefinition errors.,Prefer single-quoted strings when you don't need string interpolation or special symbols.,"The reason this error changed is because we've already created a `class A` and we can reopen that class within the same file, so this simply finds the already-created `class A` from above.",Trailing whitespace detected.,You should move this to right after Line 392 (you want this to be before the block that creates the grades).,Line is too long. [92/80],"this is why I prefer keyword arguments, I know `8` can be understood by the name of the class itself, but doesn't `weeks: 8` look much better?",Line is too long. [82/80]
"@@ -40,6 +40,8 @@ import org.sonar.plugins.java.api.semantic.Symbol; public class BytecodeCompleter implements JavaSymbol.Completer { + public static final int ASM_API_VERSION = Opcodes.ASM7_EXPERIMENTAL; + private Symbols symbols; private final ParametrizedTypeCache parametrizedTypeCache; private final SquidClassLoader classLoader; ",Confirmed the issue on SQ side.,We could take the opportunity to add `boolean isJava17Compatible();` method.,"it should be dropped and GC anyway, but I would avoid creating a variable if it is of no use.","Why do we need something like this. Unless Spark breaks things, Zeppelin should continue to work without needing a new build of Zeppelin. This prevents people from easily using Zeppelin with a potentially compatible version of Spark.","Why do we need something like this. Unless Spark breaks things, Zeppelin should continue to work without needing a new build of Zeppelin. This prevents people from easily using Zeppelin with a potentially compatible version of Spark.","`isAnnotatedWith` will go through all annotations, so with this code, you end up going through the list 4 times when the field is not annotated by any of the annotations (which I expect to be the most frequent case). We could do everything in one shot, without using `isAnnotatedWith`. The same happens in `isAnnotatedWithInject`.","NIT: Let's rename ""transactions to be deleted"" to ""delete transactions"".","We don't make statics that refer to type system entities (or NodeCache nodes) in the compiler. Doing so limits reusability of the JitInterface. We already have use cases where one can have multiple type system contexts in the same process: in those cases, static cache is just another word for ""memory leak"". I would prefer this stays an instance field (it also avoids the problems with races Sergiy pointed out).",No need of null check here.,nit: insert empty line,"This will fail with `NoSuchFieldError` when accessing a core file generated prior to the addition of `J9AccClassIsUnmodifiable`. This should use a static field initialized with > J9ConstantHelper.getLong(J9JavaAccessFlags.class, ""J9AccClassIsUnmodifiable"", 0)"
"@@ -359,6 +359,8 @@ function annotate(fn, strictDi, name) { * * {@link auto.$provide#service service(class)} - registers a **constructor function**, `class` * that will be wrapped in a **service provider** object, whose `$get` property will instantiate * a new object using the given constructor function. + * * {@link auto.$provide#decorator decorator(name)} - registers a **service decorator** with the + * {@link auto.$injector $injector}, `name` the name of the service to decorate. * * See the individual methods for more information and examples. */ ","service decorator is not correct, as not only services can be decorated. You should call it **decorator function**. In the function signature, the decorator fn is also missing: decorator(name, decoratorFn)",", `name` the name of the provider to decorate. -> ; `name` is the name of the provider to decorate.","Does ""Arbitrary order"" mean that the order will be always the same or not?",What about services that specify a factory (else branch)? Are you addressing that in a follow-up?,"might want to log a warning or throw or something, if value === escaped or === the current escaped start symbol, and ditto for the end symbol. Or maybe not, I dunno.",I don't believe these need to be instantiated.,please wrap `true` in backticks so that it is rendered in a &lt;code> tag --- otherwise lgtm,Not enough space for `this.directive`?,Revert this one,"Wouldn't we need this `instance` to also be updated, if `result !== instance` ? (Could this by why you defined `instantiate` as a variable, but then forgot to update it's `instance` property ?)",Oops. Do we need to think through backward compatibility? We usually provide the backward compatibility between two PROD versions. E.g. new v0.js should work with the old amp-carousel.js
"@@ -158,6 +158,8 @@ def get_supported(versions=None, noarch=False): abis.append('none') + arches = [] + if not noarch: arch = get_platform() if sys.platform == 'darwin': ",Renaming this variable `arch` and flipping the values/logic in the surrounding code would make this a bit less confusing. Double negatives FTL where avoidable,Renaming this variable `arch` and flipping the values/logic in the surrounding code would make this a bit less confusing. Double negatives FTL where avoidable,"Given the removal of ncurses 5 from the ABI requirement, this implication isn't necessarily true: it's possible for a platform to be compatible with `manylinux2010` without being compatible with `manylinux1`.","Given the removal of ncurses 5 from the ABI requirement, this implication isn't necessarily true: it's possible for a platform to be compatible with `manylinux2010` without being compatible with `manylinux1`.","I'm not sure how the `macosx` platform tags are actually structured, so it would be safer to keep the `startswith` for this case.","I'm not sure how the `macosx` platform tags are actually structured, so it would be safer to keep the `startswith` for this case.","Again, please try avoiding `# noqa`.","Again, please try avoiding `# noqa`.","This is a partial fix to an issue described in #3202; I have a PR open with a full fix at #3357. The full fix generates an order of magnitude more tags on my machine than this PR (198 vs 2196, though these both include impossible tags as described in #3403).","This is a partial fix to an issue described in #3202; I have a PR open with a full fix at #3357. The full fix generates an order of magnitude more tags on my machine than this PR (198 vs 2196, though these both include impossible tags as described in #3403).","So this code depends on the versions[0][0] input and on the arch... whats the right behaviour when noarch is false? A test for it might be to assert that get_supported([['2']], False) results in ('py2', 'none', local_arch) in the output, and for get_support([['2]], True) to do ??? [whats the right thing here?]. We could make this more meaningfully testable by pushing all the calculation to pure functions, and having get_supported just do the querying and then call those functions"
"@@ -641,8 +641,10 @@ public class DoFnOperator<InputT, OutputT> @Override public final void processElement(StreamRecord<WindowedValue<InputT>> streamRecord) { checkInvokeStartBundle(); + long oldHold = keyCoder != null ? keyedStateInternals.minWatermarkHoldMs() : -1L; doFnRunner.processElement(streamRecord.getValue()); checkInvokeFinishBundleByCount(); + emitWatermarkIfHoldChanged(oldHold); } @Override ",Is this required on every element? I'd rather trigger this only if we set / remove a hold.,Let just the if and this is the default.,Was this just a bug hanging around?,+1 to this - now that GC is done via window expiration rather than per-element lateness there is no need to relocate output times to EOW even when we relocate the hold to GC time,We need the following to generalize watermark emission to be able to call this method from other places. ``` if (mark.getTimestamp > currentInputWatermark) { currentInputWatermark = mark.getTimestamp(); },"This one was tough. The problem here was, that previously input watermark moved at the end of each bundle. Each bundle also contained its own timers. But - because timers can generate new timers and these are processed in different bundle - the actual timestamp of timer must be taken into account. Otherwise a timer setup for some earlier time might trigger window garbage collection, because input watermark is already way ahead. I'm not quite sure of the other consequences though. Is it correct, that one bundle might generate multiple bundles, or is there a bundle atomicity requirement? On the other hand, runners that don't have concept of bundles (and have therefore by definition bundle of size 1) have to generate multiple bundles from single bundle, so that might be ok. Am I right?",This is reversed - we want oldTimersAddr to match data in existing pipelines for compatibility. This means that oldTimersAddr must be what was there before.,BoundedWindow.TIMESTAMP_MAX_VALUE is the maximum value for any Beam timestamp. There is a ArithmeticException(The calculation caused an overflow) when use the Long.MAX_VALUE.,Move this check to the translator so it can throw before running.,"It can happen that elements processed inside this bundle set timer, so it is technically better to check this before firing any timer. In practice it probably doesn't matter, because DirectRunner currently apparently doesn't fix bundles with timers and bundles with elements.",I'm assuming this was a bug?
"@@ -81,7 +81,7 @@ feature 'LOA1 Single Sign On' do it 'user can view and confirm personal key during sign up', :js do allow(FeatureManagement).to receive(:prefill_otp_codes?).and_return(true) user = create(:user, :with_phone) - code = '1234' + code = 'ABC1-DEF2-GHI3-JKL4' stub_personal_key(user: user, code: code) loa1_sp_session ","Again, Poltergeist didn't catch the fact that this field has a regex pattern requirement.",you really can't just remove this parameter.,"Maybe. I know this is one of those tests that fails occasionally, but we're not just checking that the encrypted pii doesn't equal the unencrypted (simply JSON encoding the bundle of pii will pass the new tests).","Maybe. I know this is one of those tests that fails occasionally, but we're not just checking that the encrypted pii doesn't equal the unencrypted (simply JSON encoding the bundle of pii will pass the new tests).","these updates look awesome! I do think this method can be private, though..","these updates look awesome! I do think this method can be private, though..",What was the reason for changing this?,What was the reason for changing this?,Shouldn't the `serialVersionUID` be changed?,"Again, Poltergeist didn't catch the fact that this field has a regex pattern requirement.","This is how the phone number gets formatted in Chrome if you type in 4 digits, then select Morocco from the dropdown. This could be a bug. If you start typing more numbers, then the formatting fixes itself."
"@@ -1208,9 +1208,9 @@ def regularize(cov, info, mag=0.1, grad=0.1, eeg=0.1, exclude='bads', channel type separately. Special care is taken to keep the rank of the data constant. - Note. This function is kept for reasons of backwards-compatibility. - Please consider explicitly using the `method` parameter in - compute_covariance to directly combine estimation with regularization + **Note:** This function is kept for reasons of backward-compatibility. + Please consider explicitly using the ``method`` parameter in + `compute_covariance` to directly combine estimation with regularization in a data-driven fashion. Parameters ",maybe add a link to the FAQ section.,"Again, we should probably deprecate if we expect your methods to really be better.",We should add this warning to the top of doc string.,We should add this warning to the top of doc string.,Shouldn't these also default to `0.1` for consistency with other data channel types?,noise instead of nois ?,"It seems like having an SNR-based computation can still be useful. So we could keep both, and only allow one to be set. But if we really want to get rid of it, we should explicitly provide the line(s) necessary to take an old SNR value and get the equivalent `nave` value to pass and put them in the `Notes`. It's actually useful pedagogically anyway because we can add that `SNR = ...` and so if you want a desired SNR, you pass `nave = ...`.",If None what is it that we do?,I guess we remove this 'cos there's no warning in `mne.cov.regularize` but I can't figure out why was there in the first place.,". Got %s"") % weight_norm",can you avoid the try except with if c in noise_cov.ch_names: noise_cov_idx.append(noise_cov.ch_names.index(c)) else: missing.append(c)
"@@ -828,13 +828,13 @@ func (b *cloudBackend) runEngineAction( <-displayDone scope.Close() // Don't take any cancellations anymore, we're shutting down. close(engineEvents) - close(displayEvents) close(displayDone) contract.IgnoreClose(manager) // Make sure that the goroutine writing to displayEvents and callerEventsOpt // has exited before proceeding <-eventsDone + close(displayEvents) status := apitype.UpdateStatusSucceeded if err != nil { ",shouldn't pulling on displayDone be done after pulling on eventsDone... ?,shouldn't pulling on displayDone be done after pulling on eventsDone... ?,shouldn't pulling on displayDone be done after pulling on eventsDone... ?,This doesn't appear to be ref'd. Do we need it?,This doesn't appear to be ref'd. Do we need it?,This doesn't appear to be ref'd. Do we need it?,can we renamed the field itself also to data? Otherwise we have inception below :-),"As an alternative, we could change this function to return an error.","As an alternative, we could change this function to return an error.","As an alternative, we could change this function to return an error.",Maybe wrap them?
"@@ -10,11 +10,16 @@ from six.moves import socketserver #type: ignore # pylint: disable=import-erro import josepy as jose import OpenSSL +import pytest from acme import errors from acme import test_util from acme.magic_typing import List # pylint: disable=unused-import, no-name-in-module +# turns all ResourceWarnings into errors for this module +if six.PY3: + pytestmark = pytest.mark.filterwarnings(""ignore::ResourceWarning"") # pragma: no cover + class SSLSocketAndProbeSNITest(unittest.TestCase): """"""Tests for acme.crypto_util.SSLSocket/probe_sni."""""" ",Doesn't this do the opposite and ignores all `ResourceWarnings` in this module?,"Maybe make private, as you want users to call the classmethod.",This seemed like a leak of the implementation.,"Return type should be `Iterable[None]` (or something with `Generator`). The function returns an iterable, the decorator turns it into a ContextManager.","Nit: ""in a given files."" seems redunant. Also omit period at the end for consistency?","Why `extra_message` defaults to `None`, other arguments do not. They are optional since the definition of `deprecated` and `experimental` passes these values. They can do the same for `extra_message`.",Should use try-finally,"Maybe make this a top level constant (i.e. a single item list or set), so later we can skip similar ""special"" modules?","For my eductation, does this line prepend logging messages with the filename?","Style nit - why use `list(...)` here rather than a comprehension `[...]`? Just curious, it's not that it matters.","Style nit - why use `list(...)` here rather than a comprehension `[...]`? Just curious, it's not that it matters."
"@@ -30,6 +30,9 @@ public interface MessageQueueWriter { void write(List<RawMessageEvent> entries) throws MessageQueueException; + default void preFlightCheck() throws PreflightCheckException { + } + @AutoValue abstract class Metrics { public static class Provider implements javax.inject.Provider<MessageQueueWriter.Metrics> { ","What do you think about moving this out of the interface? I think the implementation is inconsistent with other pre-flight checks. The MongoDB and Elasticsearch services don't implement checks this way, and potential plugin checks do neither.",just rename to `AsyncCleanerService`,some way to simplify this if-else into a single line. Can we use option instead of null?,Where does the passed in `actionMetadata` used ?,"rename `inFlightInstantTimestamp` to `triggeringInstantTime` here and metadata writer classes (not timestamp, its mean as logical time, our tests use 001, 002 and everything still works. )","Looks like we are leaking details here. Ideally, we should not expose details of extractor implementation here. Can we use the CheckpointableWatermark interface instead?",is this bootstrap multi writer safe? two scenarios to consider a) two writers (i.e delta sync and a spark job) trying to do this. b) Just a single writer - but with async compaction/clustering (who would also create write clients). I am not sure if metadata being enabled is the only flag to check here.,should we use a flag for metadata table enable/disable ? not just file listing,minor. {@code true} if commit is successful. {@code false} otherwise.,so this was not doing anything after we changed the class hierrarchy? and this PR is cleaning this up?,"these are duplicate code with SparkRDDWriteClient, we would move them to super class. cc @yihua is refactoring code"
"@@ -55,11 +55,11 @@ class Options: self.fast_parser = False self.incremental = False - def __eq__(self, other): + def __eq__(self, other: Any) -> bool: return self.__class__ == other.__class__ and self.__dict__ == other.__dict__ - def __ne__(self, other): + def __ne__(self, other: Any) -> bool: return not self == other - def __repr__(self): + def __repr__(self) -> str: return 'Options({})'.format(pprint.pformat(self.__dict__)) ",This should actually be `object`.,"Is this change required by Python3 migration or we are just fixing an omission that __hash__ was not previously defined, while __eq__ was?","extra parens? [if you meant this to be a tuple, you need a comma I think]",Make this **repr** (and **str** defaults to **repr**).,Actually I think we can use this `repr` regardless of `self.message`.,"This will raise errors if someone (for whatever reason) added an after-the-fact attribute to their state object that doesn't exist on the other one. I suggest `getattr(self, attr) == getattr(other, attr, object())` -- this will allow missing (or extra) attributes to be compared safely, and object() is never equal to anything else so it won't give false matches.","I'd rename this to something more general, since we don't really take advantage of the fact that these represent type constructors anywhere, and the concept of ""higher-kinded type"" sounds kind of complicated. My suggestion would be `special_form`, which can be applied for things other than type constructors that don't have meaningful types but that also aren't imprecisely typed.",File needs a `from builtins import str` import now.,I don't see where this flag is actually used.,"Is the idea here to early return? I believe `self._items == other._items` will already do this because it will resort to `dict'`s `__eq__` implementation, which is already highly optimized. NB that this `__eq__` implementation is stricter than Twitter Commons. We enforce that it's the same class, e.g. `OrderedSet != FrozenOrderedSet`. This is to ensure that we do sane things with the engine and to mirror how in the stdlib `tuple != list`.","the docstring says that a sequence is returned so I'd write it as `def mangling_args(self) -> pt.Tuple[str, pt.Sequence[pt.Any]]:` In fact, there's one case where a list is returned (not a string)."
"@@ -303,7 +303,7 @@ feature 'Sign Up', devise: true do # When I resend confirmation instructions to an existing user # Then the user does not receive an email context 'confirmation instructions sent to existing user', email: true do - it 'does not send an email to the existing user' do + xit 'does not send an email to the existing user' do user = create(:user) visit '/' ","this 'resend email confirmation' link is not currently in designs, hence the removal -- will discuss with ryan t and figure out where we can slide it...","this 'resend email confirmation' link is not currently in designs, hence the removal -- will discuss with ryan t and figure out where we can slide it...",Where does `@ raw_confirmation_token` get set? Where does `generate_confirmation_token!` come from? Devise?,Where does `@ raw_confirmation_token` get set? Where does `generate_confirmation_token!` come from? Devise?,"This (and all ""community""-related `notify_mailer_spec` tests) is failing because `email[""from""].value` returns `DEV (local) Community`, but I changed the value of `expected_from` to _not_ include the appended `Community` and I cannot figure out why `.value` still returns it _with_ the appended `Community` in the test. After looking into the mailer-related code and throwing `binding.pry`s in, I was unable to trace this `.value` back to anything that stood out as the culprit. Am I overthinking this? Should `Community` still remain appended in the spec?    ",we could also do a batch job in bulk but this appears to be a safer option,we could also do a batch job in bulk but this appears to be a safer option,"@djuber Sorry for the ping on an already merged PR. Personally, I don't find this extra method in `User` adds much (if anything) in terms of readability and `User` is big enough as is, how do you feel about removing this again?",I would rather see the user returned from `sign_up_and_2fa_user`,I would rather see the user returned from `sign_up_and_2fa_user`,"I usually prefer let to before :all , that hook is trouble"
"@@ -94,6 +94,10 @@ class Dataset: meta_name = self._config.get('dataset_meta') if meta_name: meta_name = Path(meta_name) + print_info(""{dataset_name} dataset metadata will be saved to {file}"".format( + dataset_name=self._config['name'], file=meta_name)) + print_info('Converted annotation for {dataset_name} dataset will be saved to {file}'.format( + dataset_name=self._config['name'], file=Path(annotation_name))) save_annotation(annotation, meta, Path(annotation_name), meta_name) self._annotation = annotation ","Do you check path representation, when you print it? If I not mistaken, it will be printed like PosixPath('path')","Do you check path representation, when you print it? If I not mistaken, it will be printed like PosixPath('path')",why do you need sometimes to do more than just updating the docstring?,"Might be nicer to keep RunInfo simple, and move this to the caller, which already knows when to do this eval, instead of having to know about this magic key string here?","So this option lets user print the plot as a text to stdout. So, plot by default logs plot location to stdout. When using `--stdout` option, it is the plot file content that will be displayed on stdout.","Not sure WHY we resolve symlinks here, but I left it for historical reasons","Maybe let's word this as `Output directory for the profiler. This is only used when the profiler was enabled when the trace was started. In that case, if there is a logdir-based default SummaryWriter, this defaults to the same directory, but otherwise the argument must be passed.`",Now also includes this to fix the missing `...` from channel name listing.,Shouldn't this be an error. It failed to do it's main task.,"I think it's also going to print Batchsize number times. can you add a ""if shared is None"" protection. Also I don't think it will handle valid:stream right but that's unusual in fromfile anyway.",now it's an error while it was just a warning. Can it risk breaking code that was running before?
"@@ -43,10 +43,17 @@ class Package extends BasePackage protected $stability; protected $notificationUrl; + /** + * @var Link[] + */ protected $requires = array(); protected $conflicts = array(); protected $provides = array(); protected $replaces = array(); + + /** + * @var Link[] + */ protected $devRequires = array(); protected $suggests = array(); protected $autoload = array(); ","this should also be done for other properties (conflicts, provides and replaces are also package links)","should be added for conflicts, provides and replaces too","I suggest making new properties private to make maintenance easier regarding BC (this will not be an issue for usage anyway, as they have public getters and setters)",Could be made `array[]` too I suppose.. it's not much info but it's something :),"repositories are root-only, so they don't make sense in this interface IMO",why not using `$this->packages[$package->getUniqueName()] = $package;` ? I find it more readable than using += for arrays (which is never used in the codebase AFAIK),"`BasePackage&PackageInterface` is just `BasePackage`, given that `BasePackage` implements the interface (and so this can be `@return BasePackage[]`",I can fix parseStability in composer/semver quickly,"I feel like I am not getting through today :p What I mean is that the three lines above here, are used below at line 52 inside initialize(). So these 3 lines need to happen before the parent constructor is called and therefore initialize is triggered. I don't care how $overrides is initialized to an array in the first place :)",There is also an optional `role`,Please always use `{` and `}` to wrap foreach bodies (same for ifs btw). It avoids problems later.
"@@ -113,6 +113,11 @@ public class RegisterIsoCmd extends BaseCmd { description = ""true if ISO should bypass Secondary Storage and be downloaded to Primary Storage on deployment"") private Boolean directDownload; + @Parameter(name = ApiConstants.PASSWORD_ENABLED, + type = CommandType.BOOLEAN, + description = ""true if password reset feature is supported; default is false"") + private Boolean passwordEnabled; + ///////////////////////////////////////////////////// /////////////////// Accessors /////////////////////// ///////////////////////////////////////////////////// ",@anuragaw let's export this via the template response (listIsos response should return this key) and we're golden!,"I would prefer the word ""current"" instead of ""old*",Looked tricky due to the historical confusion over the attribute name: `defaultValue` vs. `defaultValueAsSecret`.,Remove this setting and make this the default behavior.,commit message: `Add ExternalAuthorizert to cli` -> `Add ExternalAuthorizer to cli` Why `Authorizer`? in code used `Authentication`,The property descriptor definition seems to be the same as in `AzureStorageUtils`. The same descriptors could be used here for the Account Key and SAS Token (maybe for Endpoint Override too).,Rename to `includeServerIpAddress` or something similar,You want to move this to `ApiConstants....`,This creates a deprecation warning.,Const already available under CasProtocolConstants,"No objections, but why the name change?"
"@@ -710,6 +710,8 @@ redo_accept: X509_free(signer); X509_STORE_free(store); X509_VERIFY_PARAM_free(vpm); + if (rsign_sigopts != NULL) + sk_OPENSSL_STRING_free(rsign_sigopts); EVP_PKEY_free(key); EVP_PKEY_free(rkey); X509_free(cert); ",The NULL check isn't necesary.,You probably want to return 0 in case X509_self_signed returns negative,this fix is wrong since the `pop_free` function checks for a NULL stack.,"Since you changed indentation for this kind of continuation line elsewhere, you might as well do it here too ;-)",Probably should call SSLerr here?,I changed this to SSL_IS_TLS13(s),The NULL check here isn't useful.,"Style nit: The body of this ""if"" should have {}, because the else does.",Actually.....can we remove this run once altogether now?,_deactivated_ instead of _inactivated_? It could also be _made inactive_.,Why these dont do a NULL check internally I do not know
"@@ -3,6 +3,8 @@ # # SPDX-License-Identifier: (Apache-2.0 OR MIT) +from spack import * + class PyGrpcio(PythonPackage): """"""HTTP/2-based RPC framework."""""" ",You'll need another blank line after this to get the flake8 and isort checks to pass.,drive by? Not sure if this is a problem from our style guides (I would assume not given that nothing failed)?,is there a pypi.io download available? If so that one is preferred. Github archives are not necessarily hash stable,According to flake this import is not used,This could be made much more specific. The next release will likely support 2.7 and 3.5-3.10. Right now we support 2.6-2.7 and 3.5-3.9.,"You can remove this line, it's already added by PythonPackage","Since you're making such large changes, do you think its worth making this an `AutoToolsPackage` now?",please use a pypi.io url. See e.g. `py-numpy` for how to construct the URL,"Where do you see this? Also, you're missing a dep on setuptools and possible setuptools_scm",flake is complaining about this unused import,Missing dependency on `py-packaging`.
"@@ -4381,9 +4381,9 @@ class ConfigProviders(Config): curProvObj = sorted_providers[curProvider] curProvObj.enabled = curEnabled if curEnabled: - providers_reordered.insert(0, curProvider) + enabled_providers.append(curProvider) else: - providers_reordered.append(curProvider) + disabled_providers.append(curProvider) except: continue ",@echel0n this line means that providers which a lower preference become the most preferred when saving providers.,Nitpicking: This will also emit a signal if the setEnabled didn't actually change (it was true and it's set to true again),"This is still running thousands of times for a medium size graph. I would try to define the DepCppInfo() object just once for each conanfile. It can be defined before calling this ``update()`` method, maybe in the ``_propagate_info()`` one, as a conanfile private object (initially None)","Wait, what? :O Why do you want plugins to be reversed alphabetical order? BTW, `prepared.values()` returns stuff in random order, so this makes it reverse random order. Also, if we really really really want to do reverse alphabetical order (which doesn't make any sense to me), unit tests are missing.","what about this? Also, is legendastv missing here?",Perhaps something like: Subsequently `dequeue` and `dequeue_many` operations that would otherwise block waiting for more elements (if `close` hadn't been called) will now fail immediately. will make it clearer.,"No need for quotes here, I think just plain True reads more clearly as a Python literal",I am curious why this is not just a property?,This line is no longer needed.,You could undo this quote change but I don't feel strongly,Using an `assert` for something like this isn't that friendly. Should probably actually have an error message.
"@@ -70,7 +70,7 @@ final class PageTrashSubscriber implements EventSubscriberInterface return; } - $this->trashManager->store(BasePageDocument::RESOURCE_KEY, $event->getDocument()); + $this->trashManager->store(BasePageDocument::RESOURCE_KEY, $document); $this->hasPendingTrashItem = true; } ",Can you describe this change?,@dantleech do you have a better idea here? we should load the the url in the original locale! /cc @danrot,this have also to be done in the ArticleBundle - can we maybe add this behaviour to the RouteBundle?,Then return `false`?  ,Shouldn't this also be `LocalizedAuthorBehavior`?,Should be reverted I guess,please adjust this in the `Sulu\Bundle\RouteBundle\Routing\RouteProvider` too,Maybe we can have a `get_class` for the manager registry instead of `$orm`?,"@michaelandrepearce - So because of this line here we can't really default the persistentSize to -1, it needs to be 0. This call here will store a new PageCountRecordInc() record to the journal with a negative count and negative size on message ack to decrement the counters. Because of this a negative can actually be a valid value and really 0 should mean not set (we should never have a message size of 0)",As adding `?int` also to the interface is a little bc break I also did add a default value for the userId,is the variable really needed?
"@@ -134,14 +134,14 @@ vos_imem_strts_create(struct vos_imem_strts *imem_inst) rc = d_uhash_create(0 /* no locking */, VOS_POOL_HHASH_BITS, &imem_inst->vis_pool_hhash); if (rc) { - D_ERROR(""Error in creating POOL ref hash: %d\n"", rc); + D_ERROR(""Error in creating POOL ref hash: ""DF_RC""\n"", DP_RC(rc)); goto failed; } rc = d_uhash_create(D_HASH_FT_EPHEMERAL, VOS_CONT_HHASH_BITS, &imem_inst->vis_cont_hhash); if (rc) { - D_ERROR(""Error in creating CONT ref hash: %d\n"", rc); + D_ERROR(""Error in creating CONT ref hash: ""DF_RC""\n"", DP_RC(rc)); goto failed; } ",(style) line over 80 characters,"Generally, if a function like ds_pool_find_bylabel returns an error, its caller is not expected to look at pool_uuid and *svc_ranks. So we should free ranks before returning the -DER_INVAL. E.g., something like rc = uuid_parse(...); if (rc != 0) { ... D_FREE(*svc_ranks); D_GOTO(...); } Additionally, is -DER_INVAL really appropriate? The caller hasn't specified any invalid argument in this case; it's the control plane supplying an invalid response...","Possible change, but very minor, up to you. Suggest defining a new label out_svc just before the existing pool_svc_put_leader() call at the end of the function, and changing the D_GOTO here to specify out_svc.",(style) line over 80 characters,"A bit worried... If VOS_OF_REPLAY_PC is set, we should skip all MVCC checks. Does this here implies that we are performing wcheck before for rebuild I/Os? Does it work because for rebuild I/Os, we must have bound == epoch?","(style) return is not a function, parentheses are not required",I have a VOS_TX_LOG_* that essentially does these checks...perhaps we could do something generic like that here to avoid the code duplication,(style) 'COO' may be misspelled - perhaps 'COUP'?,(style) line over 80 characters,(style) line over 80 characters,(style) line over 80 characters
"@@ -74,7 +74,10 @@ public abstract class BaseTopNAlgorithm<DimValSelector, DimValAggregateStore, Pa { boolean hasDimValSelector = (dimValSelector != null); - final int cardinality = params.getCardinality(); + int cardinality = params.getCardinality(); + if (cardinality < 0) { + cardinality = Integer.MAX_VALUE; + } int numProcessed = 0; while (numProcessed < cardinality) { final int numToProcess; ","Why this change should be a part of this PR? cardinality < 0 probably means that completely different approach should be taken to compute topN, setting just to `Integer.MAX_VALUE` may result in a lot of excessive work and allocations in `run()` method.","This should still be `maxId`. The selector should act as if it's reading a snapshot of the column that existed at the time the selector was created. So, `getValueCardinality` should be frozen to the snapshot.",nit: I wish someday we could remove duplicate static values for this..,"Related to some change above, not sure this should be a part of this PR","Similar here, is this really necessary? If so it seems suspicious.","this breaks contract of getValueCardinality(), this should return cardinality ""after"" filtering.","this isn't used in any tests, does it need the expanded scope?",let's add a message to getFloat as well,From Line 191 to Line 198 duplicates with From Line 170 to Line 179. Please extract as a method.,"this breaks contract of getValueCardinality(), this should return cardinality ""after"" filtering.",That's some crazy   going on here  
"@@ -1,3 +1,15 @@ +''' A categorical bar chart illustrating the use of `factor_cmap <factor_cmap>`_ to associate colors from a palette +with categories. + +.. rubric:: Details + +:bokeh APIs: :func:`~bokeh.plotting.Figure.vbar`, :func:`~bokeh.transform.factor_cmap` +:references: :ref:`userguide_categorical_bars` +:keywords: bar, vbar, legend, factor_cmap, palette + +| + +''' from bokeh.io import output_file, show from bokeh.models import ColumnDataSource from bokeh.palettes import Spectral6 ","@hyles-lineata, what's this marker for?","""shading"" seems to me an uncommon wording in this context. Maybe use ""showing""?",This leaves out the best part about the linked brushing! Take it for a test run with `python examples/plotting/file/linked_brushing.py`,This change seems like it needs to be reverted?,For backwards compatibility the default should be `DEFAULT_TOOlS`.,line is too long (max 165),"moving this up from old line 372, otherwise `labels[n]` on next line fails when `labels` is `None`","I really don't like `xyvalues` either. It looks unusual, it has too many syllables. I'd _really_ like to call these something else, everywhere. Even just generic `data` would be better.","There are two other occurrences in the file, can you fix those as well?","Why is the type check necessary? It's only gonna be in _DATA_CH_TYPES_SPLIT if it's a str anyways, and if it's not a str, it'll simply return false right? And then you can drop 1878 and just have: `if title is None and picks in _DATA_CH_TYPES_SPLIT:`","as @kdodia mentioned before, maybe it is better to add this to the `__init__`, again something to fix later..."
"@@ -97,8 +97,8 @@ define([ }); } - var vertexShaderText = vertexShaderSource.createCombinedVertexShader(); - var fragmentShaderText = fragmentShaderSource.createCombinedFragmentShader(); + var vertexShaderText = vertexShaderSource.createCombinedVertexShader(this._context.webgl2); + var fragmentShaderText = fragmentShaderSource.createCombinedFragmentShader(this._context.webgl2); var keyword = vertexShaderText + fragmentShaderText + JSON.stringify(attributeLocations); var cachedShader; ",It is slightly cleaner to just pass `context` through and only access `context.webgl2` in `combineShader`. Also this lets us access any other properties of `context` in the future.,"As discussed offline, since only `GLSLModernizer.glslModernizeShaderText` is the only one used now, `GLSLModernizer.js` should just be `glslModernizeShaderText.js`. The last argument can also be removed too then.",Turns these 3 lines into a single line.,This should be `{String}`,This is a bit shady. What is the intension of this test? Perhaps just removing `shaderProgram : sp` is OK?,"To reduce clutter, create a `mockContext` variable at the top instead and pass that to each `createCombinedVertexShader` call.","the string literal needs to be identical to experiment ID you defined in `experiments.js`. So, `'move-context-to-name'` => `'3p-frame-context-in-name'`",should this be returning the result of the assign?,It didn't seem a straightforward path to pass applyPush through from the central body so have done this for now.,Can you add doc for these new public functions?,suggested naming: '3p-iframe-context-in-name'
"@@ -28,15 +28,10 @@ import org.mockito.junit.jupiter.MockitoExtension; class SwingActionTest { private static final Object VALUE = new Object(); - private static final Runnable RUNNABLE_THROWING_EXCEPTION = - () -> { - throw new IllegalStateException(); - }; + private static Object throwException() { + throw new IllegalStateException(); + } - private static final Supplier<?> SUPPLIER_THROWING_EXCEPTION = - () -> { - throw new IllegalStateException(); - }; @Mock private Runnable action; @Mock private ActionEvent event; @Mock private ActionListener listener; ",Any thoughts to inline this directly? I think that might be a bit more direct.,Let's get rid of this unnecessary import.,Pls use `org.jboss.protean.arc.processor.DotNames.create(Class<?>)` instead - this constructs a componentized `DotName` which is more efficient when comparing names from an index.,@kezhenxu94 I think this change is not correct and it should always call `target.addSuppressed(...)`. Please fix,Let's suppress the other warnings rather than suppressing unused - those warnings better indicate the problem here.,Should mention BlockHound directly IMO,"I noticed you've been including static imports below regular imports lately. It's not a big deal, but for consistency, can we keep them above from now on? (no need to change this).",why do the try/catch at all?,Is the static import possible?,Define constants in upper case,message starting with can be validated
"@@ -237,7 +237,13 @@ class ChannelGraph(object): if not valid_timeout: continue - yield Route(path, channel) + if channel.network_state == NODE_NETWORK_UNKNOWN: + online_nodes.append(Route(path, channel)) + + if channel.network_state == NODE_NETWORK_REACHABLE: + unknown_nodes.append(Route(path, channel)) + + return online_nodes + unknown_nodes def has_path(self, source_address, target_address): """""" True if there is a connecting path regardless of the number of hops. """""" ","Here it seems to me that it should be the other way around. If the `state` is `UNKNOWN` then it should be added to `unknown_nodes` and if `REACHABLE` to `online_nodes`, right?",I thought we had agreed to have list initialization with the `list()` keyword.,Don't really get this todo. Isn't what this if statement doing checking both payer and payee?,should there be any invariant checks/try-excepts here?,This ain't work just like this and is responsible for the errors in the CI. The tests failing include direct payments which did not need (and dont have) PFS config set. Now direct payments need to communicate to the PFS and thus need PFS config to be set.,The return type is `Iterable` in this case.,The return type is `Iterable` in this case.,"Please, fix the log message",Perhaps change the `isactive` to `cantransfer` ?,"> modify this list in-place this sounds dangerous in regards to WAL, however I can not see this through yet.",Please make this non optional
"@@ -126,7 +126,11 @@ func sendConfigToChannel(configurationChan chan<- types.ConfigMessage, configura } func loadFileConfig(filename string) (*types.Configuration, error) { - configuration := new(types.Configuration) + configuration := &types.Configuration{ + Frontends: make(map[string]*types.Frontend), + Backends: make(map[string]*types.Backend), + TLSConfiguration: make([]*tls.Configuration, 0), + } if _, err := toml.DecodeFile(filename, configuration); err != nil { return nil, fmt.Errorf(""error reading configuration file: %s"", err) } ",not needed because it's not a pointer on a slice.,"I have a mental block on what action I should be taking with the errors I am currently ignoring. (Originally we were creating a new AutomateConfig and setting, instead of overriding, exactly the same values in the struct.)",How about: `TLSConfig contains TLS settings required to connect to the docker daemon via TCP` ?,Do we really need to export this setting? Looks like it is only needed for internal testing.,"Can you add this change to some other packages, please? - `libbeat/output/elasticsearch` - `metricbeat/helper`",why you have remove this line?,"I see that this in the MetricSet, but do we ever need it outside the New part? It seems to be all in the handle/query anyways?","Why create `cache.TTLString` for each key, instead of use only 1 `cache.TTLString` for all keys?",not supported now?,"do these need annotations (`config:""init""` etc)?","As you don't use receiver, you can use only a func instead of a method"
"@@ -935,6 +935,11 @@ function elgg_view_entity_icon(ElggEntity $entity, $size = 'medium', $vars = arr * @return string/false Rendered annotation */ function elgg_view_annotation(ElggAnnotation $annotation, array $vars = array(), $bypass = true, $debug = false) { + + if (!$annotation || !($annotation instanceof ElggAnnotation)) { + return false; + } + global $autofeed; $autofeed = true; ",FYI with instanceof you don't need a separate check for bool/object. It doesn't throw errors.,"There was a conflict here, when I was doing cherry-picking. What should the bypass value be?","Since we didn't deprecate this, what do you think about logging an error if `func_num_args() > 3`?",@jdalsem @jeabakker Could you fix this in 2.3?,@iionly it's now public,"Good catch. A better solution is to move the original three lines at the bottom, at line 197. What do you think?",Why is this needed?,I believe we should log something here.,"I don't know why this was here, but it's wrong. We propagate changes after `ElggEntity::update()`","Good catch. Testing this would be easy, no?","If devs rewrite using elgg_list_entities(), will they need to call this?"
"@@ -62,6 +62,8 @@ namespace DynamoSandbox internal class Program { + private static readonly SettingsMigrationWindow migrationWindow = new SettingsMigrationWindow(); + private static void MakeStandaloneAndRun(string commandFilePath, out DynamoViewModel viewModel) { var geometryFactoryPath = string.Empty; ","This will be created regardless of migration actually happening, can we `new` only in `SettingsMigrationEventArgs.EventStatusType.Begin`?",You can now call `CloseMigrationWindow` here.,You should be able to make this `readonly` ensuring no one can accidentally modify it.,You should be able to make this `readonly` ensuring no one can accidentally modify it.,"I wonder if this should be throttled, have you tested with hundreds of nodes? How is performance?","Minor thing, but `workspaceModelIndex` would have made a better argument name.","So this is always 1 because the selection changing implies ""removing"" the previous item from the selection, right?",I was wondering if we can remove `activeStartPort` and use `activeStartPorts` even for single connection.,This declaration for `supportedLocale` can be moved into the `else` condition so that it won't be created unnecessarily.,We should also create a `/migrations` subdirectory.,"can we make it internal? Also please check all the other properties, I would like to avoid expose things in `public` if we can"
"@@ -374,3 +374,7 @@ def sum_order_totals(qs): zero = Money(0, currency=settings.DEFAULT_CURRENCY) taxed_zero = TaxedMoney(zero, zero) return sum([order.total for order in qs], taxed_zero) + + +def get_valid_shipping_methods(order: Order): + return applicable_shipping_methods(order, price=order.get_subtotal().gross.amount) ","What do we gain from having this function? It doesn't do any additional logic. Also, we already have a function with the same name for checkout.",It returns `Money | TaxedMoney` I think? We could hint it  ,It returns `Money | TaxedMoney` I think? We could hint it  ,"It seems that `get_valid_shipping_methods` could return a list, what do you think?","It seems that `get_valid_shipping_methods` could return a list, what do you think?",Maybe we could create a method for that or gh issue instead of `TODO`?,Maybe we could create a method for that or gh issue instead of `TODO`?,"What do we gain from having this function? It doesn't do any additional logic. Also, we already have a function with the same name for checkout.","AFAIR we wanted to delay calculations of new prices, I think this should be also done for shipping. This is why we have a flag expiration for prices. The calculation should be done, when storefront/dashboard calls an expected resolver that needs to have calculated prices.","AFAIR we wanted to delay calculations of new prices, I think this should be also done for shipping. This is why we have a flag expiration for prices. The calculation should be done, when storefront/dashboard calls an expected resolver that needs to have calculated prices.","We cannot calculate the shipping price and assign it to the `order.shipping_price` field before assigning `shipping_method`, because some plugins check if `shipping_method` is assigned to order (e.g. vatlayer). So if the shipping method is assigned to order for the first time, we will get the wrong `shipping_price` value."
"@@ -10,10 +10,11 @@ class PyGraphqlCore(PythonPackage): for APIs created by Facebook."""""" homepage = ""https://github.com/graphql-python/graphql-core"" - url = ""https://github.com/graphql-python/graphql-core/archive/v3.1.2.tar.gz"" + pypi = ""graphql-core/graphql-core-3.1.5.tar.gz"" - version('3.1.2', sha256='16087360d34f9cfa295b401fc17f9f11bcddef0e6e0dc5a694bbe2298b31949b') - version('3.0.5', sha256='88021f8b879f18cf56523644e51e1552b126a9ad9ab218f579bf503d236d5272') + version('3.1.2', sha256='c056424cbdaa0ff67446e4379772f43746bad50a44ec23d643b9bdcd052f5b3a') + version('3.0.5', sha256='51f7dab06b5035515b23984f6fcb677ed909b56c672152699cca32e03624992e') + version('2.3.2', sha256='aac46a9ac524c9855910c14c48fc5d60474def7f99fd10245e76608eba7af746') - depends_on('python@3.6:3.999', type=('build', 'run')) + depends_on('python@3.6:', type=('build', 'run')) depends_on('py-setuptools', type='build') ","Can you undo this change, the `setup.py` contains: `python_requires="">=3.6,<4""`",If you change from GitHub to PyPI you'll also need to update the checksums for older versions.,Can you add newer versions to the top? It helps to keep things in descending order.,"This is implied by the line above, you can remove this",@tgamblin Can you look at this? How do we depend on `py-enum34` for only certain versions of Python?,It looks like the URL for the version is the same as the URL. Are you sure the URL for version is necessary?,Can you run `spack info py-ply` and make sure this actually works? I'm wondering if it might suffer from #2737.,This new version requires `python@3.6:3`,Don't we typically keep the URL up-to-date with the most recent version?,I think this should have a build dep on setuptools,This could have stayed outside => no need to recompute it for each index
"@@ -76,6 +76,7 @@ struct obj_auxi_args { * ec_in_recov -- a EC recovery task */ uint32_t io_retry:1, + io_task_reinited:1, args_initialized:1, to_leader:1, spec_shard:1, ","Hmm, reinit is called somewhere else as well, but reinited = 1 is only set here. probably io_retried is clearer here. Or I miss sth?","Logically starting the RPC timer here before the ""WAITQ"" seems more reasonable to me. There might be additional queues at different layers and nodes along a path in the network. If this change is about high-priority RPCs like SWIM ones, I think those RPCs can jump the queue.","This is a very good change; the ""local"" name was rather ambiguous.","this seems wrong. The rpc should only be set if obj_req_create succeeds. In this case, it seems coverity would be complaining that rpc is not NULL initialized. In fact, this can make it worse because rpc could be garbage and therefore it will call crt_req_decref even if it fails.","So there is no way to validate whether aggregation is disabled on all servers (no APIs)? I feel sleep may not be the correct method. Anyway, I will let you decide... example: rc = set_pool_reclaim_strategy(); assert_int_equal(rc, 0) rc = verify_pool_reclaim_status(on all ranks); assert_int_equal(rc, 0)",(style) code indent should use tabs where possible,obj_rw_req_reassemb() has already done this? Does it mean user parameter will be replaced?,"Is it guaranteed sync_comp_cb() must be called to put the reference? It looks not that obvious to me, maybe the refcount get/put places needs be revised a bit to make it obvious.","seems to me that should assign the HLC for key query at client-side, if the req will send to multiple shards at client-side. but assign at client-side will with HLC out-of-sync problem with server-side modification HLC, need a kind of hlc sync mechanism. So before that is ready it looks fine to me to land this patch first.",(style) code indent should use tabs where possible,"It looks to me that bulk handle is per RPC stuff, so probably we'd keep it in shard layer? With EC introduced, single akey fetch/update split into fetch/update over multiple shards, and each shard will have it's own different bulk handle (not quite sure if my assumption on this EC io split is correct) I have no expertise on client io nor cart, so please correct me if I misunderstand anything important."
"@@ -7025,6 +7025,14 @@ spa_async_thread(void *arg) !spa_feature_is_enabled(dp->dp_spa, SPA_FEATURE_RESILVER_DEFER))) dsl_resilver_restart(dp, 0); + if (tasks & SPA_ASYNC_INITIALIZE_RESTART) { + mutex_enter(&spa_namespace_lock); + spa_config_enter(spa, SCL_CONFIG, FTAG, RW_READER); + vdev_initialize_restart(spa->spa_root_vdev); + spa_config_exit(spa, SCL_CONFIG, FTAG); + mutex_exit(&spa_namespace_lock); + } + /* * Let the world know that we're done. */ ",mismerge? this seems to be duplicate.,"Hmm, it looks like there's an old bug here which could result in a panic. The problem is that once we call `spa_vdev_exit` we are no long guaranteed that the `spa` can't go away. We really should have grabbed a reference on the `spa` to prior to calling `spa_vdev_exit`. Your proposed code change could suffer from the same problem.",This feels pretty heavy handed for a release build. I'd be tempted to wrap it in ZFS_DEBUG but there's no point diverging here unless it's actually a problem.,"Logically starting the RPC timer here before the ""WAITQ"" seems more reasonable to me. There might be additional queues at different layers and nodes along a path in the network. If this change is about high-priority RPCs like SWIM ones, I think those RPCs can jump the queue.",'Writer same' -> 'Writer at the same' ?,This could be implemented using a provider wide set_params...,spaces around the text: `/* don't wait for client input in the non-interactive mode */`,is this intentional change to start tracking timeout from the moment rpc was submitted by user vs rpc being on a wire?,How about a macro/helper-function like: boolean_t spa_should_defer_resilver(spa)? This would check if the feature was set and then look to see if we are currently resilvering. This could be used in at least 4 places in the code.,Isn't it simpler to ifdef KERNEL && APPLE to get rid of empty stubs? Or was it decided against that?,The same short circuiting as used in rand_unix would be beneficial here too. The source ordering here is good.
"@@ -305,9 +305,13 @@ class Checkout: self._add_to_user_address_book( self.billing_address, is_billing=True) - shipping_price = ( - self.shipping_method.get_total() if self.shipping_method - else Price(0, currency=settings.DEFAULT_CURRENCY)) + if self.shipping_method: + shipping_price = self.shipping_method.get_total_price() + else: + shipping_price = TaxedMoney( + net=Money(0, currency=settings.DEFAULT_CURRENCY), + gross=Money(0, currency=settings.DEFAULT_CURRENCY)) + order_data = { 'language_code': get_language(), 'billing_address': billing_address, ",Why do we intentionally discard the net price here?,"As it is not a type itself but a convertion, wouldn't that be better to add at least a verb? > get_display_price Or something like this?","As it is not a type itself but a convertion, wouldn't that be better to add at least a verb? > get_display_price Or something like this?",Why do we intentionally discard the net price here?,I'm not sure if this is a good solution for the situation when we haven't shipping price. Maby we shouldn't allow making shipping available without price?,I'm not sure if this is a good solution for the situation when we haven't shipping price. Maby we shouldn't allow making shipping available without price?,"Maciek suggested renaming it, let's look for other options / ask others for feedback.","Maciek suggested renaming it, let's look for other options / ask others for feedback.","I think this should be moved to some ""order"" module since this one is for checkout.","I think this should be moved to some ""order"" module since this one is for checkout.","`calulate_checkout_total` and `checkout_total` sounds very similar, how should I know which one to use and what's the difference between them?"
"@@ -74,7 +74,7 @@ ica.apply(epochs) # clean data, default in place evoked = [epochs[k].average() for k in event_ids] -contrast = evoked[1] - evoked[0] +contrast = combine_evoked(evoked, weights=[-1, 1]) # Faces - scrambled evoked.append(contrast) ","actually, I find the original code much clearer in this instance.",This reads too scary. I think we should have a nice friendly text for people who just want to see an Oddball difference wave.,can you explicit the weighting parameter and add a note eg reuse the blob of text that you deleted from pitfalls.rst?,reorder is not necessary,"change ""using either equivalent call""",why this new log_objective param ?,why did you need to change this?,Shouldn't we at least print a warning related to the exception rather than just ignoring it?,"could you explain more about this change? `weight` can be obtained from `wrapper`, why pass it again?","could you explain more about this change? `weight` can be obtained from `wrapper`, why pass it again?","Note, you can always do `all_evokeds['left', 'auditory']` (order doesn't matter)."
"@@ -80,6 +80,17 @@ def _raise_did_you_mean(address_family: AddressFamily, name: str, source=None) - raise resolve_error from source raise resolve_error +@rule +async def find_build_file(address: Address) -> BuildFileAddress: + address_family = await Get[AddressFamily](Dir(address.spec_path)) + if address not in address_family.addressables: + _raise_did_you_mean(address_family=address_family, name=address.target_name) + return next( + build_file_address + for build_file_address in address_family.addressables.keys() + if build_file_address == address + ) + @rule async def hydrate_struct(address_mapper: AddressMapper, address: Address) -> HydratedStruct: ","So, this works, but we should take a look at how it is being used, and see whether it should be batched. The parsing will be memoized obviously, but each usage is O(N) in the number of targets in a directory.","This is prework for the next step of the project: no longer storing `BuildFileAddress` in `HydratedTarget`. Once we make that change, we need this rule so that we have a way to go from `Address -> BuildFileAddress`.",+1 See #6657 as well.,"should this stay marked `:API: public` until it's removal? technically, it's still public - just deprecated - until it's removed entirely.",We should maybe open a followup ticket with a short blurb describing the open question here (and referencing the doc for more info).,Maybe update the doc string a little?,The below changes are only renames to make clear that this is a `BFA` rather than `Address`. Will make the follow up easier to understand.,"This is for a more precise type hint. The superclass `Struct` returns an `Optional[BuildFIleAddress]`, whereas here we know that it is always present so can remove the `Optional` part.","I'm not sure how to deprecate this because it's an abstract method. If we keep it as `abstractmethod`, then any subclass _must_ implement the method, which we don't want. I think the solution is to remove `abstractmethod` so that subclasses no longer need to define this. Where I'm unclear is if the below `warn_or_error()` will actually do anything because no subclass calls `super().inject_specs_closure`.","This... doesn't quite make sense to me. It feels like it will do the wrong thing if a target depends on multiple thrift libraries, since it's not actually matching the package name?",This isn't a specific enough match... an exception could be thrown for multiple reasons. Might need to do an exception type match here?
"@@ -242,14 +242,14 @@ void menu_temperature() { EDIT_ITEM_FAST(percent, MSG_EXTRA_FAN_SPEED_1, &thermalManager.new_fan_speed[0], 3, 255); #endif #endif - #if HAS_FAN1 || (ENABLED(SINGLENOZZLE) && EXTRUDERS > 1) + #if HAS_FAN1 || (DISABLED(SINGLENOZZLE) && EXTRUDERS > 1) editable.uint8 = thermalManager.fan_speed[1]; EDIT_ITEM_FAST(percent, MSG_FAN_SPEED_2, &editable.uint8, 0, 255, [](){ thermalManager.set_fan_speed(1, editable.uint8); }); #if ENABLED(EXTRA_FAN_SPEED) EDIT_ITEM_FAST(percent, MSG_EXTRA_FAN_SPEED_2, &thermalManager.new_fan_speed[1], 3, 255); #endif #endif - #if HAS_FAN2 || (ENABLED(SINGLENOZZLE) && EXTRUDERS > 2) + #if HAS_FAN2 || (DISABLED(SINGLENOZZLE) && EXTRUDERS > 2) editable.uint8 = thermalManager.fan_speed[2]; EDIT_ITEM_FAST(percent, MSG_FAN_SPEED_3, &editable.uint8, 0, 255, [](){ thermalManager.set_fan_speed(2, editable.uint8); }); #if ENABLED(EXTRA_FAN_SPEED) ",This condition doesn't get rid of the issue that `HAS_FAN1` is made irrelevant. I will look into the back-history of this code to see why it is shaped the way it is.,~~Not sure it's correct. Maybe must be added a new case. When no HAS_AUTO_FAN it should be 255~~ Edit: Checked code. _AUTOFAN_SPEED is only used when HAS_AUTO_FAN so your change is correct,"This is not compatible with translations, because different languages use different word orders.",Does enableFeaturesBased need to be added in the whitelist? enableUserRolesBasedOnToken is added already.,"You can probably condense all of these using the `TERN` macros which are used throughout Marlin. There are a few variations of the `TERN` macros. I believe this is the version you will want to use. `TERN_(SOFTWARE_DRIVER_ENABLE, planner.axis_enabled.set(false, false, false));` I believe this will work, although you _might_ need to also use `ENABLED` in there. `TERN_(ENABLED(SOFTWARE_DRIVER_ENABLE), planner.axis_enabled.set(false, false, false));`",Seems the line wrap is unnecessary,Seems the line wrap is unnecessary,"This is not compatible with translations, because different languages use different word orders.",This file needs to be renamed.,"At some point, someone will have to explain how F4 is the same as 0x10001...",Why are you removing the blank line between PCH/module header and device headers?
"@@ -208,8 +208,8 @@ func (cfg *AutoScalingConfig) RegisterFlags(argPrefix string, f *flag.FlagSet) { f.StringVar(&cfg.RoleARN, argPrefix+"".role-arn"", """", ""AWS AutoScaling role ARN"") f.Int64Var(&cfg.MinCapacity, argPrefix+"".min-capacity"", 3000, ""DynamoDB minimum provision capacity."") f.Int64Var(&cfg.MaxCapacity, argPrefix+"".max-capacity"", 6000, ""DynamoDB maximum provision capacity."") - f.Int64Var(&cfg.OutCooldown, argPrefix+"".out-cooldown"", 3000, ""DynamoDB minimum time between each autoscaling event that increases provision capacity."") - f.Int64Var(&cfg.InCooldown, argPrefix+"".in-cooldown"", 3000, ""DynamoDB minimum time between each autoscaling event that decreases provision capacity."") + f.Int64Var(&cfg.OutCooldown, argPrefix+"".out-cooldown"", 1800, ""DynamoDB minimum seconds between each autoscale up."") + f.Int64Var(&cfg.InCooldown, argPrefix+"".in-cooldown"", 1800, ""DynamoDB minimum seconds between each autoscale down."") f.Float64Var(&cfg.TargetValue, argPrefix+"".target-value"", 80, ""DynamoDB target ratio of consumed capacity to provisioned capacity."") } ","All usages of this are as a time.Duration, so perhaps we should make this a DurationVar?","We can extend the description to explain why would someone want to disable this, and that it's perhaps best used with disabled unregister?","The var name, flag name and description are too specific. When the flag is set, the compression is applied to all ingester traffic, not just sample pushes.","can we say ""during periodic cleanup"" ? First off I thought ""the cleanup period"" was maybe a period during shutdown when we clean up.","> 0 to disable I think it's not super clear that by ""disable"" it means ""disable the threshold so always query the store"". I would clarify it.",should probably say something in the PR description about upgrade procedure - need to enable the checks in the new distributor before upgrading the ingester,Should you make the default 6mins?,Should we break these two configs apart and have `querier.max-fetched-chunks-per-query` be it's own config option rather than having this config override `-store.query-chunk-limit.`?,"I would default to 1m, to have more accurate tracking (by default).","Given the flag description goes into the automatically generated doc, I would suggest to give a more descriptive information about it, explaining it's used by `-querier.max-concurrent` and to log queries that were executed while Cortex crashed.",We probably want to enforce that `FailoverTimeout > UpdateTimeout+UpdateTimeoutJitter` by at least `time.Second`. Check in `newClusterTracker` where we already enforce that `Failover > Update`.
"@@ -338,8 +338,11 @@ def compute_covariance(epochs, keep_sample_mean=True, tmin=None, tmax=None, cov : instance of Covariance The computed covariance. """""" + if not isinstance(epochs, list): - epochs = [epochs] + epochs = _unpack_epochs(epochs) + else: + epochs = reduce(add, [_unpack_epochs(epoch) for epoch in epochs]) # check for baseline correction for epochs_t in epochs: ",just to check would: sum([_unpack_epochs(epoch) for epoch in epochs]) work too?,maybe they are needed here as well,pretty sure `EpochsArray` is at the base level,Here you can see how you can easily tack things on the end of default docstrings.,in fact it was on purpose but the docstring was not correct. my feeling is that the automatic copy can be problematic for large epochs objects,I don't think you shouldn't have to have the `exclude` statement anymore. Shouldn't your interpolation function eliminate the channels from `bads`? Or maybe we want to leave them in so they are not used in inverses? I'm not sure...,"Also what I don't like about it is the fact that at least in python 3 the list comprehension would have created a new scope, preventing `e` from being available outside of it. Not sure if the codacy advice is so brilliant here. Exchanging such a simple list comprehension for a foor loop does not seem to be a good deal to me.",This reads too scary. I think we should have a nice friendly text for people who just want to see an Oddball difference wave.,this does an in-place modification of the `info`. Is this desired? `compute_covariance` should not change `epochs.info` IMO. It led me to a long debugging session with a colleague ...,"Not sure why these used to be in np.arrays. I'm pretty sure I wrote that line. In any case, it's not necessary, and elsewhere we assume it's going to be an int instead of an array, so I axed it.",Need to add to the docstring above
"@@ -80,8 +80,11 @@ public class AvroDataTranslator implements DataTranslator { private Iterable<String> names; - TypeNameGenerator() { - this(ImmutableList.of(KsqlConstants.AVRO_SCHEMA_FULL_NAME)); + TypeNameGenerator(final Map<String, String> properties) { + final String schemaFullName = properties.get(KsqlAvroTopicSerDe.AVRO_SCHEMA_FULL_NAME); + this.names = ImmutableList.of(schemaFullName == null + ? KsqlConstants.AVRO_SCHEMA_FULL_NAME : + StringUtil.cleanQuotes(schemaFullName)); } private TypeNameGenerator(final Iterable<String> names) { ",Can we rename `AVRO_SCHEMA_FULL_NAME` to `DEFAULT_AVRO_SCHEMA_FULL_NAME` please?,Should probably be removed as we _always_ want the full schema name to be configurable.,"Any reason not to just always add these? it's unlikely that they exist for `STRUCT`, `ARRAY` and `MAP` but technically not impossible (I think)","Would you mind moving this into the `DdlConfig` file, where the other `WITH(...)` clause property names live, please?","You can do static import directly in the ""Rename ..."" commit)","For my understanding, what would be the `dataSourceName` in a statement like `CREATE STREAM enriched_pv as SELECT users.userid AS userid, pageid, region FROM pageviews LEFT JOIN users ON pageviews.userid = users.userid;`","can we make this `final` and not re-assign it in the method? i.e., return from line 269",can we just use `KafkaStreams.State#valueOf` instead of this map?,nit: new line,"is this the same as what we previously used? I'm not finding `avro_schemas` in the older code, but if this is a regression, we should be restoring the existing behavior.",i realize you only copied this author specification from the original PR for these functions but i've stopped adding it for buit-lin ones as it seems to add little/no value there. We should probably try to be consistent about that and leave this for 3rd party authors.
"@@ -53,8 +53,9 @@ def export_products( def get_filename(model_name: str, file_type: str) -> str: - return ""{}_data_{}.{}"".format( - model_name, timezone.now().strftime(""%d_%m_%Y""), file_type + hash = secrets.token_hex(nbytes=3) + return ""{}_data_{}_{}.{}"".format( + model_name, timezone.now().strftime(""%d_%m_%Y_%H_%M_%S""), hash, file_type ) ",Are we sure that this will not return any forbidden characters for the path file?,Are we sure that this will not return any forbidden characters for the path file?,"Same here - we would normally expect this change to be reported to the distlib project, and vendor a fixed version when it's released.","Same here - we would normally expect this change to be reported to the distlib project, and vendor a fixed version when it's released.","We now have pretty similar code like that in api.models for ApiToken, accounts.utils regarding fxa and others, I wonder if we could move that out. On the other hand, we won't gain much so it's rather a nit rather than a requirement.",Remove redundant empty line.,I would remove this function and replace its usage with the builtin `filecmp` module,I think this is already written above,can we make this a single function instead of two?,Not needed anymore,The `bytes` is not necessary here
"@@ -47,15 +47,15 @@ func (c *console) Close() error { func (c *console) PublishEvent( s op.Signaler, opts outputs.Options, - event common.MapStr, + event outputs.Data, ) error { var jsonEvent []byte var err error if c.config.Pretty { - jsonEvent, err = json.MarshalIndent(event, """", "" "") + jsonEvent, err = json.MarshalIndent(event.Event, """", "" "") } else { - jsonEvent, err = json.Marshal(event) + jsonEvent, err = json.Marshal(event.Event) } if err != nil { logp.Err(""Fail to convert the event to JSON (%v): %#v"", err, event) ",can we renamed the field itself also to data? Otherwise we have inception below :-),Could existsNow be determined by looking at e? Then you wouldn't need the third param.,This log line has more parameters than arguments.,"Is this debug selector copied from somewhere else? It would be nice if it included `schema` in it, for better context",Does this mean we no longer store `deleted` timestamp? it should be removed from fields.yml if that's the case,another duplicate goto.,It would be nice if this check could be done once at initialization and then set the value to the default if it's empty. The usual pattern is to initialize the `JsonKey` value to its default value prior to unpacking the user's config; maybe that can be done in this case.,What if there is a `type` like we have in packetbeat? I think it is ok to just have it outside the meta info.,"Having the namespace of module and metricset here is critical to prevent namespace conflicts. This guarantees to no metricset can conflict with an other. In addition we move the ""burden"" of doing the namespacing correctly to the person implementing the metricset. -1 on doing this change.",does this compile?,This is a separate bug that prevented event type filtering from the UI.
"@@ -32,7 +32,7 @@ import games.strategy.triplea.util.Stopwatch; /** * A place to find images and map data for a ui. */ -public class UIContext extends AbstractUIContext implements IUIContext { +public class UIContext extends AbstractUIContext { protected MapData m_mapData; protected final TileImageFactory m_tileImageFactory = new TileImageFactory(); protected final UnitImageFactory m_unitImageFactory = new UnitImageFactory(); ","There are methods in IUIContext, no?",Could use some spaces between parameters. Also is the 'this' needed?,"@Override returning null usaully indicates an abstraction problem. It's not much of a surprise given headless vs headed was done in a massive hurry to get the bots up and running. In this case it seems like `getTerritoryEffectImageFactory` should only be a method on the `HeadedContext`, not the headless. If a caller is not aware of the difference, they can get a NPE. Seems like a caller of this code would need to know which instance type, so moving the method to the right instance type I suspect is appropriate and would avoid the error and abstraction problem.",We should have a unit type matcher that can accomplish this.,"I'm not sure if it's good practice to throw raw RuntimeExceptions. I'd rather throw IllegalState or IllegalArgument exception instead, but maybe that's just preference.","Why ""only""? What about `screenReaderDialog` or similar?","nit, FWIW, AFAIK, canonical optional usage could have this be inlined: mapData.getUnitColor(id.getName()).ifPresent( unitColor -> { final int brightness = mapData.getUnitBrightness(id.getName()); ImageTransformer.colorize(unitColor.get(), brightness, (BufferedImage) image); });","I'm still pretty concerned with the new MapData dependency being wired into the class. It strikes me as similar to the swing 'parent' component dependency that is wired throughout the codebase and we're having a lot of trouble now because of it. I don't think there is any better time than now to avoid the new dependency. It also would seem a lot cleaner to have a focused strategy object take its place and avoid adding more rendering code to unit image factory. The unit highlight is in the same league, but at least it does not introduce a very heavy, new dependency.",throws -> Throws,You might want to wrap this in a SoftReference. This way it still can be garbage collected when the machine absolutely requires some memory.,"So here we log the missing image if we try to draw the missing image on the map. Missing images can still be found by looking at the 'add units' screen in edit mode, or a purchase screen. Trying to place such a unit then yields the error message (and the game will continue running)"
"@@ -201,5 +201,12 @@ func ValidatePolicyConfig(config api.PolicyConfig) fielderrors.ValidationErrorLi func ValidateProjectRequestConfig(config api.ProjectRequestConfig) fielderrors.ValidationErrorList { allErrs := fielderrors.ValidationErrorList{} + if len(config.ProjectRequestTemplate) > 0 { + tokens := strings.Split(config.ProjectRequestTemplate, ""/"") + if len(tokens) != 2 { + allErrs = append(allErrs, fielderrors.NewFieldInvalid(""projectRequestTemplate"", config.ProjectRequestTemplate, ""must be in the form: namespace/templateName"")) + } + } + return allErrs } ","If ProjectRequestTemplate is required, shouldn't you throw an error if it's absent?","Please use `String#Equals(String, StringComparison)`","As for `diff_suppress_funcs.go`, I suggest renaming `validateCloudFormationTemplate` to `validateStringIsJsonOrYaml`.","Can you add ""name must be a valid subdomain"" message? We use in other places, so would be good to make it consistent.","If the API ordering of this attribute is not guaranteed when multiple modes are configured, we will likely need to change this to a `TypeSet`.",Invalid takes an additional argument (details about what is invalid about the value) you can actually copy the message from line 169/170 pretty much.,let's switch it to a field invalid error instead of a notfound error.,what does this do? Did I need it before and not realize it?,"Maybe a stupid question, but I was thought that stupid are only those questions that weren't asked ;) Is it possible to have edit rights on project but not on namespace?","i have to assume some new validation tests are in order using image-sourced buildconfigs, even if they are only valid ones.","is the case where webHook.SecretReference is non-nil and webHook.SecretReference.Name is an empty string possible / allowed? If not, TC also needed."
"@@ -101,6 +101,18 @@ def write_mrk(fname, points): raise ValueError(err) +def average_mrks(mrk, mrk2): + if isinstance(mrk, basestring): + mrk = read_mrk(mrk) + if isinstance(mrk2, basestring): + mrk2 = read_mrk(mrk2) + + np.testing.assert_array_equal(mrk.shape, mrk2.shape, + err_msg= 'Mismatch in the number of markers.') + mrk = (mrk+mrk2)/2 + return mrk + + def read_elp(fname): """"""ELP point extraction in Polhemus head space ",we never use np.testing outside of tests. Also shape are tuples so == works fine.,we don't `import mne` in the test files; just import the specific functions you need,"@t3on I don't know this code too much, but I think this is your answer -- extra points would be ignored (?).",why do you need this step?,"Since we have this assertion covered in the tests, let's remove it here.","Since we have this assertion covered in the tests, let's remove it here.","Why is test necessary? When I undo the changes to this test, i can't make it fail either error style.","It doesn't seem like this should need to be nested, does it actually need to be?",you remove this as it's not true anymore? or MNE will already give you a meaningful message?,To make this test pass I had to almost double the expected mean per class error. I don't like it but since this test probably wasn't run anywhere outside Arno's computer it is hard to say when did this happen. (I could `git bisect` it but I am not sure if there would be any benefit in knowing when did the error rate increased). If needed I can remove the commit that increased the `mpce` and hence make the test fail.,i guess you'd want to test this with an invalid pair too ...
"@@ -595,8 +595,6 @@ namespace System.ServiceModel.Syndication } } reader.MoveToElement(); - string localName = reader.LocalName; - string nameSpace = reader.NamespaceURI; string val = (kind == TextSyndicationContentKind.XHtml) ? reader.ReadInnerXml() : reader.ReadElementString(); TextSyndicationContent result = new TextSyndicationContent(val, kind); if (attrs != null) ","Do either LocalName or NamespaceURI have side-effects, e.g. advancing the reader, throwing exceptions if something couldn't be parsed, etc.?","Is it worth modifying the null check on name to also check that it isn't equivalent to l to XmlDictionaryString.Empty? If you do that, it might be worth checking `name.Value.Length != 0` as someone can make their own XmlDictionaryString with the empty string and then the equality comparison won't work with XmlDictionaryString.Empty",NIT: `ns` nullability shouldn't be applied for the abstract method?,"Not needed, I believe at this point attribute always have OwnerElement",On line 104: Method throws NullReferenceException as well if null TextWriter is passed.,`name` should be nullable on above method (line 563) also.,`namespaceURI` for all these methods most likely optional,"`public override void WriteStartAttribute(string prefix, string localName)` and overload might be worth filing a bug on NRE or at least TODO-NULLABLE",Seems `_xmlContext.defaultNamespace` should be nullable,not sure about here but similar API in XmlReader returns nullable,`name` should be nullable on above method (line 577) also.
"@@ -49,12 +49,16 @@ class SetPassword(CreateToken): token = graphene.String( description=""A one-time token required to set the password."", required=True ) + email = graphene.String(required=True) + password = graphene.String(required=True) class Meta: description = ( ""Sets the user's password from the token sent by email "" ""using the RequestPasswordReset mutation."" ) + error_type_class = AccountError + error_type_field = ""account_errors"" @classmethod def mutate(cls, root, info, **data): ",Where are the descriptions?  ,Where are the descriptions?  ,I think we can remove these fields (`user` and `account_errors`) because there are inherited from `CreateToken` mutation. We can move the description for `user` field to `CreateToken` mutation.,I think we can remove these fields (`user` and `account_errors`) because there are inherited from `CreateToken` mutation. We can move the description for `user` field to `CreateToken` mutation.,"Let's add some description here as well e.g. ""Informs whether users need to confirm their email address.""","Let's add some description here as well e.g. ""Informs whether users need to confirm their email address.""",Let's add `required=True` since this field will always return some boolean value and never a `null`.,Let's add `required=True` since this field will always return some boolean value and never a `null`.,"I would reword this a little bit. We could also provide an example here of expected format using the example.com domain. ""URL of a view where users should be redirected to reset the password. URL in RFC 1808 format e.g. <example>"" Ideally, we should have our own `URL` scalar that we could use across the entire API that would validate if provided URL is valid.","I would reword this a little bit. We could also provide an example here of expected format using the example.com domain. ""URL of a view where users should be redirected to reset the password. URL in RFC 1808 format e.g. <example>"" Ideally, we should have our own `URL` scalar that we could use across the entire API that would validate if provided URL is valid.","This function could be moved to `saleor/account/emails`. If we added the ability to trigger a password reset for customers from the dashboard, it could be reused. I would also add short docstring e.g. ""Trigger sending a password reset email for the given user."""
"@@ -1448,11 +1448,7 @@ class URL implements Serializable { return false; } URL other = (URL) obj; - if (host == null) { - if (other.host != null) { - return false; - } - } else if (!host.equals(other.host)) { + if(!StringUtils.isEquals(host, other.host)) { return false; } if (parameters == null) { ","what about this block, should we refactor at the same time?",Using `OriginalString` instead of `_string` makes this fast-path also work for Uris with non-ascii characters,"If the method is to be removed in the future, I would suggest annotate it with `@Deprecated` and direct users to the replacement in case that users want to use it","Here there was no cast to object, but you still made the change. What is the rule?",Similar question: is this really better?,I think Constants.LOCALHOST should be good and Constants.LOCALHOST_VALUE looks like extra here. What do you say?,"-1. I would rather remain the current implementation, or use a simplified version `i < j ? -1 : (i == j ? 0 : 1)` instead of calling Integer#compareTo","This is probably wrong / needs to take into account LTS backports (or as in this case, restricted security fixes). Add support for weekly / LTS tags separately?","We don't support HTTP/2 proxies, only HTTP/1. This path is for a HTTP proxy, which is used for non-HTTPS requests.",isn't it better to just initialize this inline and drop the if?,We typically attribute the parameter with `[NotNullWhen(true)]`.
"@@ -15,12 +15,12 @@ import ( // REST implements the RESTStorage interface in terms of an Registry. type REST struct { - registry Registry + client kclient.NamespaceInterface } -// NewStorage returns a new REST. -func NewREST(registry Registry) apiserver.RESTStorage { - return &REST{registry} +// NewREST returns a RESTStorage object that will work against Project resources +func NewREST(client kclient.NamespaceInterface) apiserver.RESTStorage { + return &REST{client: client} } // New returns a new Project for use with Create and Update. ",Another reason this has to be this way is that we have to run on kube directly - we should make a note somewhere that it's illegal to reference a kube registry from an openshift storage object.,"I really disagree with exposing the rest client this way (upstream does it as well, and I think it is wrong there to, and should be fixed, not copied)",Nit: Seems like this newline is intentional?,"This should work like `Minion` in upstream and not take a `namespace` here. We will list projects by membership, and not by `namespace`.",Please use `k8s.io/client-go/rest.AnonymousClientConfig`,you can avoid this global by passing the keystore to `NewAutodiscover`,Why did you duplicate this? They're already external,No else blocks when you return in the if.,Either move these into local variables when initializing the proxy listener or expose them with `ServiceEnv` getters (if you have other plans for these) - otherwise I don't see the point of having them here since they're only used in one place.,playing @sttts here: sort the imports :-),"Didn't know this already existed. It's wrong. There are N aliases for the registry and the admission plugin must recognize all of them. There should be a separate function for ""get me the default name to use for making references in the cluster"", but there are definitely cases where you need all the aliases and those aliases can change."
"@@ -190,10 +190,10 @@ export class AmpStoryAutoAds extends AMP.BaseElement { constructor(element) { super(element); - /** @private {?../../amp-story/0.1/amp-story.AmpStory} */ + /** @private {?../../amp-story/1.0/amp-story.AmpStory} */ this.ampStory_ = null; - /** @private {?../../amp-story/0.1/navigation-state.NavigationState} */ + /** @private {?../../amp-story/1.0/navigation-state.NavigationState} */ this.navigationState_ = null; /** @private {number} */ ",Remnant of moving from `0.1` to `1.0`? Is this change required as part of moving to a new Closure Compiler or just convenient to make in this PR?,"Nit: this is not necessary because it will short-circuit in other places when both are 0, but it's also fine to leave as is",does this mean the 8th page can be an ad?,`ampCarouselClassic1` thanks I hate it  ,Does it look more like a constant?,I don't think `amp-story-shopping` will need a storybook directory or file. I don't see any other `amp-story`-prefixed extensions that have a storybook directory,"Nit: constants should be uppercase, ie: `REWIND_TIMEOUT_MS`","let's be consistent about terminology here, i think this mean `viewed`?",jsdoc is on wrong line,"Could you confirm that the `renderStart` API is rolled out? When I try to test with your example, I couldn't receive the `render-start` message. Note that AMP runtime won't display an ad before that message is received or timeout.",+1 alphabetic order here as well.
"@@ -41,7 +41,7 @@ export function deepScan( startNode, callback, arg = undefined, - state = true, + state = /** @type {S} */ (/** @type {?} */ (true)), includeSelf = true ) { if (includeSelf) { ",fmi: did directly casting to `S` not work?,"I would have loved to just name this `features` but it is already taken where we use it to selectively disable features. For example, you would pass in `{ features: {table: false} }` to disable the table markdown engine. In my case, I only want the features which I pass in to be enabled so I can pick and choose what I want to enable.",Better terminology for these...?,just curious: is it a public API for PWA? or is it just for debugging?,looks like it can be const.,"This has one bug + one thing that will come back to bite us in the future: 1. it is creating a new ""throttler"" everything single time, and executing it right away. If `setHistoryState` is called again right away, a new ""throttler"" will be created and triggered, when it should have been blocked 2. Even if we throttle the calls to `replaceState`, the most recent `historyState` must be returned by `getHistoryState`. Otherwise, we can introduce race conditions like, for example: - Get history state -> add page to navigation path -> setHistoryState - Get history state -> add page to navigation path -> setHistoryState - Get history state (retrieved the one from step 1, as step 2 was throttled) -> add page to navigation path -> setHistoryState (missing the page added in step 2)",can you explain why `alwaysVisible` needs to be removed ?,is there any case where query is not a `string`?,"This only creates the error and doesn't log it, use `user().error()` instead.",should we add these to the TS type definitions too?,@choumx can these be extern'd instead? i'm not sure what shadowRoot.AMP is. is it the same as the top layer AMP global?
"@@ -420,9 +420,11 @@ namespace DotNetNuke.Services.Search.Internals { return searchPhrase; } - + + string output = FoldToASCII(searchPhrase); + // we have a quotation marks and/or wildcard search, adjust accordingly - var chars = searchPhrase.ToArray(); + var chars = output.TrimEnd('\0').ToCharArray(); var insideQuote = false; var newPhraseBulder = new StringBuilder(); var currentWord = new StringBuilder(); ",Please put the `Trim` inside `FoldToASCII`,"If this is something to be supported, this should NOT be done in this method. as it is not cleaning a wildcard and the intention would not be clear",Do we still need these 2 asserts if `replacefn` could be in cross context?,This capitalization of `JSHint` is not recognized and the code below generates a lint error. Same below,Why can we get a match in the middle of a literal string?,I think this variable should be called `*WithoutLanguageCode`?,Did something change with Lucene's support for wildcards? What's the behavior if you search with a wildcard at the beginning of your search?,Can we use the [InternalsVisibleTo] attribute instead of making this public?,We know it's not an array from the typing.,"the trouble with this is that we're making an assumption that `eval` is disabled --- which it isn't necessarily (`unsafe-eval`). I expect this will be fine for most users, but it's not entirely accurate. I guess we need to wait until there is a better way to get this information (before changing that)","Just as a question; should this code be wrapped in #if DEBUG statements? Probably not necessary, but I am doing the same type of code and wanted to get the group thought about if it is needed/wanted or not."
"@@ -145,7 +145,7 @@ namespace Microsoft.Extensions.FileProviders ref _fileWatcher, ref _fileWatcherInitialized, ref _fileWatcherLock, - _fileWatcherFactory); + _fileWatcherFactory) ?? throw new NullReferenceException(nameof(_fileWatcher)); } set { ",this should be a separate change - we should avoid any product changes when adding annotations,This spelling has more uses,"Same question here, if it throws for browser all time it should have `[UnsupportedOSPlatform(""browser"")]`?",Why this method has no annotation?,Why not IgnoreCycle**s**?,is it worth adding a summary to this?,@adamsitnik @jeffhandley this is updating the attributes to match the implementation which allows to set them on enums as well.,Why is `ParameterizedConstructorDelegate<T>` a nested class in JsonClassInfo?,"same here, use `[ConditionalFact(Helpers.IsDrawingSupported)]` instead",Why not use the helper you added?,"If you like, you could verify the parameter name. That would have caught the bug you fixed by moving the handle innitialization down. eg `AssertExtensions.Throws<ArgumentNullException>(""fileStream"", () => FileSystemAclExtensions.GetAccessControl((FileStream)null));`"
"@@ -150,7 +150,7 @@ module Users # Don't allow the user to modify UserTeam-s if he's not admin, # unless he/she is modifying his/her UserTeam if current_user != @user_t.user && - !is_admin_of_team(@user_t.team) + !can_read_team?(@user_t.team) render_403 end end ","Here the same, I would make separate methods `check_leave_team_permission` and `check_manage_user_team_permission`.","You probably want to do something if user can't create teams, like render 403 or something?",What about the destroy permission?,  not sure if this counts as a clever hack... I hope everyone (who has `*:*`) is aware that if they toggle the switch then it will force every developer to re-agree to the agreement.,what will happen if 2 or more conditions will match?,Just curious why we do not have to use `can_edit_post` here since we're carrying out an action on the post.,That's why I _hate_ `unless` when there's more than one condition  ,"You can kill this too if you want, I opened up an optimization PR that way you can keep the scope of this nice and narrow :)","I believe it's valid to create a `Guardian` with a `nil` user, for anonymous users. It looks like you'd get a `nil` error here.",Maybe `return false unless can_see_post?(post)`,"Verified via Blazer that the old ""banned"" role indeed no longer exists, so we can safely remove this code (which was meant to be extremely temporary)."
"@@ -109,7 +109,6 @@ static void write_pattern(struct mm_heap *heap_map, int heap_depth, memset( (void *)current_map->base, pattern, current_map->count * current_map->block_size); - sizeof(*current_map)); } } ","wow, we must have other not compiled code hidden by conditional compilation.",You probably wanted `if (map->first_free != start)`,I think at this point it is too late to apply alignment.,You can take unaligned_ptr from hdr->unaligned_ptr right before loop. There is no need to store it here.,The original code have a high performance. I suggest using the original code.,"@keyonjie, wouldn't remove this `if(!remaining)` and move the assignment `start = current` below `remaining = 0` be better?",Why this is removed? Looks like a memory leak.,this feels wrong... Is SueCreek the only platform that needs this? Or are you using the wrong memory allocator?,"As rmalloc is not rzalloc(), I don't think we need such bzero() ?",what if the above memmove gets interrupted by an ISR that happens to write to the mem chunk being moved?,`ptr -= a_hdr->alignment_shift`
"@@ -915,6 +915,10 @@ class ExceptionHandler(object): 'traceback': _format_exc(exc_val, exc_tb), 'conda_info': info_dict, } + + if isinstance(exc_val, CondaError): + error_report['conda_error_dump'] = exc_val.dump_map() + return error_report def print_unexpected_error_report(self, error_report): ",I'm not sure I like the name of this key here...,"What's going on here? It doesn't seem generally safe to do this, but I'm not familiar with this code...","These are only used in type hints, so you can import these inside the `if TYPE_CHECKING:` block (also, `KeyType` can be a relative import: `from ._enums import KeyType`)",There is no cmake flag for oracle?,"what is the type of `self.__class__`? is it safe to dump this `self.__class__` object and load it in another environment (e.g., another machine)?","what is the type of `self.__class__`? is it safe to dump this `self.__class__` object and load it in another environment (e.g., another machine)?",The original check that `bool(value) == False` is lost. Is that ok?,"Robert: do we really want to replace FastPrimitivesCoder with DeterministicPickleCoder? I think the only thing here should be PickleCoder, and including FastPrimitivesCoder is an oversight.",Does this still put an empty line above it?,Seems unused. Please check.,can this KeyError still happen considering 790/791?
"@@ -253,3 +253,9 @@ class DvcFileSystem(BaseFileSystem): # pylint:disable=abstract-method ret[obj.hash_info.name] = obj.hash_info.value return ret + + def _download(self, from_info, to_file, **kwargs): + fs, path = self._get_fs_path(from_info) + fs._download( # pylint: disable=protected-access + path, to_file, **kwargs + ) ","For the record: this is a bit ugly, but it will turn into a cleaner and more proper `fs.get_file` when migrating dvcfs to fsspec.",This didn't handle chained imports before and neither does it handle them now. We'll need to generalize resolving logic we use in dvc/dependency/repo.py to use it here. Will prob look into it in a followup.,"Btw, we have `copy_fobj` method here and in BaseTree, do we still need it or is it the same as upload_fobj?",Another reason to use type checks :slightly_smiling_face: Soon.,"This is temporary, we'll start computing hash on-the-fly in the followup PRs.",We can wrap `path_info` in `str`.,"same as the change in LocalTree: > now that we check for file existence in `BaseTree.upload`, we should be able to safely default to overwrite behavior in `_upload` across all of our cloud specific trees.","Btw, discussed with @isidentical that for some filesystems like (hdfs and future ssh) `upload_fobj` down below will no longer be atomic, so we might need to use a temporary path here and then just `rename` into place. (there is an option to wrap fs calls to make them atomic but that is error prone and ugly).","I would make the pattern `self.file.endswith('.fif') or self.file.endswith('.fif.gz'):` and in that case use `return read_info(...)`, else use `return read_raw(...).info`. This should make it work with any reader that supports digitization",Maybe explain that we want the error to be platform-independent so tests can have predictable output?,Is full mode intentional? Or did you only mean to include permission bits?
"@@ -325,6 +325,10 @@ class RemoteManager(object): except ConnectionError as exc: raise ConanConnectionError(""%s\n\nUnable to connect to %s=%s"" % (str(exc), remote.name, remote.url)) + except RecipeNotFoundException as exc: + raise NotFoundException(""%s. [Remote: %s]"" % (exception_message_safe(exc), remote.name)) + except PackageNotFoundException as exc: + raise NotFoundException(""%s. [Remote: %s]"" % (exception_message_safe(exc), remote.name)) except ConanException as exc: raise exc.__class__(""%s. [Remote: %s]"" % (exception_message_safe(exc), remote.name)) except Exception as exc: ",What? So if calling a remote returns a RecipeNotFound you re-convert it to NotFoundException? Seems very weird.,Make sure the rmdir() executes to clean the folder before getting the recipe,"Ok, but knowing that ``requires`` is the ``zlib/1.X.Y`` converted version, used for the package_id hash. This probably requires normalization in the server side too?","If the API method returns an error, why delegate the exception to the caller? Let the API method raise the exception instead of returning a tuple","If the API method returns an error, why delegate the exception to the caller? Let the API method raise the exception instead of returning a tuple",Nice PR. Just make this line except ResolvePackageNotFound as e: # pragma: no cover,"Docstring is wrong now, please remove it","if packages_ids is defaulted to None, weird, list(None) => raise Error",Output the remote URL if not,"This is something that I want to differentiate, between a ``RecipeReference``, which is exact, and a ``RequireReference`` which can contain a version range.","Below you use `tty.msg` twice, here you use it once with two arguments. I haven't run this yet, but I feel like `tty.msg` twice gives two `==>` prompts whereas `tty.msg` with two arguments only gives one `==>` prompt. Am I right? I don't care which we use, but we should be consistent."
"@@ -147,7 +147,7 @@ class Plugin_Storage { } // If a plugin was activated or deactivated. - $number_of_plugins_differ = count( self::$plugins ) !== count( get_option( self::ACTIVE_PLUGINS_OPTION_NAME, array() ) ); + $number_of_plugins_differ = count( self::$plugins ) !== count( (array) get_option( self::ACTIVE_PLUGINS_OPTION_NAME, array() ) ); if ( $number_of_plugins_differ || true === self::$refresh_connected_plugins ) { self::update_active_plugins_option(); ","Without being able to reproduce this, this is likely enough. Ideally, if we can run this code on an impacted site and confirm it isn't the `$plugins` that is a problematic. (I don't see how, but I don't trust myself).",can `_elgg_get_max_plugin_priority` not return 1?,the indentation looks wrong in the github diff.,Are we still keeping this stat on WPCOM side?,These are actually two separate error states. We'll need to handle them both.,These are actually two separate error states. We'll need to handle them both.,Please rename `$plugins_arr` to `$addons_arr`.,"`Jetpack_Options::get_option` prefixes the option passed with `jetpack_`. I think we should incorporate the logic of `Jetpack_Options::get_option_and_ensure_autoload` to `Jetpack_Options::get_option` and avoid having a third way of getting options, what do you think?",Please rename `$plugins_arr` to `$addons_arr`.,"I have a doubt on this fix. If value is '', we should store '' and if value is unset, we should set to null. How do you reproduce the bug ?",is `last` no longer working? if it can not be used anymore... should we remove support?
"@@ -72,6 +72,14 @@ def self_chat(opt, print_parser=None): if hasattr(agent2, 'id'): agent2.id = agent2.id + ""2"" + # Check for `selfchat` in the task name + if 'selfchat' not in opt['task']: + warn_once( + 'You are using self chat with task {}.'.format(opt['task']) + + 'If your task has an existing self chat world, then run with ' + '-t {}:selfchat'.format(opt['task']) + ) + world = create_task(opt, [agent1, agent2]) if print_parser: ",You missed a space. Also you can use `f'strings'` if you want!,"nice--while we're here, we should also do this when `'.' in sp[0]` (line 896).",this looks reasonable to me..,can you test that you have now b-0 and b-1? can you check also that it works with 2 duplicates channels?,Could you please add a little bit more to the description here?,"This is a really funny definition, because there could be many task agents... Maybe this one should just raise a RuntimeError? If we do that, do unit tests fail? Do we have unit tests covering multitask training? I don't think we do. We need those asap.",what is this is_padding() field -- do we always have that? why not just check if the text we get is an empty string?,"Yeah I think this is preferable to what was here previously, but now the Turker sees `self.bot_agent_id` as the name of the bot, right? Orion implemented a fix in his eval task to just set the bot display name for the Turkers as `YOUR PARTNER` so that they don't see the name of the bot - we might end up using that across all model chat tasks",could we abstract this to a function `self.world_runner.is_initialized()`? so that we avoid accessing this prop directly,is this ever used anywehre?,Wtf why did we lower it
"@@ -142,9 +142,9 @@ def _get_dvc_repo_info(repo): def add_parser(subparsers, parent_parser): - VERSION_HELP = ""Display the DVC version"" - "" and system/environment information."" - + VERSION_HELP = ( + ""Display the DVC version and system/environment information."" + ) version_parser = subparsers.add_parser( ""version"", parents=[parent_parser], ",I'll update docs to match this.,It won't be expanded in python. So any build helper or recipe using vcvars will get a wrong value here.,No need to copypaste this information again. You could simply append link info if it is available.,"I don't think we need an argument here, this should never activate the view with the environment. Commands other than `spack env activate` and `spack env deactivate` aren't equipped to handle the relevant environment changes, and those commands activate/deactivate the environment later (in the SpackCommand()()) call.","Good call to remove this. I agree that it's rare for us to have a recursive option and we don't want to emphasize it. Notably, we're removing the recursive options `--fmt-skip` and `--fmt-transitive`.","Am wondering if Numba, llvmlite and LLVM information ought to go under a single header of e.g. `__Numba Toolchain Versions__` or something? I'm not sure that `llvmlite` belongs under `LLVM` as is?",This actually fixes a bug. Maybe it should be a separate PR?,Is it necessary to decode it if it is going to be removed?,flake is complaining about the extra blank here :-(,"Can we please rename it to something less vague? How about `--renew-by-default`? Also, you can remove `dest`.","This exception is covered in cli.py, no need to catch it here again. Btw, your command can work and is useful both inside and outside of a repo. Just don't put repo-related info if the command is run outside of a dvc repo."
"@@ -45,4 +45,14 @@ public abstract class BaseCommand implements Runnable { ) protected boolean dryRun = false; + protected static final Logger LOGGER = LoggerFactory.getLogger(Migrations.class); + + @Override + public void run() { + final long startTime = System.nanoTime(); + command(); + LOGGER.info(""Execution time: "" + (System.nanoTime() - startTime) / 1000000000); + } + + protected abstract void command(); } ","I think it's better to have the different classes each have their own loggers, rather than having them all share the `Migrations.class` logger. By having different loggers, users can more easily filter logs and can also configure different log levels for the different loggers. I assume your motivation for switching to a shared logger was so that the execution time would be logged by the same logger as the other messages from the command execution itself? I don't have a great solution but one option could be to have each command implement a simple `getLogger()` method, which we can then call here.",I would add a `trim()` before `isEmpty()` to be extra safe.,"Hmmm, seeing `final long stopTimeNanoSeconds = System.nanoTime() - bootStopTime;` I think there's something else going on.",Neat! Reminds me of Scala a bit for some reason.,I think in this case the `build.finalName` value would be more interesting than the `project.artifactId`. It could fallback if necessary,"What is ""Live Coding""? Is that the dev mode when `quarkus:dev` is used?",Remove this method.,Feels like this is the wrong place for these - it would make this class a bit of a god class. Could producer specific ones not be in `ProducerCollector` for example?,"Should this be JOB_START_TIME = ""jobStartTime""?",It should be a `Consumer<M>`.,looks like this method is finding diff in secs. Do we wanna fix L 428 ?
"@@ -377,14 +377,16 @@ function poller_kill_stale_workers() { // We killed the stale process. // To avoid a blocking situation we reschedule the process at the beginning of the queue. // Additionally we are lowering the priority. - q(""UPDATE `workerqueue` SET `executed` = '0000-00-00 00:00:00', `created` = '%s', + q(""UPDATE `workerqueue` SET `executed` = '%s', `created` = '%s', `priority` = %d, `pid` = 0 WHERE `pid` = %d"", + dbesc(NULL_DATE), dbesc(datetime_convert()), intval(PRIORITY_NEGLIGIBLE), intval($pid[""pid""])); } else logger(""Worker process "".$pid[""pid""]."" ("".implode("" "", $argv)."") now runs for "".round($duration)."" of "".$max_duration."" allowed minutes. That's okay."", LOGGER_DEBUG); } + } } /** ",Standards: Please add braces to this `else`.,Standards: Can you please add braces to this loop?,This is a really ancient bug.,What is the purpose of those commits without a transaction start?,This won't work either since we are escaping all field names.,Please revert this line.,"Idea is good, indentation is wrong (should be a tab)","Code standards: Please use single quotes by default, and double quotes when you have to. For example this would read better as `'"",""'`.",Always check `isset()`/`empty()` for optional `$vars` keys,"We should standardize on htmlspecialchars and always specify ENT_QUOTES and UTF-8. Using elgg_format_attributes() would probably be cleaner here, at least until we get elgg_format_element.",Code Standards: Please add a space after commas.
"@@ -26,7 +26,7 @@ class ProjectActivitiesController < ApplicationController end def check_view_permissions - unless can_view_project_activities(@project) + unless can_read_project?(@project) render_403 end end ",Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.,Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.,Use a guard clause instead of wrapping the code inside a conditional expression.,Use a guard clause instead of wrapping the code inside a conditional expression.<br>Favor modifier `unless` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.,"I'm not sure about this one. It seems fine, but I would check the permissions excel file, or at least ask some, like @Ducz0r or Matja. These rules are pretty tricky/rigid/strict.",I think I meant to add a warning about actions here and unless you're careful you end up giving everyone access to create/list collections because those actions don't call `has_object_permission`. It's less than ideal.,Use a guard clause instead of wrapping the code inside a conditional expression.,Favor modifier unless usage when having a single-line body. Another good alternative is the usage of control flow &&/||.,Can you merge these 2 `if` conditionals into one?,"Will this label be useful to the end user? Why is this better than ""Limited""?",Align the operands of a condition in an if statement spanning multiple lines.<br>Use && instead of and.
"@@ -54,7 +54,7 @@ public class U2FRedisDeviceRepository extends BaseU2FDeviceRepository { public Collection<? extends U2FDeviceRegistration> getRegisteredDevices() { val expirationDate = LocalDate.now(ZoneId.systemDefault()) .minus(this.expirationTime, DateTimeUtils.toChronoUnit(this.expirationTimeUnit)); - val keys = (Set<String>) this.redisTemplate.keys(getPatternRedisKey()); + val keys = (Set<String>) RedisUtils.keys(this.redisTemplate, getPatternRedisKey()); if (keys != null) { return queryDeviceRegistrations(expirationDate, keys); } ",Remove the cast,Remove the cast,Remove the cast,Remove the cast,"I think it would be easier for the adopter, if you changes this option to ""onlyTrackMostRecentSession"".","Should factor out this line into its own method and override getMessageCount() to use that method. Otherwise, we go through the prefix stripping unnecessarily for getMessageCount().","At first I was wondering how this bug could be around, but then I realized no one uses this method. Do we think it is still necessary to keep it?",Remove the cast,"wdyt about replacing this with either `computeIfAbsent` or `getOrDefault(K key, Supplier<V> defaultValue)`? Either would allow users to avoid allocating throw-away defaultValues for every `getOrDefault` operation.","Technically the local node stopped being read owner in the `READ_NEW_WRITE_ALL` phase, and we only remove the segments later, in the `NO_REBALANCE` phase.","this name doesn't strike me as very explicit, I have no idea what it does just reading it"
"@@ -117,6 +117,12 @@ describe ProjectsController, type: :controller do expect(response).to have_http_status(:unprocessable_entity) expect(response.content_type).to eq 'application/json' end + + it 'never calls create activity service' do + expect(Activities::CreateActivityService).to receive(:call) + + post :create, params: params, format: :json + end end end ",Is this named correctly?,Need those params for `archive` action?,Could this be outside of the 'format' block?,Use the new Ruby 1.9 hash syntax.,Is the subject repository?,is it needed here?,"`content_type` will contain the full content type (with encoding and other options) in Rails 6.1, so 6.0 signals this access with a deprecation and suggests to move to `media_type` to check only that",Style/RescueStandardError: Avoid rescuing without specifying an error class.<br>Layout/TrailingWhitespace: Trailing whitespace detected.,Layout/SpaceInsideHashLiteralBraces: Space inside } missing.,Use a guard clause instead of wrapping the code inside a conditional expression.,"The default before was 'owner' (the file you deleted). This surely does not break anything? Didn't do any checks, just asking."
"@@ -27,11 +27,11 @@ from .pipeline import AsyncPipeline, PipelineStep from .queue import Signal -def run_pipeline(video, encoder, decoder, render_fn, fps=30): +def run_pipeline(video, encoder, decoder, render_fn, decoder_seq_size=16, fps=30): pipeline = AsyncPipeline() pipeline.add_step(""Data"", DataStep(video), parallel=False) pipeline.add_step(""Encoder"", EncoderStep(encoder), parallel=False) - pipeline.add_step(""Decoder"", DecoderStep(decoder), parallel=False) + pipeline.add_step(""Decoder"", DecoderStep(decoder, sequence_size=decoder_seq_size), parallel=False) pipeline.add_step(""Render"", RenderStep(render_fn, fps=fps), parallel=True) pipeline.run() ","I can understand the sequence size being configurable when you're using the dummy decoder, but does it make sense to override it when using a real decoder? IMO, the code should only allow the `--seq` option to be set when `-m_de` is unspecified, and otherwise derive the sequence size from the decoder's input shape.","I can understand the sequence size being configurable when you're using the dummy decoder, but does it make sense to override it when using a real decoder? IMO, the code should only allow the `--seq` option to be set when `-m_de` is unspecified, and otherwise derive the sequence size from the decoder's input shape.",Put `loop` arg after `video`. They are linked.,Put `loop` arg after `video`. They are linked.,Could you please update the code to call `tf.reverse_sequence` instead of just `reverse_sequence`,"This predates this PR, but it'd be nice if you could pass all of these parameters by name (`source_add_start_token=source_add_start_token`), one per line. Makes it easier to maintain later if parameters change or move around. It's fine if you don't want to bother with this now, though, as it's not a problem you're introducing here.","This predates this PR, but it'd be nice if you could pass all of these parameters by name (`source_add_start_token=source_add_start_token`), one per line. Makes it easier to maintain later if parameters change or move around. It's fine if you don't want to bother with this now, though, as it's not a problem you're introducing here.",you probably need to update the target_column docstring also as it is not used when y is 'DataFrame'.,"As long as this line is changing, how about `[str(x) for x in seq]` instead?","Also please rename variables from seq_dim to seq_axis, batch_dim to batch_axis accordingly. Thanks.","Thoughts on whether we should have both a boolean and an integer param VS combining the two a single? Other parameters (such as `--clip-grad-norm`, `--auto-augment`) take the latter approach by defining `default=None` or `default=0` to turn off the feature by default. Though having an extra boolean option is useful when you have many config parameters for the feature, it also creates noise when reading the training log to determine which inputs were actually active for the training."
"@@ -53,10 +53,11 @@ </ul> </dd> </dl> - <router-link tag=""button"" type=""submit"" - :to=""{name: '<%= jhiPrefixCapitalized %>User'}"" - class=""btn btn-info""> + <router-link custom v-slot=""{ navigate }"" + :to=""{name: '<%= jhiPrefixCapitalized %>User'}""> + <button @click=""navigate"" type=""submit"" class=""btn btn-info""> <font-awesome-icon icon=""arrow-left""></font-awesome-icon>&nbsp;<span v-text=""$t('entity.action.back')""> Back</span> + </button> </router-link> </div> </div> ",Should it be really a `submit` button and not just a `button` (was already before the case)?,Should it be really a `submit` button and not just a `button` (was already before the case)?,"As far as I understand, an `a` tag is the default, so no need to `custom`ize it here.","As far as I understand, an `a` tag is the default, so no need to `custom`ize it here.",use dash casing for ids and classes,use dash casing for ids and classes,"`aria-expanded` needs to start off as `""false""`. From there, interactions from JS take over.",This line contains trailing whitespace. Could you remove it?,"It looks like we're missing an ""a"" in ""Broadcasts navigation""!","This needs to be something like: `title=""' + __(""Search Link"") + '"">\`, since title attribute value needs to be enclosed in quotes. Similarly you will need to fix the other such entries.",little fix and cleanup
"@@ -33,7 +33,7 @@ class LinkTag < LiquidTagBase path.slice!(0) if path.starts_with?(""/"") # remove leading slash if present path.slice!(-1) if path.ends_with?(""/"") # remove trailing slash if present extracted_hash = Addressable::Template.new(""{username}/{slug}"").extract(path)&.symbolize_keys - raise StandardError, ""The article you're looking for does not exist: {% link #{slug} %}"" unless extracted_hash + raise StandardError, ""The article you're looking for does not exist: #{slug}"" unless extracted_hash extracted_hash end ","I changed this error message because I feel the main piece of information is the link that was passed in, not the syntax for the liquid tag.",Is there any chance embed_url can be nil? do we want a `&.` here?,Will need to change this too if the above recommendation is accepted.,"It would be better to test for the expected working text, if the error message was to change at some point this test would no longer provide any assurances.",Extra empty line detected at class body end.,"Are these being used? It looks like they might've been added to get an article but then, during editing/refactoring, the reason for them existing may have been removed.","Sorry for the slow review. Do we want to add this as a top-level error? Not sure we want to backport this to the other updaters, for github there are so many different reasons for a PR update failing so will be hard to reuse there. Maybe better to just add it in the Azure class for now?",Can this be I18nlized?,I'm so tempted to update our Rubocop to ban `unless` sometimes lol,I'm so tempted to update our Rubocop to ban `unless` sometimes lol,Instead of hardcoding dev.to into the url maybe we could use the `APP_DOMAIN` environment variable so links are sane in whatever environment we are?
"@@ -550,7 +550,8 @@ func GenerateRegionGuideFunc(enableLog bool) RegionGuideFunc { // Once flow has changed, will update the cache. // Because keys and bytes are strongly related, only bytes are judged. if region.GetRoundBytesWritten() != origin.GetRoundBytesWritten() || - region.GetRoundBytesRead() != origin.GetRoundBytesRead() { + region.GetRoundBytesRead() != origin.GetRoundBytesRead() || + region.flowRoundDivisor < origin.flowRoundDivisor { saveCache, needSync = true, true } ",Why can we skip sync when `divisor` becomes greater?,How about `region.flowRoundDivisor < origin.flowRoundDivisor`? To reduce unnecessary update.,Will this modification bring performance gains?,No need to change it?,I realized that it seems we can directly update the cache instead of returning the item which needs to be updated?,"I suppose the second return value is always the region's id, we can load it from region info, so don't need to return it.",Can we use `pdpb.TimeInterval` directly?,Don't get `TraceRegionFlow` here.,Is this necessary to separate these two interfaces into different files?,"In general, we use 100 as the step rank of byte dim and 10 as the step rank of key dim.",How about using two switch?
"@@ -56,6 +56,7 @@ public class FreeStyleProject extends Project<FreeStyleProject,FreeStyleBuild> i return FreeStyleBuild.class; } + @Override public DescriptorImpl getDescriptor() { return (DescriptorImpl)Jenkins.getInstance().getDescriptorOrDie(getClass()); } ",Please don't include general cleanup in otherwise unrelated files in your PR.,I would have put that one below the line that enforces the Maven version?,Why not add this method to `Job` or `JobPropertyDescriptor`?,"It seems like a safe change. But just to check, is this not considered a public API that could be called from extensions? The same about other changes in this class.","Note that this now means that quarkusDev will fail in gradle if the tests don't compile. In maven I can easily just ignore the failures, but I am not sure how to do that in Gradle.",Perhaps also make this a build step parameter?,Bonus points for marking the method as `CheckForNull`,Note: not actually necessary. Not sure if there is some style guide saying to use `this.` when not necessary to disambiguate but merely as a reminder that the reference is to a field.,Wonder why these are not using `invoke`.,"Do we really need a `matrix-auth` dep in our tests? I would rather get rid of altogether if we can. A subject for another PR, presumably.","Should we add these into a list of something? Probably not useful now, but we may see more exceptions like these. WDYT?"
"@@ -47,8 +47,10 @@ final class PublishMercureUpdatesListener private $createdEntities; private $updatedEntities; private $deletedEntities; + private $requestStack; + private $formats; - public function __construct(ResourceClassResolverInterface $resourceClassResolver, IriConverterInterface $iriConverter, ResourceMetadataFactoryInterface $resourceMetadataFactory, SerializerInterface $serializer, MessageBusInterface $messageBus = null, callable $publisher = null, ExpressionLanguage $expressionLanguage = null) + public function __construct(ResourceClassResolverInterface $resourceClassResolver, IriConverterInterface $iriConverter, ResourceMetadataFactoryInterface $resourceMetadataFactory, SerializerInterface $serializer, MessageBusInterface $messageBus = null, callable $publisher = null, RequestStack $requestStack, array $formats, ExpressionLanguage $expressionLanguage = null) { if (null === $messageBus && null === $publisher) { throw new InvalidArgumentException('A message bus or a publisher must be provided.'); ","We shouldn't use request stack here, because it makes the feature not fully compliant with GraphQL, and create a hard dependency to Symfony (we want to support Laravel and maybe PSR-7 at some point).",Add the phpdoc for `int[]` for $swaggerVersions,I don't think the PHPDoc is needed.,Add the new param to the docblock above.,not sure if I should move them to the interface,Initialize the context to an empty array and use the null coalescing?,You want to keep this dead code?,I thought we don't like traits anymore lol... And the naming is just weird. :stuck_out_tongue:,"Couldn't we just remove the typehint of `ResourceNameCollectionFactoryInterface` instead of adding a new argument? If we don't do this, we'll have a problem to provide an upgrade path to 3.0. We need to find a way to reorder the arguments anyway. Basically, we should change the order and trigger a deprecation if the old order is used.",Should be reverted I guess,"~~you can call `get` directly and store the result in a variable to prevent an extra function call. (get will return `null` if the attribute is not defined)~~ Just drop this function, see below."
"@@ -22,7 +22,7 @@ namespace CoreNodeModels.Input [SupressImportIntoVM] [IsDesignScriptCompatible] [AlsoKnownAs(""DSCoreNodesUI.Input.IntegerSlider"")] - public class IntegerSlider : SliderBase<int> + public class IntegerSlider : SliderBase<long> { /// <summary> /// The NodeType property provides a name which maps to the ",@mjkkirschner is this an API break too?,"ugh, this is an API break, what about introducing a new slider class that inherits from `sliderBase<long>` ?",Change to 'number',This should be 'number'. This node is not called 'Double Slider' anymore.,"Doesn't this one, in particular, need to have a well-defined URN?",This should be removed. Instead use the 'decimal' builder method in the line below to build decimals.,Do we want to simply remove this function?,"should probably also check it ends with "";""",This one also is a cause of the reflection crash. Keep it... just remove the `[MarshalAsAttribute(UnmanagedType.LPStr)]` attribute.,This one also is a cause of the reflection crash. Keep it... just remove the `[MarshalAsAttribute(UnmanagedType.LPStr)]` attribute.,"Shouldn't we treat all those route channels as `output` as well? IMO the visual tool will do the same as for normal `defaultOutputChannel`. More over it is `default` because we don't match any `mapping`. So, logically all of them are `output`. I think it won't hurt so much on the client to parse `output` as single element or as an array. Something similar we have for the `RecipientListRouter`. Who else ? CC @aclement"
"@@ -506,7 +506,7 @@ module.exports = class huobipro extends Exchange { return this.parseOHLCVs (response['data'], market, timeframe, since, limit); } - async loadAccounts (reload = false) { + async loadAccounts (reload = false, params = {}) { if (reload) { this.accounts = await this.fetchAccounts (); } else { ",Forgot to pass `params` to `fetchAccounts` here ),Forgot to pass `params` to `fetchAccounts` here ),"This is an error, `undefined` (due to the `=` in the type def) cannot be passed to `Object.keys`.","The same is true here, in order to bring it in line with the others, we actually need to remove the `currency` argument and always call the ""all balances"", really.","The same is true here, in order to bring it in line with the others, we actually need to remove the `currency` argument and always call the ""all balances"", really.",This line has to be `const result = { 'info': response }` (we must include the `response` in the `info` field inside the balance or any other response).,This line has to be `const result = { 'info': response }` (we must include the `response` in the `info` field inside the balance or any other response).,"We don't think this check is necessary, since `id` is a required argument for all `fetchOrder` implementations. In other words, this check is redundant. Do you agree?","We don't think this check is necessary, since `id` is a required argument for all `fetchOrder` implementations. In other words, this check is redundant. Do you agree?","Actually, the problem that we're trying to work around with the timeout is the network request. What's being timed out here is not only the network request - `loadScript` - but also the subsequent processing which we technically didn't really set out to time out.","So everything in this file cannot be updated, because the ads directory is run in foreign iframes. This means they will not have the Array#includes polyfill installed in them."
"@@ -29,14 +29,14 @@ public interface TicketState { * @return the previous time used. */ - long getPreviousTimeUsed(); + ZonedDateTime getPreviousTimeUsed(); /** * Get the time the ticket was created. * * @return the creation time of the ticket. */ - long getCreationTime(); + ZonedDateTime getCreationTime(); /** * Authentication information from the ticket. This may be null. ",Don't think this will work with JPA ticket registries. We'll likely run into either schema or serialization issues. Let's keep this as long.,Don't think this will work with JPA ticket registries. We'll likely run into either schema or serialization issues. Let's keep this as long.,Don't think this will work with JPA ticket registries. We'll likely run into either schema or serialization issues. Let's keep this as long.,Can this be final?,btw this is not just millisecond format. its going to add `001` to the millisecond format once you land that,Are all implementations of `WindowedValue` actually serializable?,"How about ""may be authenticated"". An implementation that ignores credentials that fail to authenticate when other sufficient credentials succeed is plausible?","I think `public abstract <T> T getValue(int fieldIdx);` should be changed to `private` and all value access to Row should go though specific type access method, e.g. `public int16 getInt6(int idx)`, `public ReadableDateTime getDateTime`, etc. By doing so, we can hide the internal representation of Row. Right now I at least see BeamSQL implementation uses `public <T> T getValue(int fieldIdx)` directly, which access the value saved in Row.",Don't tell me we effectively reached the previous maximum?,Can't we just leverage any specific behaviour on the `PasswordPolicyResult` ?,I am using a value higher than INIT_INSTANT_TS for bootstrap instants so that we will have uniform semantics for incrementally reading bootstrap vs non-bootstrap commits.
"@@ -59,7 +59,7 @@ export class IframeMessagingClient { /** * Send a postMessage to Host Window * @param {object} message The message to send. - * @private + * @protected */ messageHost_(message) { this.getHostWindow().postMessage/*OK*/(message, '*'); ","Why `@protected`? Why should this be overridden? Trailing underscore means `@private`, so would have to be removed.",nit: `setIsPollsTabFocused` with uppercase I,Could we make this field a `Collection<Message>` and just call it `messages`? I don't think there's any advantage in using a `List` here.,Is it possible to use map() instead of {} for consistency as in the rest of the file?,"Can it ever be not ""message""?",We need to decide on quotes or direct reference here. And I'd prefer quotes since it's a plain-text message that goes over the boundary of iframes/channels/etc.,what else can it be if not string?,The previous version was correct. `!` should be in front of `{`,is it not the case anymore?,I get that rtvVersion_ is required sometimes to keep loading files of same version. But is it always required. Should we make it optional?,"While we are at it: why is the trimmed key used further down, while it is used non-trimmed here? Shouldn't we fix that to make it consistent?"
"@@ -91,14 +91,12 @@ public class LogoutResourceIT { private WebTestClient webTestClient; <%_ } _%> - private OidcIdToken idToken; - @BeforeEach public void before() <% if (!reactive) { %>throws Exception <% } %>{ Map<String, Object> claims = new HashMap<>(); claims.put(""groups"", Collections.singletonList(""ROLE_USER"")); claims.put(""sub"", 123); - this.idToken = new OidcIdToken(ID_TOKEN, Instant.now(), Instant.now().plusSeconds(60), claims); + OidcIdToken idToken = new OidcIdToken(ID_TOKEN, Instant.now(), Instant.now().plusSeconds(60), claims); <%_ if (!reactive) { _%> SecurityContextHolder.getContext().setAuthentication(authenticationToken(idToken)); ",idToken is used in getLogoutInformation method,idToken is used in getLogoutInformation method,"Are we ok with waiting ""indefinitely""?","Also `v` is probably not a very good variable name. Either choose `id` or something more apparent, or remove the variable and set directly.",Remove this please.,Remove the default value.,nit: this could be two commits. One for method extraction and other for change. That way it is easier to see what actually changed.,This bit is a little strange to me as the `findRememberMeCookieValue` function uses the regular decoder instead of the Mime decoder,Scopes need not be hardcoded as strings. They are available as an enum,doesn't removing this break compatibility?,"This means that as long as the token=default is configured, the request can be executed arbitrarily, right?"
"@@ -230,11 +230,13 @@ namespace System.Data #endregion #region IBindingList -// TODO: Enable after System.ComponentModel.TypeConverter is annotated + // TODO: Enable after System.ComponentModel.TypeConverter is annotated #nullable disable /// <summary> /// Clears both expression-based and DataView's string-based sorting. /// </summary> + [UnconditionalSuppressMessage(""ReflectionAnalysis"", ""IL2026:UnrecognizedReflectionPattern"", + Justification = ""This whole class is unsafe. Constructors are marked as such."")] void IBindingList.RemoveSort() { base.Sort = string.Empty; ",What is unsafe about the two methods below? Can these suppressions (and thus the RUC on the ctor) be removed on this class?,"(nit) - `""IL2113:RequiresUnreferencedCode""` should be `""IL2113:RequiresDynamicallyAccessedMembers""` (or whatever short name we decided to give these new warnings). This is repeated elsewhere for IL2112 in this file, and other files.","Out of curiosity, what necessitated the change from reporting the diagnostic directly to storing in a set? Were there duplicates? Probably not in scope for this PR, but in future iterations I would recommend doing the same for emitted member-level diagnostics (in other words, we should try to make the mapping layer pure).",Do we still need to suppress IL2026 above?,Should this also be added to the ref?,"Ah, are you disabling nullability around interface implementations for interfaces that haven't been annotated yet? If so, I'd suggest to just leave that up to whomever annotates the interfaces.","This is transient state scoped to this particular method, so I would recommend adding a few debug-level asserts at the top of the method checking that these collections are empty: just to make sure there's no leftover items leaking into this method call.",Can we create a tracking issue for this and link it here?,Does `RealWorldContextTests` need to be referenced here?,"I was thinking of just suppressing these two messages. The reasoning being: 1. We are using `CustomAttributeData.GetCustomAttributes` to read the attribute information. 2. We are only calling Activator.CreateInstance on an attribute if someone else is already using that attribute's constructor. 3. We are only setting the attributes' properties if someone else is already setting that property. In these cases, the constructor and setter will already be preserved, since someone else (the place declaring the attribute) is already creating the attribute and setting its properties. Thoughts?",This will need unit test updates
"@@ -80,7 +80,7 @@ func commitCmd(c *cli.Context) error { case ""oci"": mimeType = buildah.OCIv1ImageManifest if c.IsSet(""message"") { - return errors.Errorf(""messages cannot be added to the OCIv1 image format."") + return errors.Errorf(""messages are only compatible with the docker image format (-f docker)"") } case ""docker"": mimeType = buildah.Dockerv2ImageManifest ","@rhatdan question, does the first docker here need to be capped?","These should be constants, i.e. `Local` and `Source`",We retry when the registry is permanently down?!,Who depends on pkg/build/generator? Anyone outside of oc?,Where is this coming from? Feels like it would break compilation,Does this actually copy it? I'm wondering how we get two images commands with different aliases out of a simple equals,"Need to change this, as soon as the develop branch is merged into master and there is a new release of jhipster-registry","Need to change this, as soon as the develop branch is merged into master and there is a new release of jhipster-registry",I think this can be removed.,Move this to the other commit.,Breaking CLI change.
"@@ -1850,9 +1850,10 @@ class BaseRaw(ProjMixin, ContainsMixin, UpdateChannelsMixin, SetChannelsMixin, show=show, block=block, n_jobs=n_jobs, axes=axes, verbose=verbose) - @fill_doc + @verbose def estimate_rank(self, tstart=0.0, tstop=30.0, tol=1e-4, - return_singular=False, picks=None, scalings='norm'): + return_singular=False, picks=None, scalings='norm', + verbose=None): """"""Estimate rank of the raw data. This function is meant to provide a reasonable estimate of the rank. ",I would consider deprecating this method to avoid having 2 (inconsistant) ways of computing the rank from raw data.,I think i'd rather hack the _get_raw function to fake proper projections. eg. recompute them with an SVD or normalize them to 1. This applies to other tests.,oups my bad if psds is power (not amplitude) than it should be 10 \* np.log10 please revert here and change above.,"Sh***, mixed up between branches :(","I think this may need to be `self.info['lowpass'] = min(h_freq, self.info['lowpass'])`.",mismatch with other default,"API change, should default to `True` or `None` with deprecation cycle","Shouldn't scroll up go to previous selection, scroll down go to the next? Actually same with up/down arrow keys",and now you don't need `spatial_colors=True` here,This was just wrong...,"see the ICA docstring for suggested revisions. However since we're using the same docstring twice, it should probably go into the docdict in `mne/utils/docs.py`"
"@@ -94,6 +94,10 @@ class Server: self.options = options if os.path.isfile(STATUS_FILE): os.unlink(STATUS_FILE) + if self.fine_grained: + options.incremental = True + options.show_traceback = True + options.cache_dir = os.devnull def serve(self) -> None: """"""Serve requests, synchronously (no thread or fork)."""""" ","Is this also going to be true for the ""real"" version of fine-grained?","``fast-parser`` is no more experimental, so that it also could be moved above.","Annoying naming nit (sorry), but: renaming this to be be more namespaced (ie `--log-show-rust-3rdparty`) would make the help more scannable.",Defaults to None? I also like to set `type=str`. Makes it more explicit to readers of this code.,Question: When would this be called? couldn't we just replace the call to `x.greenlet.rawlink` or is this internal greenlet stuff?,"While this duplicates `engine_initializer.py`, I didn't think it's worth factoring up because this code will be deleted soon.",I'll be honest I'm not fond of these kwargs dict constructions they seem quite fraglie.,"Perhaps mention how blocker errors work in `--half-assed` mode. What if we have both `--half-assed` and `--silent-imports` -- would we then follow imports (but ignore errors) if we can find an implementation of a module not listed on the command line, and ignore the import silently if no implementation can be found?",Modifying the options object it's kind of ugly. Maybe at least mention that it gets mutated in the docstring?,PTAL at this method - we need to remove some of the statements in 922-928.,I think this is >10x more readable and will hopefully avoid future confusion about the `invert` argument.
"@@ -323,3 +323,13 @@ func isVMSSNameInAgentPoolsArray(vmss string, cs *api.ContainerService) bool { } return false } + +func azureStackImageBaseOverrides(kc *api.KubernetesConfig) { + // Azure Stack's custom hyperkube image is now hosted along with MS' images + // Override KubernetesImageBase/KubernetesImageBaseType if apimodel is set to the deprecated KubernetesImageBase + deprecatedAzureStackImageBase := ""mcr.microsoft.com/k8s/azurestack/core/"" + if strings.EqualFold(kc.KubernetesImageBase, deprecatedAzureStackImageBase) { + kc.KubernetesImageBase = ""mcr.microsoft.com/"" + kc.KubernetesImageBaseType = ""mcr"" + } +} ","@CecileRobertMichon do you have any thoughts on doing this override here? Is this preferable to the pattern we have currently, where we pass along upgrade context through the code flow and do upgrade-specific mutations during defaults enforcement?","nit: return p.IsCustomCloudProfile() instead of copying the `p.CustomCloudProfile != nil` implementation from the `IsCustomCloudProfile` method (i.e., let's just re-use the method) @jadarsie do we want the `p.CustomCloudProfile.Environment == nil` back-compat foo for AzureStackCloud? It would be nice to have `IsAzureStackCloud` actually require that the `Environment.Name` string property be equal to `""AzureStackCloud""`.",why not just put this in the if statement? I think all conditions above apply... If imageRef is set we don't want to set the distro here either,"this might be a downgrade (eg. If I set my etcdVersion to 3.3.x in my original deployment). I wonder if changing ""upgraded"" to something more general like ""updated"" makes sense. What do you think?","As discussed, we can consider using the `kubernetesConfig.CustomHyperkubeImage` instead",SKU needs to be updated,"@CecileRobertMichon What do you think of this implementation for etcd? Basically, we allow folks to reliably run newer versions of etcd if they wish. I think this makes sense for now, for etcd, as we are explicitly defaulting to a ""not newest"" version; there are good reasons why someone may want to override our default policy for their control plane. For moby and containerd below, as of now we basically release the newest version (or at least, we want to), so we probably don't want to be as tolerant there. Thoughts? I'll update the docs accordingly after we determine what our strategy is here for these components.","we don't want to override a non-empty distro otherwise the instructions in the doc above to set it to 18.04 won't work... this needs to be inside the `if profile.Distro == """" && profile.ImageRef == nil` if statement",this should be `&& o.KubernetesConfig.EtcdVersion != DefaultEtcdVersion`,why don't we leave default to azure cni? @aanandr @chandanAggarwal,Just to confirm we want to keep the WindowsServer2019OSImageConfig values below on the Aug patches right? I think we do and then we can update that with 11B (which should have all the fixes also present in 10C)
"@@ -861,6 +861,9 @@ class SemanticAnalyzer(NodeVisitor): return None return Instance(cast(TypeInfo, sym.node), []) + def external_instance(self, qualified_name: str, args: List[Type] = None) -> Instance: + return Instance(self.named_type_or_none(qualified_name).type, args or None) + def is_instance_type(self, t: Type) -> bool: return isinstance(t, Instance) ",The second argument shouldn't be `None` -- it should be an empty list if there are no arguments.,"I found this quite interesting, as I always have written parameterizable. Apparently both are acceptable and used in literature, but the more accpted spelling is parametrizable.",I thiiiink this should be special form.,"I'd rename this to something more general, since we don't really take advantage of the fact that these represent type constructors anywhere, and the concept of ""higher-kinded type"" sounds kind of complicated. My suggestion would be `special_form`, which can be applied for things other than type constructors that don't have meaningful types but that also aren't imprecisely typed.",Add spaces around `=`.,"Whill we ever need to clear this? If the visitor is single-use, mention this in the docstring.",You should be able to get rid of this cast (and could get rid of `info` entirely).,I think this (and the other `Any` in this function) should be special form.,There doesn's seem to be a test case for this. It's probably worth having one.,I wonder if `copy_modified` should propagate this flag or not?,I'd drop the extra spaces
"@@ -123,7 +123,7 @@ def _stdio_stream_as(src_fd, dst_fd, dst_sys_attribute, mode): @contextmanager -def stdio_as(stdout_fd, stderr_fd, stdin_fd): +def stdio_as(stdout_fd, stderr_fd, stdin_fd, binary_mode=False): """"""Redirect sys.{stdout, stderr, stdin} to alternate file descriptors. As a special case, if a given destination fd is `-1`, we will replace it with an open file handle ","afaict, the `binary_mode=True` case here is never exercised? should there be some `if PY3` conditional logic somewhere consuming this for when pants is executed with a 3.x interpreter?",what does `mode='w'` on a reader mean?,Remove the TODO,I don't think this method should be private anymore.,I don't think this method should be private anymore.,Alternatively I could make the conversion directly before `self.__name` is passed to file system layer which has the potential benefit that `FileIO.name` would return the original pathlike object without conversion. Though I am not 100% sure what the right behaviour there should be.,I saw this pattern in other filesystems so I thought I'd add it here to make it completely obvious that the subsequent cast to `BinaryIO` (from `IO[Any]`) is safe and warranted.,How about fixing `utils.StringIO` instead?,"I think we will probably want progress bar support for this once we are saving files from git tree to local cache, but I think it may make more sense to have the pbar instance in the higher level `save()` method. So at that point we can add a pbar update callback parameter to this method (and do buffered read/write instead of using `shutil.copyfileobj` as needed).",This sounds a bit misleading -- data must be preloaded to overwrite *only if writing to the same file name*. It's probably worth clarifying this somehow (I don't really like my sentence either) and making it a separate sentence.,this should probably move inside the `def finalizer` block?
"@@ -201,8 +201,8 @@ func (r *ReplicaChecker) checkBestReplacement(region *core.RegionInfo) *Operator checkerCounter.WithLabelValues(""replica_checker"", ""all_right"") return nil } - storeID, newScore := r.selectBestReplacement(region, oldPeer) - if storeID == 0 { + newPeer, newScore := r.SelectBestReplacedPeerToAddReplica(region, oldPeer) + if newPeer == nil { checkerCounter.WithLabelValues(""replica_checker"", ""no_replacement_store"") return nil } ",I was intentional to return `storeID` instead of `peer` to avoid alloc too many IDs during replacement check.,"`balance region scheduler` use this function, the action should be `balance region`?",I think we can remove the function `SelectBestReplacedPeerToAddReplica` to prevent we misuse it later.,the peer here is in the offline store?,Why not check `r.filters` along with `filters`?,Inconsistent naming style (space separated instead of kebab),I think we can use _log.Error_.,I have a second thought here. It seems better to move the log into `AllocPeer` function.,should also extract a function?,why using filters here can add other replicas?,"tip: maybe we'll allow this later, but allocate a new peer id and recycle the old peer."
"@@ -2,11 +2,14 @@ // This file is subject to the terms and conditions defined in // file 'LICENSE.txt', which is part of this source code package. +using System; + namespace Microsoft.Xna.Framework.Input { /// <summary> /// A struct that represents the current button states for the controller. /// </summary> + [Serializable] public struct GamePadButtons { internal readonly Buttons _buttons; ",I assume you're checking with XNA and these are cases where we missed having it serializable? Can you add `[DataContract]` to these as well if that is the case?,I assume you're checking with XNA and these are cases where we missed having it serializable? Can you add `[DataContract]` to these as well if that is the case?,It would be general goodness to change all these to be const too.,"Why not just ""runtime""?",Is it OK to annotate files in the Common folder? Don't you need to add `#nullable enable` on top given that this file might be referenced by a project that doesn't have annotations enabled globally?,"@JeremyKuhne might want to check that the new VS designer doesn't use those, but I really doubt it, given the IID is new and not explicitly specified.",Do we have tests for this at all? How was this found?,These usings do not seem necessary,Something I missed. The `control` must either be nullable or throw.,There will also be 2 unused imports,should DataContractSurrogate be nullable? (not guarded against null)
"@@ -1,6 +1,10 @@ FactoryGirl.define do Faker::Config.locale = 'en-US' + sequence :mobile do |n| + (999_000_0000 + n).to_s + end + factory :user do confirmed_at Time.current email { Faker::Internet.safe_email } ",change to string to avoid rubocop violation or disable cop locally since it's phone number  ,change to string to avoid rubocop violation or disable cop locally since it's phone number  ,"this is the same as the method on the user, do you think it's worth some sort of `TotpHelpers` static method? Sometimes DRY is too much for just two things, but there are enough parts (like the `.to_s.rjust`) that seem like things we'd want to only write once","this is the same as the method on the user, do you think it's worth some sort of `TotpHelpers` static method? Sometimes DRY is too much for just two things, but there are enough parts (like the `.to_s.rjust`) that seem like things we'd want to only write once","What do you think about calling this method `call` for consistency with other service objects, and for less redundancy with the class name?","What do you think about calling this method `call` for consistency with other service objects, and for less redundancy with the class name?",where did the e164 normalization go?,where did the e164 normalization go?,"I had meant just pulling the part that generates the valid-looking phone number into a helper, not the fillin in part, but this works too","I had meant just pulling the part that generates the valid-looking phone number into a helper, not the fillin in part, but this works too",Please rename this file so it ends in `_spec.rb`
"@@ -182,6 +182,8 @@ class NewCppInfo(object): current_values = result.get_init(""requires"", []) current_values.extend(component.requires) + # We copy the properties from the root object, even if we have components + result._generator_properties = copy.copy(self._generator_properties) # FIXME: What to do about sysroot? else: result = copy.copy(self.components[None]) ","Could this be breaking? I think it shouldn't, the aggregated_components is used only by the new generators, and it makes sense that aggregating the components in a single cppinfo, keeps the root properties. The aggregation cannot be done for the component's properties because they cannot be aggregated but keeping the root one make sense. right?","Again, maybe a bit too early generic at this point. Maybe it only needs to be implemented as BuildModulesPath thing, not as a general any-dictionary of paths.",Also as a oneliner: ``if any(comp_name == name for comp_name in self.components)``,This is very unnecessary. See a couple lines below.,"Do we need both? What's the use and difference? `bokeh.util.version` should explain this, but doesn't. Maybe we should also consider making the version format easy to use for automatic processing, i.e. use a property map instead of a bare string.","We can avoid the new Component class if there is a way of setting the rootpath of the _CppInfo object created here, but I don't know if there is an alternative about this",@havocp thanks for your insight. The above works and I can live with it :),Could you wrap `def compiler` in `@llnl.util.memoized` for the same effect but with less new code?,Should we use some time variable here? I suppose for that to be useful _ConcatSequence would have to be a generic type.,"I don't think the `copy.copy` is needed here, just calling the `dict` initializer creates a shallow copy",Better to use `=` as separator (more ini-like format)? Or is there any reason to use `:`?
"@@ -54,10 +54,12 @@ export function connect() { /** * Closes connection. * + * @param {boolean} requestFeedback - Whether or not to attempt showing a + * request for call feedback. * @returns {Function} */ -export function disconnect() { +export function disconnect(requestFeedback: boolean = false) { // XXX For web based version we use conference hanging up logic from the old // app. - return () => APP.conference.hangup(); + return () => APP.conference.hangup(requestFeedback); } ","This change supports the new hangup button in the new toolbar, which will call this action directly instead of emitting out through APP.UI.emitEvent. On hang up feedback should be requested.",Shouldn't we move this line to a place where the Promise is finished? Maybe before maybeRedirectToWelcomePage method will be a good place. WDYT?,"@saghul, this is where the conference is left and feedback is requested at the same time. This feedback is essentially post-call feedback but sending of feedback relies on the conference (stored in 'room') to be available. I ended up passing it into the feedback dialog so I have a reference even after the conference has been left.",For me it makes more sense to have some event for hangup/conference ended and handle it in the remoteControl.receiver directly,is it cool to calll setName multiple times like that?,"Can you please remove this until we have the actual pre join page? It's not on the whitelist either, but we can add it later when the full pre-join experience lands.",why not call it `jid` or `id`? `username` suggests the domain part is not included.,Optional style: I'd put the text in the description bellow without defining a variable for it.,why do we need this? if an unknown property is checked it will return undefined anyway.,"Your answer to my previous question may answer this as well, but why undefined if we check for subject previously?",1. Details are always guaranteed to be passed in? 2. Nit: do you think it makes a difference if the eslint-disabling were scoped to the function signature only instead of the entire function declaration?
"@@ -26,6 +26,7 @@ class NodeTest(TestRunnerTaskMixin, NodeTask): def prepare(cls, options, round_manager): super().prepare(options, round_manager) round_manager.require_data(NodePaths) + round_manager.require_data(NodePathsLocal) @classmethod def supports_passthru_args(cls): ",A node_test shouldn't depend on a NodePathsLocal because there isn't any inflection points.,Why is this necessary? The only time NodePathsLocal should ever be used is during a `node-install` task which shouldn't execute NodeBuild.,A node_test shouldn't depend on a NodePathsLocal because there isn't any inflection points.,"All targets should have a node_paths, otherwise it should fail",The `predicate` can be `None` and then this goes boom now.,What is the impact of this statement? Was it a bug previously?,"Given that these methods aren't marked `API: public`, we could probably make this verbiage stronger... or remove it entirely.","ditto. tho this code path is slightly less important than the one above (because presumably this is the path called for things like `run` or `test` which execute locally), a user would probably expect e.g. an unsatisfiable transitive dep for e.g. `linux-x86_64` to manifest as a failure in `test` locally on an OSX machine - which won't happen in this case.",nit: wrote? written?,It's probably better to only set maybe_platforms to `current` if the default configuration has more than one platform and current is in the platform list.,I think we could kill this local var and use req_libs directly in `self.invalidated`.
"@@ -50,8 +50,8 @@ </span> </div> - <div class=""pad"" *ngFor=""let thread of getThreads()""> - <h6> + <div id=""modalThreadsMetrics"" class=""pad"" *ngFor=""let thread of getThreads()""> + <h6 id=""modalThreadsMetrics{{ thread.threadId }}""> <span class=""badge"" [ngClass]=""getBadgeClass(thread.threadState)"">{{ thread.threadState }}</span> &nbsp;{{ thread.threadName }} (ID {{ thread.threadId }}) ","Here `id=""modalThreadsMetrics""` is not best reference for `aria-describedby`. `id=""modalThreadsMetrics{{ thread.threadId }}""` is unused. Maybe put `{{ thread.threadName }}` into `span` and give it id which includes `{{ thread.threadId }}` and in table use the same id in `aria-describedby` attribute?","Here `id=""modalThreadsMetrics""` is not best reference for `aria-describedby`. `id=""modalThreadsMetrics{{ thread.threadId }}""` is unused. Maybe put `{{ thread.threadName }}` into `span` and give it id which includes `{{ thread.threadId }}` and in table use the same id in `aria-describedby` attribute?","Without `options: {...}` here, we get a `400` error on the tag page (locally only).",doesn't this change anything?,"Could add a license header here, please?","Refactor (blocking): Instead of adding a `tabIndex` attribute to a `<div />`, use a button, i.e. prefer a semantic HTML element. We would most likely also need an `aria-label` attribute for screen readers. Some styling will need to be done most likely to retain the original look.",It wasn't so safe after all  ,Is there a reason this is not in jss?,"module.css(""z-index"", ""20"") works also with integers => module.css(""z-index"", 20) please use single quote if it is possible",Was this added because the enum was missing?,"These particular styles are not overridable. As such, we can continue to inline them. If you still want them in the JSS - it's totally reasonable, but we need to add `!important`."
"@@ -45,6 +45,7 @@ public final class PlanJsonMapper { mapper.enable(DeserializationFeature.FAIL_ON_NULL_FOR_PRIMITIVES); mapper.enable(DeserializationFeature.FAIL_ON_NULL_CREATOR_PROPERTIES); mapper.enable(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE); + mapper.setSerializationInclusion(Include.NON_EMPTY); return mapper; } } ","This configures Jackson to exclude `null`, `Optional.empty()` and empty collections when serializing.","Anyone who has input on if this is a reasonable thing to do, please chime in. It's necessary to make this work with an int as versionNumbers, but if there is a good reason to, we can use Optionals instead.",Make deep-copy instead of suppress spotbug warning.,nit: I'm with @big-andy-coates on preferring tests simply have `throws Exception` so we don't need to worry about keeping lists of exceptions up to date. I don't think seeing the specific exceptions is insightful either.,Why are we serializing the struct as a json string?,just use `org.apache.hudi.keygen.SimpleKeyGenerator.class.getName` or something always as opposed to using strings to hold the class name. the advantage is that the IDE can find these usages easily,"This is ugly but I see there is no other way around because you want to deprecate `public static void UseSerialization(this NServiceBus.BusConfiguration config, System.Type serializerType)` I first thought we can repurpose the above method to: `public static void UseSerialization(this NServiceBus.BusConfiguration config, System.Type serializerDefinitionType)` But that would be strange","nit: remove ""the"" and change to ""If the value is <see...""",Could you help me understand what does adding `InjectableValues.Std()` change?,"What if we made this a dropdown with allowable values vs booleans? It appears that setting the JDBC type to `OTHER` supports both JSON and JSONB (at least for PostgreSQL), but in the future we may want to support the SQLXML type for inserting into XML columns and so on. The description of the `JSON` option should probably explicitly say that the JDBC type is set to `OTHER`, as that might be helpful information for other databases that do things differently.",nit: I'd think a better name could be `GetDefaultSerializationOption`.
"@@ -38,9 +38,10 @@ func resourceComputeInstanceGroupManager() *schema.Resource { }, ""version"": &schema.Schema{ - Type: schema.TypeList, - Optional: true, - Computed: true, + Type: schema.TypeList, + Optional: true, + Computed: true, + Deprecated: ""Use the instance_group_manager resource in the google-beta provider instead. See https://terraform.io/docs/providers/google/provider-versions.html for more details."", Elem: &schema.Resource{ Schema: map[string]*schema.Schema{ ""name"": &schema.Schema{ ","What do you think about prefixing these fields with a message that the field is beta? ""This field is beta, use the instance_group_manager resource..."" Reading the message as it stands suggests that the resource itself is beta to me.","Not actually related to this change, but can you order the properties in Required -> Optional -> Computed order? I'm a big fan of that to make it easy to immediately see which fields are settable.",Calling out for future-Paddy--this doesn't require a migration or anything because this hasn't been released yet.,I think I'm missing a migration here--where does this get set to 3?,Nit: the `&schema.Schema` here is extraneous since Go 1.7 as its defined by `map[string]*schema.Schema` above,"Quick sanity check on this for me if I may. Right now `google_project_iam_policy` defaults attempting to merge policies, and the intent is in the future to make it authoritative for policy management on a project (ie, remove this code, and have the code always call setIamPolicy instead of attempt merging). Today, if I wanted that behaviour, I'd set `authoritative = true`, right? Right now when I do that, I'm faced with this deprecation warning here, and I just want to make sure that's intentional.",This attribute does not relate to the changes in this pull request -- will revert on merge.,"I'd rather not have this default to true, as the current behavior is not this.",Can you put this alphabetically in the right place?,Looks like the logic for update needs to be removed too,This is a change from the current behaviour (though it's one I would agree with for safety purposes) - not sure if the general policy would be to keep behaviour the same unless the setting is changed explicitly or not. With this and deletion protection supported RDS management feels a lot safer. @bflad ?
"@@ -1561,6 +1561,8 @@ void capi_free_key(CAPI_KEY * key) CryptReleaseContext(key->hprov, 0); if (key->pcert) CertFreeCertificateContext(key->pcert); + if (key->id) + OPENSSL_free(key->id); OPENSSL_free(key); } ",NULL check not needed.,"Can this just read s->session->peer directly to avoid the locking? Also, since SSL_validate_ct isn't a public API, it should be lowercased: 'ssl_validate_ct'.",Should you check to make sure `pkey != nullptr`? So move this up one line?,Is it worth folding this (and other similar) `#ifndef` into the `tls_depr.c` file too?,"You changed return(NULL) to return NULL above, which I approve of, but why do the opposite here?",Why these dont do a NULL check internally I do not know,I wonder why we need this as a separate function now. Can't this just be collapsed into `X509_self_signed()`,Change this line to `int pktype = EVP_PKEY_id(pkey);`,It looks like we could lose this { and everything below moved to the left.,"Instead of `vpm->purpose != X509_PURPOSE_SSL_SERVER` it would have to be `vpm->purpose == X509_PURPOSE_SSL_CLIENT`. Otherwise, this breaks `X509_PURPOSE_SMIME_SIGN` and possibly others.",The NULL check isn't necesary.
"@@ -581,16 +581,13 @@ def plot_alignment(info, trans=None, subject=None, subjects_dir=None, It corresponds to Freesurfer environment variable SUBJECTS_DIR. surfaces : str | list Surfaces to plot. Supported values: - * scalp: one of 'head', 'outer_skin' (alias for 'head'), 'head-dense', or 'seghead' (alias for 'head-dense') * skull: 'outer_skull', 'inner_skull', 'brain' (alias for 'inner_skull') * brain: one of 'pial', 'white', 'inflated', or 'brain' (alias for 'pial'). - Defaults to 'head'. - .. note:: For single layer BEMs it is recommended to use 'brain'. coord_frame : str Coordinate frame to use, 'head', 'meg', or 'mri'. ",@GuillaumeFavelier can you avoid such cosmetic changes? it makes diff longer to read for little gain. thx,"I don't think you need to give paths, we talk about these surfaces in a lot of places","I think there is an API problem here. How do users get the behavior they currently get in `master` for `'skirt'` on your PR? One option would be to keep `'head'` valid for `skirt` mode. Then ""head"" means ""based on the head circle"" (which would work and make sense in either `outlines` mode) and `local` means in a small neighborhood around the sensors (wherever they are).","`:func:` and `mne.` missing, probably does not link properly",I forgot the closing bracket.,period at the end,"""fiducials"" to plot fiducial points only. -> Use ""mri_fiducials"" to plot fiducial points only.","don't like this change, `subject` is an all-lower-case variable name",missing empty line,"read_bem_solution, write_bem_solution, make_bem_model",Enh: Allow `plot_source_estimates` to take a `title` kwarg as an alternative to auto-setting it
"@@ -75,6 +75,9 @@ class CentOSConfigurator(configurator.ApacheConfigurator): # Finish with actual config check to see if systemctl restart helped super(CentOSConfigurator, self).config_test() + def _pick_apache_config(self): + return configurator.find_ssl_apache_conf(""centos"") + def _prepare_options(self): """""" Override the options dictionary initialization in order to support ",We should probably fork the CentOS include into two as as well - the newest (CentOS 8) has Apache version 2.4.35 that supports TLS session tickets. We could probably just call the ancestor class with `centos-old` and `centos-current` prefixes.,We should factor out this code for creating a debian specific configurator so it's not duplicated a number of times in the tests.,"Indentation seems to be broken here, you should add 4 more spaces. I believe this was not caught due to 6604a0ff and its `indent-after-paren` change. Same elsewhere.",`_skeletons` is left over from the PRs this was built on and is no really longer used outside of tests. We should probably remove it.,"nit: Won't just passing `self.conf(""vhost-root"")` here get the same behavior as the `if` statements above?",forgot to remove?,"[super nit]: adding ""file"" after ""...Apache config"" would make reader to immediately grok what's going on in here.","So I've thought about this a fair amount. I think rather than overriding `__new__` in multiple places to get the desired behavior, we should just make a method/function following the factory design pattern. This would be a function or method that takes all parameters to give to the configurator constructor and returns a newly created configurator of the right type for those values. This requires us changing the entry point in `setup.py` for this plugin, but should result in less code and makes things like testing more straight forward. Let me know what you think!",Linter exclusion can be removed if we make `_pick_apache_config()` public.,"Not a huge fan of this solution, but otherwise it creates additional work for the plugin and presents more ways for the plugin to break. Note: If auth is ever changed... enable_mod will always be called with temp=False. This is far less likely to cause real problems than if it was based off of the specific commands `run` and `install`",This change could use extra attention.
"@@ -90,6 +90,10 @@ namespace Content.Server.Body.Behavior continue; } + // How much reagent is available to metabolise? + // This needs to be passed to other functions that have metabolism rate information, such that they don't ""overmetabolise"" a reagant. + var availableReagent = bloodstream.Solution.Solution.GetReagentQuantity(reagent.ReagentId); + //TODO BODY Check if it's a Toxin. If volume < _toxinTolerance, just remove it. If greater, add damage = volume * _toxinLethality //TODO BODY Check if it has BoozePower > 0. Affect drunkenness, apply damage. Proposed formula (SS13-derived): damage = sqrt(volume) * BoozePower^_alcoholExponent * _alcoholLethality / 10 //TODO BODY Liver failure. ","rather than relying on the metabolism behavior to check that it doesnt 'overmetabolize', shouldnt metabolizable/liver just check how much is returned and clamp it appropriately? i still think that available reagent amount should be passed in for stuff like chemicals that scale their power based off of reagent quantity, but i dont think that this is something that the behaviors should have to worry about handling",Metrics/LineLength: Line is too long. [82/80],This should be checked in the TryTransferSolution method instead.,Same here in addition to the EnsureSolution stuff on making it a const string.,TBD using EntityUid's here I don't envy you,This should be `!==` instead of `>`; unless I'm missing something?,"Maybe you should give those default values some sane numbers other than 0, just in case someone forgets to set them",can u make this a const reference?,It looks like this property is not actually used but I assume it will be used in the future when using meg points for the automatic fits.,"This really needs to be exposed as a read-only interface, like `IReadOnlyList<T>`. You do not want people to try and manually add things to the list, they need to be using the AddReagent function.",I thought were were killing the resources-intersect experiment?
"@@ -55,7 +55,7 @@ MYPYC_OPT_IN = [MYPYC_RUN, MYPYC_RUN_MULTI] # time to run. cmds = { # Self type check - 'self': python_name + ' -m mypy --config-file mypy_self_check.ini -p mypy', + 'self': '""' + python_name + '"" -m mypy --config-file mypy_self_check.ini -p mypy', # Lint 'lint': 'flake8 -j0', # Fast test cases only (this is the bulk of the test suite) ",this should use `shlex.quote`,"Also update `DEFAULT_COMMANDS` below to not include this (or maybe get rid of it, since it's super error-prone, and use a flag here or something).",remove this file from commit,"I think you can instead set this to `lint.mypy` and ignore the `--lint-skip` etc. Also, with your new whitelist feature, the `--tag=+type_checked` should be removed.","I don't feel strongly about what you're doing with Windows, but I feel the changes to this file are not an improvement. How do you even know the relationship between the python binary and this script?",Could you remove this global? It appears to only be used as an alias for `spack.paths.command_path`,"Would it be useful to have an end-to-end test case that has things like triple underscores in names and possible name clashes, such as having names `C.foo` and `C___foo` in the same namespace?","Probably not important, being this a test, but you're redirecting the `pkg-config` output to `output.txt` with `>>`, meaning that you're appending, and the previous content won't be deleted. But then you're only reading the first line of the file (`f.readline()`), so it will only get the correct line if `output.txt` was previously empty. TLDR: the redirection should be `>`, not `>>`",this could be removed from the PR,"Again, I'd make this a user-facing error rather than an assert.","Same question here, is this something that's needed for most packages that depend on numpy, or only scipy?"
"@@ -109,7 +109,7 @@ public class HoodieFlinkStreamer { .transform( ""bucket_assigner"", TypeInformation.of(HoodieRecord.class), - new KeyedProcessOperator<>(new BucketAssignFunction<>(conf))) + new BucketAssignOperator<>(new BucketAssignFunction<>(conf))) .setParallelism(conf.getInteger(FlinkOptions.BUCKET_ASSIGN_TASKS)) .uid(""uid_bucket_assigner"") // shuffle by fileId(bucket id) ","Nice catch, can we fix the indentation ? And there is another PR same with this, can we close that ?","This test is `testStateCallsFailIfNoStateApiServiceDescriptorSpecified`. Is there value in a `testTimerCallsFailIfNoTimerApiServiceDescriptorSpecified` to exercise the new ""Timers are unsupported because ..."" exception?",There's a couple of these @SuppressWarnings that are actually checked -- reported by my IDE. Is it a mistake?,I don't think this should be incremented here.,Do we really need to have a class-wide variable instead of the local ``final`` one as before?,Should this error just bubble up?,Would you also please fix these `if`s? I completely understand they were already that way.,"In my opinion, we should keep the credential properties together on the UI (and also in the code) because they belong together (Account Name + Key or Account Name + SAS Token need to be specified). So I would move the suffix property after SAS Token (on the UI and in the code too).","Considering the repetition between Flink, Spark and Samza, maybe worth moving the recurring sequence into ""preparation"" utility function?","1. Since this is a very time-consuming operation we'd better add a 'TODO' here, indicating that optimization is needed here. 2. Maybe we should remind the user `HoodieFlinkStreamer` is not suitable to initialize on large tables when we have no checkpoint to restore from, Another pr on the docs of the website",please add a checkState in static block like the others below
"@@ -216,6 +216,17 @@ func BuildStorageFactory(masterConfig configapi.MasterConfig, server *kapiserver // keep Deployments in extensions for backwards compatibility, we'll have to migrate at some point, eventually storageFactory.AddCohabitatingResources(extensions.Resource(""deployments""), apps.Resource(""deployments"")) + if server.Etcd.EncryptionProviderConfigFilepath != """" { + glog.V(4).Infof(""Reading encryption configuration from %q"", server.Etcd.EncryptionProviderConfigFilepath) + transformerOverrides, err := encryptionconfig.GetTransformerOverrides(server.Etcd.EncryptionProviderConfigFilepath) + if err != nil { + return nil, err + } + for groupResource, transformer := range transformerOverrides { + storageFactory.SetTransformer(groupResource, transformer) + } + } + return storageFactory, nil } ",This log line was added by me. I think it won't hurt but it simplifies a debugging process.,"We should not need this. The information about the aliases is read by the mapper and should be properly resolved in line 137 above here. The only reason we have the dockerimage exception is that this particular type is not registered in restmapper and will never be. In all other cases the resolution should happen. What's your particular use case in, why this is happening?","this might be a downgrade (eg. If I set my etcdVersion to 3.3.x in my original deployment). I wonder if changing ""upgraded"" to something more general like ""updated"" makes sense. What do you think?","I think the convention here is to use: `glog.V(...).Infof(""error while determining source kind: %v"")` or something along these lines",this should be `&& o.KubernetesConfig.EtcdVersion != DefaultEtcdVersion`,this should probably still allow using `protoc_output` until the field is totally removed,Could we also check in the acctest that the attribute is set?,Why was `generateSecrets` removed?,"I would rather make ""docker"" and ""source"" constants in pkg/build/api/types.go (or make a TODO for that ;-)","@CecileRobertMichon What do you think of this implementation for etcd? Basically, we allow folks to reliably run newer versions of etcd if they wish. I think this makes sense for now, for etcd, as we are explicitly defaulting to a ""not newest"" version; there are good reasons why someone may want to override our default policy for their control plane. For moby and containerd below, as of now we basically release the newest version (or at least, we want to), so we probably don't want to be as tolerant there. Thoughts? I'll update the docs accordingly after we determine what our strategy is here for these components.",You should surround the entire `GetValue` block in an `if !overwrite` check to avoid doing the work of fetching the `cloud` value when it's just going to write over it.
"@@ -61,6 +61,10 @@ const ( WorkspaceFile = ""workspace.json"" // CachedVersionFile is the name of the file we use to store when we last checked if the CLI was out of date CachedVersionFile = "".cachedVersionInfo"" + + // PulumiBookkeepingLocationEnvVar is a path to the folder where '.pulumi' folder is stored. + // The path should not include '.pulumi' itself. It defaults to the user's home dir if not specified. + PulumiBookkeepingLocationEnvVar = ""PULUMI_BOOKKEEPING_LOCATION"" ) // DetectProjectPath locates the closest project from the current working directory, or an error if not found. ","The name ""bookkeeping"" feels a bit unusual here for a public facing thing. Should it be `PULUMI_HOME_DIR`? or `PULUMI_HOME`?","The name ""bookkeeping"" feels a bit unusual here for a public facing thing. Should it be `PULUMI_HOME_DIR`? or `PULUMI_HOME`?","The name ""bookkeeping"" feels a bit unusual here for a public facing thing. Should it be `PULUMI_HOME_DIR`? or `PULUMI_HOME`?",Can the import in this file be removed?,"@chrsmith I needed to change the way we did alternate credentials as part of this change. Previously we set a bit and that bit meant ""use a different credentials files"". Now, we say: ""Here's a path to store the credentials.json"" file into a people setting the variable just decide where that folder should be (it can be in a temp folder, for example). I needed this because if multiple tests were running concurrently and logged into different clouds (which happens now because some tests still use the local backend) when one test did `pulumi login` it would change the logged in backed for other tests, which is not what we want.","@chrsmith I needed to change the way we did alternate credentials as part of this change. Previously we set a bit and that bit meant ""use a different credentials files"". Now, we say: ""Here's a path to store the credentials.json"" file into a people setting the variable just decide where that folder should be (it can be in a temp folder, for example). I needed this because if multiple tests were running concurrently and logged into different clouds (which happens now because some tests still use the local backend) when one test did `pulumi login` it would change the logged in backed for other tests, which is not what we want.","@chrsmith I needed to change the way we did alternate credentials as part of this change. Previously we set a bit and that bit meant ""use a different credentials files"". Now, we say: ""Here's a path to store the credentials.json"" file into a people setting the variable just decide where that folder should be (it can be in a temp folder, for example). I needed this because if multiple tests were running concurrently and logged into different clouds (which happens now because some tests still use the local backend) when one test did `pulumi login` it would change the logged in backed for other tests, which is not what we want.",Can the import at to the top of the file be removed?,Can the import at to the top of the file be removed?,Can the import at to the top of the file be removed?,Why bookkeepingdir here but homedir elsewhere?
"@@ -4,6 +4,6 @@ class WorkMailer < ActionMailer::Base def untouched_works_notification(work_ids) @works = Work.where(id: work_ids) - mail(to: 'anannict@gmail.com', subject: '【Annict::Marie】未更新の作品を更新して下さい') + mail(to: 'anannict@gmail.com', subject: '【Annict DB】未更新の作品を更新して下さい') end end ",Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.,Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.,Line is too long. [103/80],"@djuber Sorry for the ping on an already merged PR. Personally, I don't find this extra method in `User` adds much (if anything) in terms of readability and `User` is big enough as is, how do you feel about removing this again?",The assertion here is pretty generic since any email being sent in the process will result in this test passing. Is there a simple assertion that we test the email we expect is sent? Maybe a test for the subject or template?,"I strongly prefer keyword arguments for things like this. Otherwise at the calling site it's not clear what's happening. `EmailUser.new(notificaiton, false)` - I have to read more code to find out what `false` is `EmailUser.new(notification, no_delay: true)` - I know we don't want to delay.",The commit message should describe the outline of what's happening in this commit. * What do the 4 sources do? * How do the feature flags affect what happens?,Missing space after #.<br>Line is too long. [134/80],Please remove this extra newline,Lint/UselessAssignment: Useless assignment to variable - subject.,It is nitpicking but what would you say if we introduce guard here - something like `next if @mail[d].blank?`
"@@ -22,7 +22,7 @@ You may occasionally receive notifications about optional moderation actions; please <a href=""<%= app_url(user_settings_path(:notifications)) %>"">unsubscribe</a> if you do not want to receive these updates. </p> <p> - If you have any questions or feedback for us, please write to <%= SiteConfig.email_addresses[:default] %> and share your thoughts. + If you have any questions or feedback for us, please write to <%= email_link %> and share your thoughts. </p> <p> ",replaced with `email_link` because this is a HTML template,"*nitpick, non-blocking* I used square brackets here instead of another set of parentheses to show the link for plain text emails, but open to changing it if anyone feels differently.","I'm not a mega fan of the giant ifs at the end, i think the code was more readable before. I'm thinking we should not enforce this, what do you think?","I couldn't find a reference to this file anywhere in the codebase  , it seems like we may not be using it?",you could use `<%= notifications_path %>` here in lieu of the hardcoded path,These wouldn't necessarily be just for email.,"I'm fine with this language change (""to"" doesn't make sense) but the others we should run through another ticket.",I've changed dev.to to be referenced as DEV (generalized as the community name) instead as this now becoming standardized across the site.,The actual fix.,"The placeholder here was probably a copy and paste of suggested tags  , can we update it to username examples",other path without the helper :(
"@@ -29,8 +29,9 @@ const ( Ubuntu1804 Distro = ""ubuntu-18.04"" RHEL Distro = ""rhel"" CoreOS Distro = ""coreos"" - AKS Distro = ""aks"" - AKSDockerEngine Distro = ""aks-docker-engine"" // deprecated docker-engine distro + AKS Distro = ""aks"" // deprecated AKS 16.04 distro. Equivalent to aks-16.04. + AKSDockerEngine Distro = ""aks-docker-engine"" // deprecated docker-engine distro. + AKS1604 Distro = ""aks-16.04"" AKS1804 Distro = ""aks-18.04"" ACC1604 Distro = ""acc-16.04"" ) ","Rather than deprecating this, we could just call it a ""mutable"" reference. So at some point aks is redirected from 16.04 to 18.04",It bugs me that we have to define these consts twice...,"Does this constant remain as a notice of its deprecation, or because code still refers to it somewhere?","default distro doesn't change, we are simply adding a two new distro options for new deployments. Upgrades and scale operations are unaffected.",SKU needs to be updated,"this one was published one day later, not a typo",Just to confirm we want to keep the WindowsServer2019OSImageConfig values below on the Aug patches right? I think we do and then we can update that with 11B (which should have all the fixes also present in 10C),"This file has been moved to RP, you can just update there","can we follow the pattern aks-ubuntu-1804-202005, maybe call it aks-ubuntu-1804-gpu-202005?",this is almost too easy :p,is -> are
"@@ -529,9 +529,11 @@ class Optimizer(object): if not param.trainable: continue if param._ivar._grad_ivar() is not None: + Type = param._ivar._grad_ivar().type # create gradient variable grad_var = Variable( block=loss.block, + type=Type, name=param._ivar._grad_name(), stop_gradient=True, ivar=param._ivar._grad_ivar()) ",use lower case? `Type` -> `type`,use lower case? `Type` -> `type`,"`stop_gradient` is in the argument list and the default value is `False`, so the `kwargs.get(""stop_gradient"", True)` is always `True` here. So user can not set `stop_gradient` when creating `Variable`, is this your intention?","`stop_gradient` is in the argument list and the default value is `False`, so the `kwargs.get(""stop_gradient"", True)` is always `True` here. So user can not set `stop_gradient` when creating `Variable`, is this your intention?",Could print a warning here to indicate users.,Could print a warning here to indicate users.,array append array  ,array append array  ,@alextp So this line is safe to remove as your consideration is from community not the core?,...why remove this...,...why remove this...
"@@ -92,6 +92,17 @@ static const OPENSSL_CTX_METHOD rand_crng_ossl_ctx_method = { rand_crng_ossl_ctx_free, }; +static int prov_crngt_compare_previous(const unsigned char *prev, + const unsigned char *cur, + size_t sz) +{ + const int res = memcmp(prev, cur, sz) != 0; + + if (!res) + ossl_set_error_state(); + return res; +} + size_t prov_crngt_get_entropy(PROV_DRBG *drbg, unsigned char **pout, int entropy, size_t min_len, size_t max_len, ",Should this be configurable? i.e on by default but able to be turned off.. Should it be able to be disabled at compile time? I had to do similar things for #12745,The same short circuiting as used in rand_unix would be beneficial here too. The source ordering here is good.,What is the rationale behind the changes in `rand_crng_test.c`?,"Ten bytes is probably excessive here, especially when credited as forty bits. Maybe four bytes instead.",this is meant to be public api function for multiprovder support. You likely want to use/create some new internal function instead with swim_idx being passed into it.,Why not just move it inside the if and replace the `gctx = NULL` above with `return NULL`,"My indentation was even worse, but yours is still off-by-one, you need to add one more space (lines 382-384).",Don't we still need to do this if we used the `buf` in the last iteration of the loop above?,"Evidently this should be `const volatile unsigned char * volatile a = in_a;` and `const volatile unsigned char * volatile b = in_b;`. EDIT: but only because that is a workaround to known gcc bugs. Performance-wise it's best as you have it, `const volatile unsigned char *a = in_a;`.",Note for future cleanup: we should really consider having common provider functions for this sort of thing. I tried to start that with `providers/common/include/prov/bio.h` and `providers/common/bio_prov.c`,"It does look a bit curious to have `OPT_ERR` jump to `opthelp`, directly followed by an `OPT_HELP`... that doesn't."
"@@ -63,9 +63,7 @@ public class TestMultiFS extends HoodieClientTestHarness { @AfterEach public void tearDown() throws Exception { - cleanupSparkContexts(); - cleanupDFS(); - cleanupTestDataGenerator(); + cleanupResources(); } protected HoodieWriteConfig getHoodieWriteConfig(String basePath) { ",@garyli1019 : Is this one of the places where we are missing the cleanup of resources ?,What happens when custom root CA is enabled? Where do we initialize?,Do we want to still try `dataSource.close()` even when `kerberos.logout()` throws an exception? or maybe we want to reverse these so that it would be the reverse of what we do in @OnEnabled ? Right now it would bounce out of the method because of the ProcessException.,can we wrap the cert servers into the security protocol server?,nit: I would try to avoid adding newlines unless it is directly adjacent to new code.,We also need to do executor.awaitTermination as well here.,Should we call shutdownDispatcher() here as well instead of just ContainerMetrics.remove()?,Shouldn't the cleanup be in a `finally` block? post `mkdir` if the test fails the directory won't get cleaned up. Wouldn't that affect other tests?,"Do we want to fail the test if `follower` is no longer a follower, or should we just ignore test result in that case? If the latter, it may be better to change this to `Assume.assumeTrue`.",NIT. 'conf' may be a more consistent choice of naming in Ozone repo.,this kind of resetting is probably needed after each write operation as well? may be its fine to just reinitialize the service after waitForCompletion.. food for thought..
"@@ -1693,8 +1693,15 @@ def compile_to_numba_ir(mk_func, glbls, typingctx=None, targetctx=None, # perform type inference if typingctx is available and update type # data structures typemap and calltypes if typingctx: - f_typemap, f_return_type, f_calltypes, _ = typed_passes.type_inference_stage( - typingctx, targetctx, f_ir, arg_typs, None) + f_typemap, f_return_type, f_calltypes, _ = ( + typed_passes.type_inference_stage( + typingctx, + targetctx, + f_ir, + arg_typs, + None, + ) + ) # remove argument entries like arg.a from typemap arg_names = [vname for vname in f_typemap if vname.startswith(""arg."")] for a in arg_names: ",Maybe create a temporary for the outputs and subsequently unpack? The braces around the function call seems strange.,"With 4 elements returning, i think it'd be clearer (esp for the caller) if this return a namedtuple instead to avoid a unnamed unpacking and the `_, _, _`.","@sklam could you take a look at this change to testing for branch pruning too please, it's my code. Aim is to update the tests to accommodate branch pruning with SSA form.","I'd suggest letting it defaulting to `None` and setting to the `replace_functions_map` global dictionary in the function body. With that, the test do not need to know what should be the default dict.","This can probably fit onto one line, right?",And one last question: Is this really a debug output? I also find that message useful in the output.,"why ""an"" though? Is ""callback"" a vowel sound?","Hmm, if we are to change this method, we will effectively make `glob` stop working. We should not do that. Ideally we should support `glob` for `collect_granular`. But, we could also use `collect_granular` as a fallback in a situation when `glob` is not provided and `collect` returns no results. That way it will be easier but we will need to create issue for supporting `glob` in `collect_granular` and do it in the future anyway.","The fallback really needs to go soon, it's adding technical debt.","This is breaking the backward compatibility, but it is fine since our API is not officially released yet and this change is indeed worthy.",do we need to handle `self.arguments`?
"@@ -660,8 +660,16 @@ public abstract class HoodieTable<T extends HoodieRecordPayload, I, K, O> implem public HoodieTableMetadata metadata() { if (metadata == null) { - metadata = HoodieTableMetadata.create(hadoopConfiguration.get(), config.getBasePath(), config.getSpillableMapBasePath(), - config.useFileListingMetadata(), config.getFileListingMetadataVerify(), config.isMetricsOn(), config.shouldAssumeDatePartitioning()); + HoodieEngineContext engineContext = context; + if (engineContext == null) { + // This is to handle scenarios where this is called at the executor tasks which do not have access + // to engine context, and it ends up being null (as its not serializable and marked transient here). + engineContext = new HoodieLocalEngineContext(hadoopConfiguration.get()); + } + + metadata = HoodieTableMetadata.create(engineContext, config.getBasePath(), config.getSpillableMapBasePath(), + config.useFileListingMetadata(), config.getFileListingMetadataVerify(), config.isMetricsOn(), + config.shouldAssumeDatePartitioning()); } return metadata; } ",a more elegant way to do this would be through a `getEngineContext()` method that reinits lazily,remove empty lines,does this generally handle the scenario where the metadata table is not present? or being blown away.,this is 0.11.0,"lets try to maintain same naming across the board. ""_"" + METADATA_PREFIX + ""exclude.key.from.payload""","not sure if we need to parallelize with records.size(). for regular delta commits, 1 should be good enough. Bootstrap code path is different.",is this bootstrap multi writer safe? two scenarios to consider a) two writers (i.e delta sync and a spark job) trying to do this. b) Just a single writer - but with async compaction/clustering (who would also create write clients). I am not sure if metadata being enabled is the only flag to check here.,Should we assert instead that this is only invoked on the Metadata table?,I think we should add `inject` method to `Instrumenter`. My problem with approach like this is that it is very easy to end up using different instances of `OpenTelemetry` .,offtopic: can you remove the following fields? they are only used in the `start()` method and can be obtained from `ctx` and it saves some memory: `globalConfiguration` `cacheName` `isDistributedCache` Saving (computed by JOL plugin): compressed oops: 64 bytes => 56 bytes 8bytes align: 120 bytes => 96 bytes,hi @zhangyue19921010 i think also require add about `setFileSystemGuardConfig` in `HoodieFlinkTable` calss
"@@ -168,7 +168,7 @@ func (korm ORM) CreateEthTransactionForUpkeep(sqlDB *sql.DB, upkeep UpkeepRegist if etx.ID == 0 { return etx, errors.New(""a keeper eth_tx with insufficient eth is present, not creating a new eth_tx"") } - err = korm.DB.First(&etx).Error + err = tx.First(&etx).Error if err != nil { return etx, errors.Wrap(err, ""keeper find eth_tx after inserting"") } ",This sort of mistake might be best avoided by encapsulating this logic in one place,"Since Keeper is now using the exact same logic, do you think it makes sense to pull this common InsertTx code into bulletprooftxmanager because it's called in 2-3 other places?",Where is EthTx is used by jsonapi?,Can we please just disable autosave associations instead?,I'm trying to reduce the number of places of mixed-up business logic with store layer logic. It is better to use context with some DB-related value either than use the PostgreSQL DB connection in the service layer.,Is this TODO resolved? I don't see a pq error here.,Could you extract a method for this to bridges/orm,Do we rather want to panic or dirty exit here?,I have absolutely no clue where your hatred for capital letters comes from  How have they traumatized you?,"We're going to need a better way of configuring gas limits I think, since this starts to not work well on other chains. Maybe not necessary in this PR but we will need it soon. Currently its inconsistent and scattered around the codebase. Would be nice to have one file where all the gas limits lived, that could return different values for different chains. Maybe something like `chains/gas_limits.go` ?",Ditto here on line length.
"@@ -104,7 +104,7 @@ const readCache = new Map(); * * @param {string} path * @param {string=} optionsHash - * @return {{contents: string, hash: string}} + * @return {Promise<{contents: string, hash: string}>} */ function batchedRead(path, optionsHash) { let read = readCache.get(path); ",This type had been incorrect,don't async functions technically always return a Promise? so it would actually be `{!Promise<!Array<!Object>|null>}`,"Does this message get printed for every build step? If so, I suggest dropping it to make the logs less chatty.","The old code was a second (third?) attempt at implementing a fast cache for babel transforms, written by @jridgewell and reviewed by me. IIRC, the reason we were first checking the hash was so that cached transforms would be returned only if it were guaranteed that the underlying toolchain did not change. From reading the new code in this PR, I think we're okay, because this is an in-memory cache, and it looks more elegant. However, I'm calling this out for visibility in case there's an unhandled corner case that Justin can identify.","+1 for keeping PRs small but I think we should still ship things that work. This PR loads and runs more code, but doesn't add any feature. Should we have one PR to add the dependency (this one), but keep this code for a separate one that adds the feature? I don't feel strongly so I'm still approving it, up to you :)",Use `fs.existsSync` instead.,Use `fs.existsSync` instead.,"Actually, the problem that we're trying to work around with the timeout is the network request. What's being timed out here is not only the network request - `loadScript` - but also the subsequent processing which we technically didn't really set out to time out.","I didn't want to add an extra code path in the `Parser`, that will be checked every time an expression is being parsed, so I decided to put it straight in the cache","Do we need a separate `bento` option, or can building `bento-*.js` be included with `options.npm`?",`user().warn` as this is a message for publishers
"@@ -78,7 +78,7 @@ <%= hidden_field_tag :my_module_id, @my_module.id %> <%= f.hidden_field :project_id, :value => @my_module.experiment.project.id %> <%= f.hidden_field :name, :value => t(""tags.create.new_name"") %> - <%= f.hidden_field :color, :value => TAG_COLORS[0] %> + <%= f.hidden_field :color, :value => <%= Constants::TAG_COLORS[0] %> %> <%= f.button class: ""btn btn-primary"" do %> <span class=""glyphicon glyphicon-tag""></span> <span class=""hidden-xs""><%=t ""experiments.canvas.modal_manage_tags.create_new"" %></span> ",here!!!! change to value: Constants::TAG_COLORS[0],what is that? you don't need to user <%= %> here,forgot to highlight the bug :D this is going to hardcode `/t/` twice,Maybe instead of disabling this you could use `URL_REGEXP_FOR_UNIFIED_EMBED_MATCH` like in the Twitter tag?,"I wonder if we should change some other terminology in this page at the same time... ""Bg color hex"" no longer makes any sense to an admin customizing these tags, and ""Text color hex"" isn't used at all any more","**(question, non-blocking)**: I didn't trace through the code but can @tag.text_color_hex be blank at any point? If it can then perhaps we should use blank? instead to check for nil, false, empty, or a whitespace string.",`items-center` was not needed.,was this a cleanup unrelated to the category UI change?,I don't understand what does `super` in this method,"Wouldn't it make sense to make it like `alt=""<%= @tag %>'s icon""` or something?","The correct thing to do is remove the `file_output` variable altogether, and just have the `CSV.generate` block"
"@@ -2016,7 +2016,9 @@ void WalletImpl::doRefresh() } } catch (const std::exception &e) { setStatusError(e.what()); - } + break; + }while(!rescan && (rescan=m_refreshShouldRescan.exchange(false))); // repeat if not rescanned and rescan was requested + if (m_wallet2Callback->getListener()) { m_wallet2Callback->getListener()->refreshed(); } ",added: stop loop on exception,I doubt it works with light wallet.,The test is not really needed.,Why remove this (the RPC class also caches this) ?,Why has this check been removed ?,"@sparrowDom My understanding is that when you implement the Terms signing, we'll then have in the DApp locale storage an Auth token that will be sent along as an HTTP header when calling any mutations on the server. This way we can check the referrer is really the one calling the mutation. Are we on the same page ?","@sparrowDom My understanding is that when you implement the Terms signing, we'll then have in the DApp locale storage an Auth token that will be sent along as an HTTP header when calling any mutations on the server. This way we can check the referrer is really the one calling the mutation. Are we on the same page ?",You have several spurious whitespace changes like this. Please try to avoid them (fine for this time since it's nearby code changes).,Is the refreshed variable needed? It looks like to reach this line either the `break` statement had to be reached or `m_run == false` ... ?,let's remove this newline again ;),"You may want `acquire` semantics here (the default for store), if the goal is to post information to another thread. The compiler+hardware is allowed to reorder the value change ""after"" this line from the perspective of another thread."
"@@ -77,6 +77,8 @@ func (s *Secret) Validate() error { case ""service_now"": errors = requiredField(kvMap[""username""], requiredServiceNowUsernameError, errors) errors = requiredField(kvMap[""password""], requiredServiceNowPasswordError, errors) + case ""chef-server"": + errors = requiredField(kvMap[""key""], requiredChefServerOrganizationKeyError, errors) } // Eventually I'd like to switch our error handling to be handle an aggregation of errors ","- As discussed have added type `chef-server` but it subject to change. - At present, it's required to add validation for admin `key` only.","This one probably shouldn't have the validate because if someone was (somehow) using it successfully before, now it'll start failing. I'm not sure whether this data source was really ever usable, but just in case.",Is this still relevant? Calling Valid would make more sense on a `null.Time`,The PR desc doesn't say where this bug is creating issues?! I susspect it's because we're using the key.ID to grab an advisory lock in the broadcaster!,Unrelated change (and it should check if `tokens` has any elements before trying to get the first one :slightly_smiling_face:),Maybe name this type something public-specific?,Do we need the `if err != nil` check here? Why not just always set it?,Maybe we could finally change it to gitea.rsa finally (I know it's breaking chage)?,I think you've conflicted with my recent cleanup to just rip out this dependency from this location,"What does ""no higher non-preview version"" mean? I'm confused by the word ""higher"" ?!",EPBPS -> BoxSummary BoxSummaryHash or something?
"@@ -57,10 +57,10 @@ class VersionGuesser } /** - * @param array $packageConfig - * @param string $path Path to guess into + * @param array<string, mixed> $packageConfig + * @param string $path Path to guess into * - * @return null|array versionData, 'version', 'pretty_version' and 'commit' keys, if the version is a feature branch, 'feature_version' and 'feature_pretty_version' keys may also be returned + * @phpstan-return Version|null */ public function guessVersion(array $packageConfig, $path) { ",I would keep the `@return null|array` for other tooling than phpstan,Could be made `array[]` too I suppose.. it's not much info but it's something :),"`string|` should be removed here, or the literals should be removed. Otherwise, the union is useless. `string|'string-literal'` is exactly the same than `string` as all string literal types are subtypes of `string`",There is also an optional `role`,"that's not actually true. `psr-0` and `psr-4` keys are indeed of type `array<string, string>`. But for `classmap` and `files`, the type is `list<string>`",Why changing that compared to the previous return type `RootPackage|RootAliasPackage` ?,can `version` actually be `null` in that type ?,"should use `list<array{name: string, version?: string}>` to be more precise","according to the name, this is a bitmask (which is also why `0` is accepted). So this should be removed","I would even use `is_string` here. A valid package metadata contains a strict here, not other scalars (same for `version_normalized`)","`array<string, int>` is better than `int[]` if the keys are strings"
"@@ -17,10 +17,15 @@ export const GTAG_CONFIG = /** @type {!JsonObject} */ ({ 'configRewriter': { 'url': 'https://www.googletagmanager.com/gtag/amp', + 'varGroups': { + 'dns': { + 'dr': 'DOCUMENT_REFERRER', + 'dl': 'SOURCE_URL', + }, + }, }, 'vars': { 'eventValue': '0', - 'documentLocation': 'SOURCE_URL', 'clientId': 'CLIENT_ID(AMP_ECID_GOOGLE,,_ga)', 'dataSource': 'AMP', 'anonymizeIP': 'aip', ",Is this the group we wanted enabled by default?,This seems to be missing a closing paren `)`. Same below.,Looks like the parenthesis is still in the wrong place :(,"I see you have not implemented renderStart, it is up to you but should give you some performance gains.",I think you only need do this in doubleclick config otherwise it will appear twice,Use single quotes for strings. Here you may just want to use `id.length !== 0` since you are just checking for a non-empty string.,"Can't this just be `gltfUrl.replace(/\s+$/, '');` Why the need for trim or null?","We still get quite a few ad requests from the GLADE_OPT_OUT branch, unfortunately we cannot tell for what reason very easily due to all of these being grouped together as opt out. How do we know that this is safe to just turn off? 1) What if we split these out (or at least the explicit opt-out), so that we can verify the actual amount of traffic from it? and/or 2) What if rather than flipping it off 100% which is slow to revert in an emergency we setup an experiment which ignores this some fraction of the time. We can gradually increase it as a way to urge pubs to change without breaking all of their ads at once. This also gives us a faster mechanism to change things if anything goes wrong.",Have you checked with the people maintaining the internal dashboards that this doesn't break them?,Nit: We aim to use element properties defined under `__AMP_THIS_FORMAT__`. Could you use `__AMP_GWD_GOTO_COUNTERS__`?,just an observation. You are adding extraUrlParams to the pageview request. Would you not want to add it to the beginning of suffix?
"@@ -126,7 +126,6 @@ ik_rec_free(struct btr_instance *tins, struct btr_record *rec, void *args) umem_id_t *rec_ret = (umem_id_t *) args; /** Provide the buffer to user */ *rec_ret = rec->rec_mmid; - rec->rec_mmid = UMMID_NULL; return 0; } utest_free(ik_utx, irec->ir_val_mmid); ","Is it redundant or any side-effect? As my understand, if the caller offer the @args parameter, then it needs to free the space (pointed by rec->rec_mmid) by itself. The @rec will be freed after ik_rec_free() returned. So whether reset the rec_mmid or not will not cause correctness issue, right?",I will suggest directly rename DTX_RT_KEY to DTX_RT_ILOG.,"the change here looks good to me. But just checked that inside dss_rpc_send() it take one extra ref (""L40 crt_req_addref(rpc);), and no place to dec that ref (seems should decref in its complete cb - rpc_cb(), but it did not do that)?","same here, this function is always called?",Do we still support DTX_EF_SHARES case?,"We should wrap this `kmem_free(buf, size);` with a `if (size != 0)` check too to. If we don't its possible the spl per-allocation tracking code will get confused when we try and free something we never allocated.",sprintf can be changed to asprintf for printing any data length.,Should we move this line up before rpt_put(rpt)?,Would it be worth having a `return (SET_ERROR(err));` here?,"If the value size is the same, can we take over the original space and overwrite directly?",that's not good
"@@ -23,6 +23,16 @@ module AuthenticationHelper Authentication::Providers.enabled_for_user(user) end + def signed_up_with(user = current_user) + providers = Authentication::Providers.enabled_for_user(user) + + # If the user did not authenticate with any provider, they signed up with an email. + auth_method = providers.presence ? providers.map(&:official_name).to_sentence : ""Email & Password"" + verb = providers.size > 1 ? ""any of those"" : ""that"" + + ""Reminder: you used #{auth_method} to authenticate your account, so please use #{verb} to sign in if prompted."" + end + def available_providers_array Authentication::Providers.available.map(&:to_s) end ","I don't know why we used to render `Reminder: You used`, but I took the liberty of lowercasing it because...grammar.","It's not clear to me what problem this PR is solving. Why remove the `decorated_user` method from application controller, and then define it here to be able to use this helper method, but not everywhere else? It seems inconsistent to call `current_user.decorate` directly in all controllers except this one. What if we change the way we decorate the current user? Wouldn't it be easier to change a single `decorated_user` method rather than all instances of `current_user.decorate`?","It's not clear to me what problem this PR is solving. Why remove the `decorated_user` method from application controller, and then define it here to be able to use this helper method, but not everywhere else? It seems inconsistent to call `current_user.decorate` directly in all controllers except this one. What if we change the way we decorate the current user? Wouldn't it be easier to change a single `decorated_user` method rather than all instances of `current_user.decorate`?",Maybe it's time we stop having a helper reach into the guts of another class and instead add a method like `Authentication::Providers.available_providers` that either gets wrapped by this helper or used directly. This would also have the benefit of being able to wrap up the `name.to_s.camelize` logic in a single place in that class since I noticed you had to make two changes there too.,I feel as though this method name should be changed _back_ to `invite_only_mode_or_no_enabled_auth_options` now that we call `ForemInstance.invitation_only?` within it and could be done in a follow-up PR (which I have ready to go locally if we decide to go in this direction!) since there are a handful of files that will also need to be changed (roughly 4).,"The parent `describe` block is for `from_issuer`. Since we're removing the method, maybe we should just remove the block altogether? I think it's fair to assume `find_by` given a nonsense value would return `nil`.","The parent `describe` block is for `from_issuer`. Since we're removing the method, maybe we should just remove the block altogether? I think it's fair to assume `find_by` given a nonsense value would return `nil`.",Indent ) the same as the start of the line where ( is.,Why does the TOTP verification controller need to know about phone change confirmation? That only applies to OTP verification. You can only confirm a phone by receiving an SMS.,Why does the TOTP verification controller need to know about phone change confirmation? That only applies to OTP verification. You can only confirm a phone by receiving an SMS.,Changed this method name since we call `save!` not just `save` :)
"@@ -39,6 +39,7 @@ import org.apache.zeppelin.helium.HeliumPackage; import org.apache.zeppelin.interpreter.InterpreterGroup; import org.apache.zeppelin.interpreter.remote.RemoteAngularObjectRegistry; import org.apache.zeppelin.interpreter.thrift.InterpreterCompletion; +import org.apache.zeppelin.rest.message.InterpreterSettingListForNoteBind; import org.apache.zeppelin.user.AuthenticationInfo; import org.apache.zeppelin.interpreter.InterpreterOutput; import org.apache.zeppelin.interpreter.InterpreterResult; ",I think you'd better move this class into proper one. It's used in binding method only.,I think you'd better move this class into proper one. It's used in binding method only.,I think this synchronized block shouldn't be removed to protect `interpreterBindings`,I think this synchronized block shouldn't be removed to protect `interpreterBindings`,This one also called inside of broadcast() a live above.,This one also called inside of broadcast() a live above.,"I think this can be removed now, in favor of `Note.isBinded()`, no?","I think this can be removed now, in favor of `Note.isBinded()`, no?",Please let me know if expansions of import are preferred.,Please let me know if expansions of import are preferred.,I belive that apache license header going to be needed here
"@@ -278,7 +278,7 @@ void InstanceSaveManager::LoadResetTimes() continue; // the reset_delay must be at least one day - uint32 period = mapDiff->resetTime; + uint32 period = uint32(((mapDiff->resetTime * sWorld->getRate(RATE_INSTANCE_RESET_TIME))/DAY) * DAY); if (period < DAY) period = DAY; ",Whats going on here? `((X * Y)/Z) * Z` = `X * Y` is it not?,Replacing `do {} while()` with `while () {}` changes behaviour. Have you taken that into account?,Lines only need splitting if over 90 columns (with tab size 4). If <=90 columns the previous format was better.,"it looks like this variable was already there in SunwellCore, I need to investigate about it",why isn't the currentTime set to the startTime in both changes?,"This line can be removed entirely, since the only dependency is actually ""temperature.h"" (and it can decide what other dependencies to apply).",Why not merging `lapTime` and `stepChanged` functions?,"@thinkyhead No, not a variable. Just a constant. For some reason `1000UL * MIN_COOLING_SLOPE_TIME_BED` is done in int if we don't us UL. Worked great for times up to 32 seconds, but not for 60.","I'm no expert o/n timezones, but I'm pretty sure UTC-8 exists. Wouldn't this change make it impossible to set negative UTC timezones","Don't worry about this, periodically we sync master and develop branches.",You didn't add the same minus one here as you did to `TimeDuration`.
"@@ -1534,13 +1534,6 @@ $config['os'][$os]['icon'] = 'hp'; $config['os'][$os]['over'][0]['graph'] = 'device_toner'; $config['os'][$os]['over'][0]['text'] = 'Toner'; -$os = 'richoh'; -$config['os'][$os]['group'] = 'printer'; -$config['os'][$os]['text'] = 'Ricoh Printer'; -$config['os'][$os]['type'] = 'printer'; -$config['os'][$os]['over'][0]['graph'] = 'device_toner'; -$config['os'][$os]['over'][0]['text'] = 'Toner'; - $os = 'okilan'; $config['os'][$os]['group'] = 'printer'; $config['os'][$os]['text'] = 'OKI Printer'; ",Unfortunately you've removed the richoh code here :( If you can add this back in pls.,It would be mib_dir but this isn't needed anyway as a directory of the same os name is checked anyway so you can just remove this line.,Probably doesn't matter but can you lowercase the P?,Can we not show any over graphs here? Look at some of the other OS definitions.,Is hpvc the OS name for this?,Just needs formatting better to move it in line with others.,Should probably be eatonups as the new icon uploaded?,How come this is changed to VOSS? It's only a text description and Avaya VSP seems more relevant still.,I'd switch this for true maybe? You can then use !== true in the checks.,"The os name shouldn't be the company name and model unless that's the best we have. it should be the os it's running, like we have Cisco C2960, that runs IOS. If this is the best name, can you use - instead of _",Can you remove these spaces on the empty line?
"@@ -0,0 +1,18 @@ +﻿// Licensed to the .NET Foundation under one or more agreements. +// The .NET Foundation licenses this file to you under the MIT license. +// See the LICENSE file in the project root for more information. + +using System; + +internal static partial class Interop +{ + internal static partial class User32 + { + public struct COPYDATASTRUCT + { + public UIntPtr dwData; + public uint cbData; + public IntPtr lpData; + } + } +} ",Why have these types been changed?,should we extract this to `enum IDC`,Why not fix this as well?,This naming... ummm...  ,"can we change this into a flags enum, I see we use it in `SystemInformation` below","`CallingConvention.Winapi` is the default value, no need to specify it.",struct ConnectionInfo {,@chrisvest Can you double-check this? Whether it's correct or not?,nit: the `[StructLayout]` isn't needed anymore,why is this needed?,Did you add null-checks to all call sites in the project?
"@@ -625,8 +625,9 @@ def get_sqd_params(rawfile): return sqd -def read_raw_kit(input_fname, mrk=None, elp=None, hsp=None, stim='>', - slope='-', stimthresh=1, preload=False, verbose=None): +def read_raw_kit(input_fname, mrk=None, mrk2=None, elp=None, hsp=None, + stim='>', slope='-', stimthresh=1, preload=False, + verbose=None): """"""Reader function for KIT conversion to FIF Parameters ","A problem with inserting new arguments is that it breaks backwards compatibility in cases where people call the function with non keyword arguments (`read_raw_kit(input_fname, mrk, elp, ...)`). Before making this change we should be sure that nobody is using this function in their scripts that way. Otherwise the safer alternative is to add new arguments at the end.",need to remove mrk2 arg and update docstring for mrk,use a proper deprecation warning,"You can still assert something about `info['kit_system_id']`, though, right?",we never use np.testing outside of tests. Also shape are tuples so == works fine.,"The GDF event reading wasn't working in the last release anyway (fix within cycle), so I thought it's useless to make it -1 for 0.15.",docs need update (can copy-paste from `RawEDF` hopefully),"This is also a bad idea. If you have 5 minutes google ""python mutable defaults"". Please change eog and misc defaults to None and handle internally.","@t3on I don't know this code too much, but I think this is your answer -- extra points would be ignored (?).",is there any test to move too?,"so we can just get it from the file extension, then, right?"
"@@ -509,7 +509,7 @@ class Yoast_Notification_Center_Test extends WPSEO_UnitTestCase { $a = new Yoast_Notification( 'a' ); $this->assertFalse( Yoast_Notification_Center::maybe_dismiss_notification( $a ) ); - $b = new Yoast_Notification( 'b', array( 'id' => uniqid( 'id' ) ) ); + $b = new Yoast_Notification( 'b', [ 'id' => uniqid( 'id' ) ] ); $this->assertFalse( Yoast_Notification_Center::maybe_dismiss_notification( $b ) ); } ",Avoid variables with short names like $b. Configured minimum length is 3.,Avoid variables with short names like $b. Configured minimum length is 3.,"I was not sure whether this would work as expected but it does. This works because: - When an array is assigned to a different variable it's values are actually copied, and not just the memory address of the array. - The `!==` operator actually compares the values in the array instead of a memory address.",By definition an identifier is required but I think I get what you did :p.,This is pretty hard to read.,"Shouldn't we avoid changing those tests? It feels like the tests (this one and the others) won't pass without 2 more arguments (eg, `null, ['resources' => []]`). Is it the case / Isn't this breaking things somehow?",Code lisibility: Please rename `$r` to `$notifys_stmt`.,"To make a request, Representative for all other tests: - move all tests into its own test classes at the new structure - copy a allready defined test and adapt it so you can pass the `$request[]` into the `run()` class I can help you if you want, but it costs me 3 nights yet to check which tests were replaced by which new class and what are the right testing parameters for it ^^ Maybe you can transform them as far as you can or have time and I'll do the rest",`@param int $uid The user ID` I know I'm a little bit nit-picking. But as far as it is is possible we should always add a description after the variables/arrays/objects. Please check this also for the other doxygen blocks (also for `@return`). Some times it is really self explanatory but it would rise the consistency and would lower the the barrier for real newcomers,Standards: Please add braces to this conditional statement and spaces around the `!==` operator.,@danrot here I'm not sure if I should change Url.php#L248 from `===` to `==` so this test case match. Before it did return true because empty($this->getCountry()) was true and it did never the equal check.
"@@ -127,6 +127,9 @@ func addDefaultingFuncs(scheme *runtime.Scheme) { } }, func(obj *DNSConfig) { + if len(obj.ClusterDomain) == 0 { + obj.ClusterDomain = ""cluster.local"" + } if len(obj.BindNetwork) == 0 { obj.BindNetwork = ""tcp4"" } ",@smarterclayton should this inform the routing config subdomain or leave that default as is?,Should this be called `DNSServers` and use `arg:dns-servers`?,I believe the correct way to check this will be to have the container make a DNS query to `kubernetes.default` and observe the resolved name.,This shouldn't be a TODO - the value has a standard default that is always applied. We can't change a default once we declare it.,"Would it make more sense to have this a not a boolean, but rather something like `Class *DNSProviderClass` with `type DNSProviderClass string`, so later on, we can have multiple options, such as `Primary`, `FailOver` etc...",Could we use `tf-test.club` instead of `test.com`? It helps to make sure we don't run into domain validation errors when running the tests.,Need to add some validation around this to ensure it is present (defaulting should ensure it is set to cluster.local) and that it has the expected format (there are existing validation functions for validation DNS names),Would prefer to call this field `ClusterDomain` since this is under the DNSConfig section and we may have other DNSDomains in the future.,I wonder what the origin of this function is and what we intended with it? Glad we are removing it - we are always-mTLS mesh.,"Hm, what is the second case here (`strings.HasPrefix(shoot.Name, shoot.GenerateName)`)? Can you explain? If both `.metadata.generateName` and `metadata.name` are specified then `.metadata.name` will win (i.e., we would have to execute the below/already existing check). What is the `HasPrefix` case?","Remove this todo, this is setting to the default"
"@@ -295,6 +295,12 @@ func NewApplication(config *orm.Config, ethClient eth.Client, advisoryLocker pos } app.HeadTracker = services.NewHeadTracker(store, headTrackables) + head, err := app.HeadTracker.HighestSeenHeadFromDB() + if err != nil { + return nil, err + } + logBroadcaster.SetLatestHeadFromStorage(head) + return app, nil } ",I think a better place for this would be inside of `broadcaster#Start()`,Can somebody confirm this is safe to remove? I do not see any init() functions or such that would require this.,"My understanding of this change: on startup we subscribe to new headers from the local last known header, and then fast forward to the globally last known header, or at least however up to date the latest ethereum node is(call it the fast-forwarded-to header). It seems like there is a possibility that we will get two notifications for the fast-forwarded-to header. That is not a problem though, because they will be of the same height, so the second notification is ignored. Is that correct?","This tracker/listener stuff wasn't a race, but I thought it looked suspicious and was able to simplify.","This is racey. If the head tracker has pulled down a new head between `Start()` and now, this head number will be wrong. You need to read from the DB _before_ the head tracker starts.",`reflect.TypeOf(hr)` looked like a mistake - Is `reflect.TypeOf(callback)` correct?,Why is it necessary to copy so much?,Since you access the saver through the `.Saver()` method perhaps some of the top-level wrapper methods on headtracker can be removed?,"using ht.chStop here is not needed, as it's already used in the surrounding select",Can we keep the name to be `HeadBroadcaster`? I think the `id` here was a mistake,"Again, now that we connect immediately, things that are subsequently attached after connection, should get a connected event. This should have always been the case."
"@@ -232,13 +232,15 @@ func (a *AuthzServer) getAllowedMap( // Fetches the id of the current user PLUS the team ids for that user subjects := auth_context.FromContext(ctx).Subjects - resp, err := a.filterHandler.FilterAuthorizedPairs(ctx, subjects, mapByResourceAndAction, methodsInfo) + inputPairs := pairs.GetKeys(mapByResourceAndAction) + + filteredPairs, err := a.introspectionHandler.FilterAuthorizedPairs(ctx, subjects, inputPairs) if err != nil { log.WithError(err).Debug(""Error on client.FilterAuthorizedPairs"") return nil, err } endpointMap, err := pairs.GetEndpointMapFromResponse( - resp.Pairs, resp.MethodsInfo, resp.MapByResourceAndAction, true) + filteredPairs, methodsInfo, mapByResourceAndAction, true) if err != nil { log.WithError(err).Debug(""Error on pairs.GetEndpointMapFromResponse"") return nil, err ","There's only one set of `mapByResourceAndAction` and `methodsInfo`, so they're no longer passed in, but retrieved in the introspection code.",Added an explicit line like this on each `evalQuery` to show that it has been consciously considered.,Consider moving this to just after 155 since that's where we use it (I got confused and thought `V2FilterAuthorizedProjects`,Pass in the awareness of the IAM version to opa here.,do we still need the last parameter at all?,Changes in this file are for a crucial bit of logging I should have added when creating ProjectsAuthorized originally. And it is particularly apropos here as it allows straightforward validation of this bug fix.,"The export endpoint does not have access to the request context so we can't get the projects information there. Rather, for this endpoint we assume that the projects information has been handled in the gateway and passed in as a filter on the query. The gateway side of this hasn't been done yet and will be done in a future PR.",no need of this line,Hopefully this doesn't create any glaring issues,"As far as I can tell, this is unused.",Getting rid of `fullyHydrate` parameter--want to always do it!
"@@ -62,7 +62,7 @@ namespace Dynamo.Search /// <summary> /// Utility methods for categorizing search elements. /// </summary> - public static class SearchCategory + public static class SearchCategoryUtil { private sealed class SearchCategoryImpl<TEntry> : ISearchCategory<TEntry> { ",This must be renamed as soon as LibraryUI introduces class with identical name `SearchCategory`.,"Just to make sure this removal is safe, you need to confirm that these properties are only ever set once (during construction) and they do not change subsequently. If they do change (e.g. renaming the `name` or `description` of a custom node), the view needs to be updated.","This class returns (use cref) NodeSearchElement which is used for creating a node, when the element is drag and dropped.","`keywordWeights` - In English, the adjective should not be plural. :)","`string iconName` is `protected` data member, can we set `iconName = ID.ToString()` in derived class instead of making this `virtual`?",Are these really popups?,Could we keep this around? I don't see why we should prevent that: there will always be need for quick experiments which can't need to wait for us to expose proper APIs for everything.,@mjkkirschner Does it have any effect on AVP?,UserControl is already specified inside xaml file,In fact it breaks indexing because a field and a facet have the same name. I will fix that.,"+1 for renaming but when I look at it, this method should not be part of the public API at all. We should remove this method from the `Subclass` interface and follow the naming convention we use for client proxies where an internal generated method is called `arc$delegate()`. So it should be `arc$destroy()` in this case."
"@@ -6,11 +6,13 @@ import os import re import socket -import OpenSSL +from OpenSSL import SSL, crypto # type: ignore # https://github.com/python/typeshed/issues/2052 import josepy as jose +from typing import Callable, Text, Union # pylint: disable=unused-import from acme import errors +from acme import str_utils logger = logging.getLogger(__name__) ",Do we get any benefit from only putting `type: ignore` for `SSL` if there is a stub for `crypto`?,"While we're here, can we delete this line?",Is there an issue tracking the need to use `type: ignore` here? Can we link it?,"Is this what you were talking about yesterday? When running lint with with Python 3.5+, the `no-name-in-module` error will go away correct?",Is this intentionally redundant?,"If we do the gating thing I suggest above, we won't need conditional tests because we'll have coupled ""running any of this code"" with ""installing apacheconfig"".",Is there an issue tracking the need to use `type: ignore` here? Can we link it?,"I feel like I'm going crazy, because current test failures are showing this import with four dots instead of 2...",Maybe we should use PipelineRequestType,"You can just import these from `typing` without needing to wrap it the `TYPE_CHECKING`. You only need to do this for stuff imported from external libraries, like core, or other modules within this SDK.",This line is too long. You probably should use a multi-line import.
"@@ -8,6 +8,14 @@ class Jetpack_Sync_Module_Themes extends Jetpack_Sync_Module { public function init_listeners( $callable ) { add_action( 'switch_theme', array( $this, 'sync_theme_support' ) ); add_action( 'jetpack_sync_current_theme_support', $callable ); + + // Sidebar updates. + add_action( ""update_option_sidebars_widgets"", array( $this, 'sync_sidebar_widgets_actions' ), 10, 2 ); + add_action( 'jetpack_widget_added', $callable, 10, 2 ); + add_action( 'jetpack_widget_removed', $callable, 10, 2 ); + add_action( 'jetpack_widget_moved_to_inactive', $callable ); + add_action( 'jetpack_cleared_inactive_widgets', $callable ); + add_action( 'jetpack_widget_reordered', $callable ); } public function init_full_sync_listeners( $callable ) { ",this could use single quotes,This one was useful in case we're moving an existing widget to another sidebar - could you please clarify why we're removing it?,If you create the object this way the actions and filters it creates are not overridable by other plugins/themes. Easiest way to fix is using a global/static and a function to retrieve that global/static.,Why do we remove this?,"Since 5.8 has already shipped, could you replace with `5.9.0`? Thank you!",Should this be update?,"Consider renaming $moved_to_inactive to $moved_to_inactive_ids Consider reducing `array_map( array( $this, 'get_widget_name' ), $moved_to_inactive ) )` to a variable called $moved_to_inactive_names and passing it as an argument to do_action",We may need to maintain the jetpack_user_authorized hook. It fires on authorization of each user. Which ensures that Jetpack has the correct user roles for that user. As such we might want to have both jetpack_site_registered and jetpack_user_authorized. If this is the case we alls need to keep that check in the sync _allowed,I think must be 6.4,') ); missing space,"Are you sure you had the right files uploaded? This is not calling it statically, and I don't see any errors in master. It's also possible that the errors in your logs were old, as this was fixed pretty recently #5839"
"@@ -356,10 +356,16 @@ class FixedDialogTeacher(Teacher): if loop is None: loop = self.training if self.random: - new_idx = random.randrange(num_eps) + new_idx = ( + random.randrange( + num_eps // self.dws + int(num_eps % self.dws > self.rank) + ) + * self.dws + + self.rank + ) else: with self._lock(): - self.index.value += 1 + self.index.value += self.dws if loop: self.index.value %= num_eps new_idx = self.index.value ",what is this computation exactly?,"I expect that a fair amount of your slowdown is switching from `if not predicate` to always calling the method... unfortunately, the null-object pattern is a bit more expensive in python than elsewhere =( I would rather land this and then do holistic optimization that micro-optimize here too much though.",please configure your editor to delete trailing whitespaces when saving a file,"Dependency queries get all by default. Only traversal defaults to `('build', 'link')`.",Which is the purpose of this decorator? I've never used it.,what is the difference between `copy_` and assignment directly?,what is the difference between `copy_` and assignment directly?,"This is broken logic, fixing using same syntax as above.","`getattr(dep, self.key_hash_type.name)()` might work instead of exposing the internal method","This will prevent all open trades from being processed, since `_process` is aborted here. Removing the return statement wont work either, since that'll duplicate the log-message",Why doesn't this type check?
"@@ -212,10 +212,7 @@ void MapgenV7Params::writeParams(Settings *settings) const int MapgenV7::getSpawnLevelAtPoint(v2s16 p) { - // Base terrain calculation - s16 y = baseTerrainLevelAtPoint(p.X, p.Y); - - // If enabled, check if inside a river + // If rivers are enabled, first check if in a river if (spflags & MGV7_RIDGES) { float width = 0.2; float uwatern = NoisePerlin2D(&noise_ridge_uwater->np, p.X, p.Y, seed) * 2; ",seems this loop is a good canditate to be replaced with a for loop,The parameter `blockpos` can be a const reference. May be offtopic for this pull request.,"wrong reference, previously we copied the object",@Footman shall we wrap these magic numbers into constants? so they have a name that describes what they are,Could you remove the second `0.0`? @pjcozzi Do you know why this is even here?,"I'm assuming this calculation has to be here insted of in `getStandingNodePos()`? I was just wondering why you didn't call `getStandingNodePos()` from here and leave it unchanged. I'm concerned that this value now depends on the condition, could that cause issues for other code that calls `getStandingNodePos()`?","@RiccardoRossi : I explicitly set it to ""false"" to indicate that it is actually implemented (in CalculateValue), and to avoid the confusion of setting it to true (for GetValue) when is meant to be in CalculateValue, which has given problems in the past.","CF seems to have a bitter relationship with ternary operators, when it comes to indentation...","Could you please rename these functions to `drawFlowingLiquid{*}`, for easier understanding?","Here I check if the number of intersection points is at least equal to Dim. In test 7, the tetrahedron with one edge laying on the horizontal plane at z = 0.0, had n_cut_edges > NDIM but only 2 intersection points, so the approximation utility was giving a plane which was not the horizontal one",Should be listed as a breaking change in CHANGES.md.
"@@ -155,7 +155,8 @@ func (a *ACME) CreateClusterConfig(leadership *cluster.Leadership, tlsConfig *tl } a.store = datastore - a.challengeProvider = &challengeProvider{store: a.store} + a.challengeTLSProvider = &challengeTLSProvider{store: a.store} + a.challengeHTTPProvider = &challengeHTTPProvider{store: a.store} ticker := time.NewTicker(24 * time.Hour) leadership.Pool.AddGoCtx(func(ctx context.Context) { ",I'm not in love with instantiating `challengeTLSProvider` & `challengeHTTPProvider` here.,Should we rename `tlsConfig` to `clientConfig`?,"This is not needed, because named return variable `err` is used here. It's a pattern we use in this file at many places.","Using switch type with only one case is probably overkill, how about using a simpler if else here?","I would prefer to use `store-gateway` as component name, to keep consistency with the objstore client metrics.","Let's stick with the golang ""ID"" naming convention.",why last? We don't add an apiserver anymore. This just adds a nother controller. Maybe rename it to `withOpenAPIAggregationController`,How about set default value as 100?,I considered making this a special-case in the existing ACLs collection (using some name that's not a valid repo for example) but decided it's better to be explicit and more verbose.,"Because the least pd lease time is 3s, and when another PD becomes leader, the time may elapse 3s+. So I think here we can even use 3s too.","As this value is not conditionally set, could you set the `ProxyProtocolVersion` directly when `tcpService` is created?"
"@@ -259,6 +259,18 @@ export class VideoContainer extends LargeContainer { this._resizeListeners = new Set(); this.$video[0].onresize = this._onResize.bind(this); + + if (isTestModeEnabled(APP.store.getState())) { + const cb = name => APP.store.dispatch(updateLastLargeVideoMediaEvent(name)); + const containerHandlers = {}; + + containerEvents.forEach(event => { + containerHandlers[event] = cb.bind(this, event); + }); + containerEvents.forEach(event => { + this.$video[0].addEventListener(event, containerHandlers[event]); + }); + } } /** ","I don't think you need a second loop here. You can add the code for adding a listener in the previous one, isn't it?","Per my understanding, changing `describe(` to `describe.configure().run(` is a no-op, since there's nothing between the `configure()` and the `run(`. Also, since IE tests are opt-in, a plain `describe(` block will not run on IE. Is this different from what you're seeing?",Should this be `enableIe()`?,is this also an issue for thumbnails?,I would try to avoid the second then.,"Side thought: what is your opinion on one day moving all these store lookups into functions that abstract the reducer name? Not needed? I like having ""selectors"" that hide the implementation of the reducers but at the same time I don't think it's needed right now when there's so much other work to be done to just move web over to react/redux.","`('message', onMessage.bind(global))` is the preferred syntax.","Do we really need this one-liner? maybe better inline it. Context: not a fan of making conference.js any larger since it's ""legacy"" code that eventually needs to be ported.",why are we still setting this attribute?,"Do you think it would be easy or wise to move this into redux, either middleware or as a state change subscriber?",please pass down the `window` from caller (`global`)
"@@ -120,7 +120,7 @@ void Power::check() { } void Power::power_on() { - lastPowerOn = millis(); + lastPowerOn = millis() + 1; // add 1 because sometimes millis() return 0 if (!powersupply_on) { PSU_PIN_ON(); safe_delay(PSU_POWERUP_DELAY); ","The `millis()` function should only return 0 before the timer starts, and then only once every 49 days. And of course, 0xFFFFFFFF + 1 is also 0.",Maybe you should add a timeout flag as well in case it gets stuck. And maybe overriding the info function instead with a blocking argument if possible.,This used to use `SERIAL_ECHOLNPGM`. Is this going to fail on AVR?,"Please just nuke out this whole preprocessor block (and move the internal TODO note to where it belongs, i.e. `skilldrp` machine_config fn)",Don't wait when already drawing a screen.,Why not just use `IPT_ACTIVE_LOW` for the unused input bits so it returns the value you want and you don't need to or it with a constant here?,"small side note / question, will test some time later today wifi_fpm_get_sleep_type() is MODEM_SLEEP_T by default (in the previous version, or when wifi-off preinit is disabled by user currently) since this is a setting, not the actual mode that is active. is it ok do wakeup & close without fpm active?",Why not call `suicide()` instead?,I don't think the 2 degree difference in battery temperature here will have any effect.,This should be reverted,"Should it be noted that focedModemSleep() can't use ESP class for state? Looking at init, c++ runtime is started later, but I'm a bit fuzzy on details Should it use standalone function, which this call site uses as well as ESP::forcedModemSleep()?"
"@@ -71,6 +71,12 @@ func BinVersion() (string, error) { } func init() { + absPath, err := exec.LookPath(""git"") + if err != nil { + panic(fmt.Sprintf(""Git not found: %v"", err)) + } + GitExecutable = absPath + gitVersion, err := BinVersion() if err != nil { panic(fmt.Sprintf(""Git version missing: %v"", err)) ",I think this is unnecessary and we should change many other places git command invokes and add an option on app.ini.,We need `repo.Close()` here.,"why not change the if above to `if (!gitDir.trim())` and do this in else, that looks cleaner IMO","why not change the if above to `if (!gitDir.trim())` and do this in else, that looks cleaner IMO",does this align w/ the formatting we use for other warnings like when we create a binary build? it would also be nice if we could (concisely) also explain the implications of not finding git.,"i still find it weird that this timedCommand method is, in theory, generic, but then returns ""ErrGitNotAvailable"" if the command isn't found. How would you feel about changing timedCommand to not make the command name configurable? Or changing ErrGitNotAvailable to a more generic ErrCommandNotFound or something?","Not sure we should be recommending `origin` to people for existing repos, since that could easily fail if there's already an `origin` and it would probably be too verbose to explain all the subtleties here. But I really don't know for sure, and I think @malgorithms is the best choice of reviewer for user-facing wording issues.","It's not stated in the docs, but I've just checked the source and `ioutil.TempDir()` will use `0700` for dir permissions, which is OK.","Don't display the first timeout duration, it's redundant. Just indicate the next interval.","Will be interesting to see how frustrating this warning is in practice. It will fire anytime your ""origin"" is not GitHub.","Will be interesting to see how frustrating this warning is in practice. It will fire anytime your ""origin"" is not GitHub."
"@@ -4396,6 +4396,7 @@ bool Blockchain::check_blockchain_pruning() return m_db->check_pruning(); } //------------------------------------------------------------------ +// returns min(Mb, 2Ml) as per https://github.com/ArticMine/Monero-Documents/blob/master/MoneroScaling2021-02.pdf from HF_VERSION_LONG_TERM_BLOCK_WEIGHT uint64_t Blockchain::get_next_long_term_block_weight(uint64_t block_weight) const { PERF_TIMER(get_next_long_term_block_weight); ","This is only true for `hf_version >= HF_VERSION_2021_SCALING`, otherwise it is `min(Mb, 1.4*Ml)`.",interfact -> interface,nit: there should be no newline here.,"If the check on line 669 fails, then `coinbase` is uninitialised. If I am reading this correctly, this should be happening until version 5 hits.","Normally we have three import groups (stdlib, non-elastic, then elastic). So just merge this one into the group above.",Was this just the wrong RPC call?,Why not rename `block_package::block_size` as well?,"New implies returns pointer , make it a pointer and all these crosslink methods should have pointer receiver","Pedantic, but you probably meant to keep the export/import ordering","For maintainability, maybe sort these milestone numbers in increasing order?",There's still a FIXME here and the formatting is wrong
"@@ -989,8 +989,8 @@ define([ } var viewExtentCVCartographic = new Cartographic(); - var viewExtentCVNorthEast = Cartesian4.clone(Cartesian4.UNIT_W); - var viewExtentCVSouthWest = Cartesian4.clone(Cartesian4.UNIT_W); + var viewExtentCVNorthEast = new Cartesian3(); + var viewExtentCVSouthWest = new Cartesian3(); var viewExtentCVTransform = new Matrix4(); function extentCameraPositionColumbusView(camera, extent, projection, result, positionOnly) { var north = extent.north; ","You can remove these too. Below do: `var northEast = projection.project(cart, viewExtentCVNorthEast);` and remove `position`. Same thing for `southWest`.",Is this just a band-aid? Should we apply Gram-Schmidt orthonormalization earlier so the matrix is orthonormal?,This will bomb on older browsers. Change the above `typeof WebGLRenderingContext` check to return an empty object instead.,This should be `Cartesian3`.,You should revert these back to `Cartesian3`.,"This should `throw`...or all `from` functions should not require the `result` parameter, which is probably better since it avoids setting the members twice. The doc for `result` needs to be put back then.",Is here and below better than just transposing the matrix or negating the angle?,@mramato do you remember why this was added?,"How often does `transformChanged` being true? Could we save 3 branches by having this and the next 2 `if` checks wrapped in a single `if(transformChanged)` check. If it's usually false, that causes this code to be 1 `if` most of the time instead of always 3.",@bagnell using `this.setView` here breaks a whole bunch of the tests and I couldn't figure out why.,"Can't this just be `options = clone(options, true);` now?"
"@@ -79,4 +79,4 @@ foreach ($slas as $sla) { echo '</div>'; } -$pagetitle[] = 'SLAs'; +$pagetitle[] = 'SLAs'; \ No newline at end of file ","Oopsie, files should have a blank line at the end.",This would be better as `$type . 'Class.php.twig` and then let Twig throw an exception if it doesn't exist. But we could fix this when we need it.,Could you expand the test for that? There's already a TODO in the `XmlLoaderTest` for that.,Could you remove this empty line?,Would `! in_array()` be better here?,Same about the newline at the end.,please add a doxygen header,"Shouldn't have any space between attribute name, ""="" and attribute value.","Please remove the empty line here (locally, you can't do it through the online editor).",I think this condition makes the config option obsolete in form of : `False && False || True` Its sufficient to drop the last OR. To clarify: `false && false` becomes just `false`. And `false ||true` is always `true`,"Same thing here, if this is dead code it should be removed outright."
"@@ -705,8 +705,16 @@ get_object_layout(struct pl_jump_map *jmap, struct pl_obj_layout *layout, D_DEBUG(DB_PL, ""Target unavailable "" DF_TARGET "". Adding to remap_list: fail cnt %d\n"", DP_TARGET(target), fail_tgt_cnt); - rc = remap_alloc_one(remap_list, k, target, - false); + + if (remap_grp_used == NULL) { + remap_grp_used = remap_gpu_alloc_one(&dgu_remap_list, + dom_cur_grp_used); + if (remap_grp_used == NULL) + D_GOTO(out, rc = -DER_NOMEM); + realloc_grp_used = true; + } + + rc = remap_alloc_one(remap_list, k, target, false, remap_grp_used); if (rc) D_GOTO(out, rc); ","It's really hard to follow this, why don't you just simply allocate per-RDG ""used domain bitmap"" for all groups at the very beginning (Just like what we did for other bitmaps)?","this seems wrong. The rpc should only be set if obj_req_create succeeds. In this case, it seems coverity would be complaining that rpc is not NULL initialized. In fact, this can make it worse because rpc could be garbage and therefore it will call crt_req_decref even if it fails.","I'm having trouble following this code, it's traverersing a hash table, and copying in up to CRT_SRV_CONTEXT_NUM per hash-table entry by the looks of it, so this buffer could potentialy be over-run?","just curious how can it happen? when pool created the sub-group should be created already, why in bcast the crt_grp_lookup_grpid() possibly fail?","Instead of using 'agg_flags' to inform vos_iterate() to do this post callback, perhaps we'd make it more general? Like making vos_iterate() accepts two iteration callbacks: pre_callback() & post_callback(), pre_callback() is called before recursively iterating subtree, post_callback() is called when back from subtree iterating. What do you think?","Possible change, but very minor, up to you. Suggest defining a new label out_svc just before the existing pool_svc_put_leader() call at the end of the function, and changing the D_GOTO here to specify out_svc.","Hmm, I think a few original test assume the cell size is 1M here, is it ok to change it to be 32K here. Probably confirm with the original writer?",(style) line over 80 characters,"So there is no way to validate whether aggregation is disabled on all servers (no APIs)? I feel sleep may not be the correct method. Anyway, I will let you decide... example: rc = set_pool_reclaim_strategy(); assert_int_equal(rc, 0) rc = verify_pool_reclaim_status(on all ranks); assert_int_equal(rc, 0)","In the CoRPC case, if rank X receives an incoming request, rejects the incoming HLC timestamp T, proceeds to crt_corpc_req_hdlr, then it will forward the request to its children before hitting the ""if"" check added here. Will the requests to the children carrying HLC timestamps >= T? One solution is to at least ensure they carry timestamps = T. If only a few ranks' clocks are largely behind the other ranks, then they won't stop the CoRPC reaching the other ranks. The problem will be that when the replies aggregates these ""behind"" ranks won't have their local replies. I'm not sure if this is worth the trouble. Another solution is to simply do the check earlier, before forwarding. Because the former solution seems to bring little benefit, I'm leaning towards this solution.",as is this one.
"@@ -35,7 +35,7 @@ let PropertyRulesDef; */ const GLOBAL_PROPERTY_RULES = { 'class': { - blacklistedValueRegex: '(^|\\W)i-amphtml-', + denylistedValueRegex: '(^|\\W)i-amphtml-', }, 'hidden': null, 'text': null, ","/cc @choumx I can't tell if this value is actually exposed to publishers. If so, this isn't safe to change.","Self review, these literals are the same. Consider if there is a better pattern.",Seems like this is an unrelated change. Revert.,"probably no need to change type here since `GlobsDef` is a typealias to `!Array<!GlobDef>` and `GlobDef` is in turn a typealias to `string` which makes them equivalent. but it makes the input string have a bit more context, sorta like doing a type alias for string -> Url `/** @typedef {string} */ var Url;`. I dont know if this is done or valid in closure compiler annotations but we usually did this in haskell/scala. (don't feel strongly either way of course)",could we move this block somewhere into the SCE doc and link to it from here? otherwise the two copies will diverge over time,Change this line too.,Replace `http` with `https?`,Hmm. This doesn't work across multiple lines as written. Let me get back to you with a version of the regex that works across lines.,nit: this cast would look better surrounding obj right? or does it need to be on the binding?,"Is it necessary? Attribute values will be properly encoded, so there's no chance to actually insert the angle bracket into the final HTML.",Ignore above then :)
"@@ -178,9 +178,13 @@ class PickDropChannelsMixin(object): inst = self.copy() if copy else self idx = [inst.ch_names.index(c) for c in ch_names if c in inst.ch_names] + if hasattr(inst, 'picks'): inst.picks = [inst.picks[k] for k in idx] + if hasattr(inst, 'cals'): + inst.cals = inst.cals[idx] + inst.info = pick_info(inst.info, idx, copy=False) my_get = lambda attr: getattr(inst, attr, None) ",@agramfort I like this better since it's a separate issue from preloading. WDYT? cc @dengemann,Use raw or epochs with an if. Instance is internal jargon,"More DRY to just call `self._pick_projs()` at the end of `self._pick_drop_channels`, no? The one you don't technically need it for is `reorder_channels`, but that's okay because it will be a no-op there. It would however have avoided the bug that seems to be here, namely, that it seems to be missing from `def drop_channels` (right?)",@larsoner I don't really understand why `meg=True` here - shouldn't this pick only ICA channels (i.e. `misc` channels)?,why also EOG?,should probably put after `copy` even though it's about to be removed (could in 0.12 break someone's code),why do we actually have this one?,you can avoid the False as it's False by default,FYI @jona-sassenhagen this happens because of the projection vectors -- the warning about using 1 channel being dangerous was the hint :),remove this line. You do it below,"This should just automagically work. If it doesn't, I'll push a commit to fix the decorator (it's possible it has some bug)"
"@@ -52,9 +52,8 @@ class DataIterator: @classmethod def from_params(cls, params: Params): - from allennlp.experiments.registry import Registry # TODO(Mark): The adaptive iterator will need a bit of work here, # to retrieve the scaling function etc. - iterator_type = params.pop_choice(""type"", Registry.list_data_iterators()) - return Registry.get_data_iterator(iterator_type)(**params.as_dict()) # type: ignore + iterator_type = params.pop_choice(""type"", cls.list_available()) + return cls.by_name(iterator_type)(**params.as_dict()) # type: ignore ","Do we actually need the `# type: ignore` here? We don't have it in other places. Also, there is no listed return type for the method - maybe that's the reason there was a type failure?","Do we actually need the `# type: ignore` here? We don't have it in other places. Also, there is no listed return type for the method - maybe that's the reason there was a type failure?",Why doesn't this one type check?,Why doesn't this one type check?,"Can you add a return type here, and anywhere else on these where it's missing one?","Can you add a return type here, and anywhere else on these where it's missing one?",Why do we need these imports?,Why do we need these imports?,Checkout is the only object with a custom PK field name and it is not translatable.,Checkout is the only object with a custom PK field name and it is not translatable.,We need a blank line here.
"@@ -429,6 +429,11 @@ static int def_load_bio(CONF *conf, BIO *in, long *line) if (!str_copy(conf, psection, &include, p)) goto err; + if (conf->flag_abspath && !ossl_is_absolute_path(include)) { + ERR_raise(ERR_LIB_CONF, CONF_R_RELATIVE_PATH); + goto err; + } + if (include_dir != NULL && !ossl_is_absolute_path(include)) { size_t newlen = strlen(include_dir) + strlen(include) + 2; ",I'd recommend considering semantics that enforces the absolute path check only after prepending the include_dir. IMO it would be much more useful.,(style) line over 80 characters,Would be much easier to review if some of these things were a separate commit.,You need to check dst_filename != NULL after this.,And the same goes for stat(),(style) spaces required around that '=' (ctx:VxW),"hmm, while we have the less misleading ""flags / noflags"" on the UI / in the docs, we still have ""bsdflags"" in the items. not sure whether we should change this or not, maybe needs some thoughts, esp. about compatibility.","You can use D_STRNCPY() now, and are you checking path is valid here?",Is it worthwhile having case insensitive flavours of these macros?,What's the point of changing these? According to the docs they are equivalent.,There is actually no point in calling file_close(ctx) here. Just call `free_file_ctx(ctx)` which works with NULL argument.
"@@ -83,9 +83,6 @@ func testAPIDeleteOAuth2Application(t *testing.T) { oldApp := models.AssertExistsAndLoadBean(t, &models.OAuth2Application{ UID: user.ID, Name: ""test-app-1"", - RedirectURIs: []string{ - ""http://www.google.com"", - }, }).(*models.OAuth2Application) urlStr := fmt.Sprintf(""/api/v1/user/applications/oauth2/%d?token=%s"", oldApp.ID, token) ",reason to remove this?,`id` should not be zero.,This used to assume dex and pachd were all at one address - extend it to support a separate enterprise server context with different ports and/or a different address.,Can we remove the `testdata/hello_world_agreement.json` fixtures for this directory now?,I find the function name somewhat misleading because it is not doing any actual assertions. We should either pass a `*testing.T` to do actual assertions or rename the function.,maybe move this into `testhelpers` like `Intp`?,`failed to generate auth token`,TODO: whole test func has to move,Would it make sense to prefix with `ETH_`?,"I'm aware your following the example of the code that was there already -- but it's a bit silly what we're doing here, isn't it? What do we try to protect against? I can only imagine two things: 1. We're renaming ""applied"" to ""foobared"" some time in the future. Would we then change this to `const applied = ""foobared""`? I don't think so. 2. We're afraid of having typos in the code below, someone fat-fingering this into ""aplied"". What would happen? The tests where this is typo'ed in would probably fail, and the typo would be noticed. I'm having a hard time imagining a situation where a typo (which has had to slip through code review, too) turns a test into a phantom test, or some other harmful thing...   Of course it doesn't hurt either. I'm just wondering.","We don't run gofmt on none of our tests, we should probably do. I'll open a PR fixing it."
"@@ -1,9 +1,16 @@ import logging +from dvc.exceptions import InvalidArgumentError + logger = logging.getLogger(__name__) def _update_import_on_remote(stage, remote, jobs): + if stage.is_repo_import: + raise InvalidArgumentError( + ""Can't update a repo import with --to-remote"" + ) + url = stage.deps[0].path_info.url stage.outs[0].hash_info = stage.repo.cloud.transfer( url, jobs=jobs, remote=remote, command=""update"" ",~~What's a repo import?~~ Got it.,"This exception is covered in cli.py, no need to catch it here again. Btw, your command can work and is useful both inside and outside of a repo. Just don't put repo-related info if the command is run outside of a dvc repo.","Let's keep it in `dvc/tree/azure.py` for now, since it is only used there. I see that you've probably added it here for a potential to use it in the future in other remotes, which is good thinking :ok_hand: , but let's just keep it local for now. :slightly_smiling_face:",Why it's not valid? I would write that concurrent dvc process might change stage files and this graph cache might be stale.,We can make a dedicated `InvalidRemoteRepo` exception for this in `dvc.scm.base` since it seems like we may end up using it in other places as well in the future,"The first sentence is very confusing and misleading. Also hard to read because all of the parentheses. > Open file or model (path) How can I open a model or a path? > a repo (by DVC or Git) does it mean ""dvc or git repo""? > return a file object It doesn't return a file object, it returns a context manager. So this is misleading, which will lead to people trying to use it wrong and frustrating. Maybe the only easy way to explain how it works is a small example.","We should put the emphasis on ""increase your ulimit"", as that is the most reasonable approach. Also, it is better if we tell how to do it or refer to a doc.",Not sure `pull` and `fetch` help messages are different enough now. But it is definitely not worse.,Note that I added a comma too.,Nice one! Should we use it in otherplaces like `dvc/repo/__init__.py` and `dvc/repo/reproduce.py` too?,We tend to use `InvalidArgumentError` for this. You can also call the options by their CLI names and then you won't really need same checks in CLI. E.g. see dvc/repo/run.py.
"@@ -175,12 +175,16 @@ func determineSeed(shoot *gardencorev1beta1.Shoot, seedLister gardencorelisters. return nil, err } - filteredSeeds, err := filterSeedsMatchingSeedSelector(cloudProfile, seedList) + seedsMatchingCloudProfileSelector, err := filterSeedsMatchingSeedSelector(seedList, cloudProfile.Spec.SeedSelector, ""CloudProfile"") + if err != nil { + return nil, err + } + seedsMatchingShootSelector, err := filterSeedsMatchingSeedSelector(seedsMatchingCloudProfileSelector, shoot.Spec.SeedSelector, ""Shoot"") if err != nil { return nil, err } - candidates, err := getCandidates(shoot, filteredSeeds, strategy) + candidates, err := getCandidates(shoot, seedsMatchingShootSelector, strategy) if err != nil { return nil, err } ","Hmm, this will yield an unhelpful message, if there are Seeds that are matching the `seedSelector` of the Shoot, but not the one of the CloudProfile. I.e. it will say ""none out of the <n> seeds has the matching labels required by seed selector of 'Shoot'"" although, all Seeds might actually match the Shoot's selector. Can you evaluate both selectors individually and then combine the filtered set of Seeds here to be able to give a more helpful error message?","fyi, changing the type is not backward compatible change","As discussed, I would not change this field for now and only limit the adaptation of the seed selector to the `CloudProfile` (unless there is a good reason to do it also in the `Shoot`).",Why the doc string of the v1alpha1 is quite different from the doc string of the internal type. The internal doc string does not specify anything about the `*` special case.,Let's rather return an error here because of an unknown strategy instead of doing something that is unexpected for the user.,"Why is this removed? I guess we need to keep it (to not `return nil, nil`), and maybe just improve the error message?",Do I understand this correctly that test.WithFeatureGate() is executed right away (even though in the defer statement) - and returning a function that is then called by defer reverting the feature gate on the test? I had to look more than twice to understand this. Why not just setting the concrete value before the test and then the opposite in the defer? I guess here it comes to elegance vs readability.,"Hmm, why it is done like this? I think we just duplicate the consts for echa apiversion - see for example `pkg/apis/core/v1alpha1/constants/types_constants.go` and `pkg/apis/core/v1beta1/constants/types_constants.go`.",Changing default is not recommended without change the api version.,"Please, remove the backup bucket lister related code from lines 51, 82, 96.",probably unnecessary to redeclare `lookupSeriesByMetricNameMatchers` as a spanlogger with this name is created above
"@@ -741,7 +741,17 @@ static int check_id(X509_STORE_CTX *ctx) if (!check_id_error(ctx, X509_V_ERR_IP_ADDRESS_MISMATCH)) return 0; } - return 1; + + /* + * When verifying SSL server certificates, require that an + * identity be set for validating the certificate subject unless + * the X509_V_FLAG_ALLOW_NO_SUBJECT_CHECK flags is set instead. + */ + if (vpm->purpose != X509_PURPOSE_SSL_SERVER + || (vpm->flags & X509_V_FLAG_ALLOW_NO_SUBJECT_CHECK)) + return 1; + + return (vpm->hosts || vpm->email || vpm->ip); } static int check_trust(X509_STORE_CTX *ctx, int num_untrusted) ","Instead of `vpm->purpose != X509_PURPOSE_SSL_SERVER` it would have to be `vpm->purpose == X509_PURPOSE_SSL_CLIENT`. Otherwise, this breaks `X509_PURPOSE_SMIME_SIGN` and possibly others.","As others have pointed out, consider making this just a 1.3 feature; it simplifies things.",You probably want to return 0 in case X509_self_signed returns negative,Probably should call SSLerr here?,and recycle that line here :),this fix is wrong since the `pop_free` function checks for a NULL stack.,The NULL check isn't necesary.,"I'm not sure that ""allows for signing the subject"" makes sense -- isn't ""the subject"" just the Subject information present in 'subject' (the certificate)? I guess ""allows for signing subject"" would maybe be more clear that the certificate is being referenced, not the contents of it. (Yes, English grammar is unnecessarily convoluted.)",should the server allow client certificates with compression here?,This feels gratuitous enough to be removed before merging.,"Can this just read s->session->peer directly to avoid the locking? Also, since SSL_validate_ct isn't a public API, it should be lowercased: 'ssl_validate_ct'."
"@@ -236,6 +236,7 @@ func (b *BleveIndexer) Search(keyword string, repoIDs []int64, limit, start int) for _, repoID := range repoIDs { repoQueriesP = append(repoQueriesP, numericEqualityQuery(repoID, ""RepoID"")) } + index, _ := strconv.ParseInt(keyword, 10, 64) repoQueries := make([]query.Query, len(repoQueriesP)) for i, v := range repoQueriesP { repoQueries[i] = query.Query(v) ",Maybe keyword is a string?,"If the search box has two or more characters typed, then filter the aggregation with that value. Before when the aggregation was not filtered, the first 100 cookbooks would be used and if there were over 100 cookbooks then the last cookbooks would never be returned.","Doesn't this lead to an error if `len(opts.OrderBy) == 0` evaluates to true as `""id ASC"".String()` does not exist?",Shouldn't this result in error if search params are wrong (from UI there should not be such way to get there and from api you need to know that you are calling it wrong),"Do we ever run into the default case? AFAIU, we always pass a value into this function that stems from iterating over the return values of `getServiceNames()`. As the latter returns at least the empty string, we should always have exactly one element -- shouldn't we?",This makes the request fail. I am assuming the problem is that with the changes in the mapping there is no `.lower` because all values are lower. I would have assumed this would not be a problem.,Probably we should do something with this error instead of ignoring it.,"What do you think to replace `callback func(chunk.IndexQuery, chunk.ReadBatch) bool` with `callback Callback` given we have a type for that?","__EDITED__: Why does this function not examine the contents of `opts.Searcher`, and exclude repos accordingly (like `GetRecentUpdateRepositories(..)~`)?","Since you don't really use the return values you initialize, please don't use any since you're still initializing `users`","I dont get it, what does this change buy us?"
"@@ -329,13 +329,10 @@ func (a *apiServer) upsertWorkersForPipeline(pipelineInfo *pps.PipelineInfo) err workerRc, err := rc.Get( ppsutil.PipelineRcName(pipelineInfo.Pipeline.Name, pipelineInfo.Version), metav1.GetOptions{}) - if err == nil { - if (workerRc.Spec.Template.Spec.Containers[0].Resources.Requests == nil) && *workerRc.Spec.Replicas == 1 { - parallelism = 1 - resourceRequests = nil - resourceLimits = nil - } + if err != nil { + log.Errorf(""error from rc.Get: %v"", err) } + // TODO figure out why the statement below runs even if there's an error // rc was made by a previous version of pachyderm so we delete it if workerRc.ObjectMeta.Labels[""version""] != version.PrettyVersion() { if err := a.deleteWorkersForPipeline(pipelineInfo); err != nil { ",Shouldn't we be returning the error if there is an error here? I noticed you have a todo below to find out why the statement below is running when there is an error.,Why is the error ignored?,Same problem with using address of for-loop variable.,Have you considered changing the initial `oldestPendingRequestCreatedAt := now` setting it to `time.Time{}` and then here checking `if !oldestPendingRequestCreatedAt.IsZero()`? I'm mentioning it because I think it's a bit hard to understand why we check `! .Equal(now)` (which is theoretically legit) while you wanna actually check if it was never set.,"I actually think we may want to retry deleting the pipeline resources here, if possible (kubernetes might be transiently unavailable). I wrote a suggestion above to change `failPipelineError` to `errRetryStep` that might allow this codepath to be retried in the same way as the others. If it turns out `errRetryStep` won't work and we can't feasibly retry here, it's not a huge deal because `pollPipelines` should eventually come around and retry itself, but I think `errRetryStep{}` might be an improvement over that, since `pollPipelines` might not come around for a several minutes.",This will only update metrics after all delete requests have plans for them built. Is that OK?,"If we delete an `External` replacement by replacing it with a non-`External` replacement, does that show up as a `OpDeleteReplaced` here or `OpReadRemove`?","If we delete an `External` replacement by replacing it with a non-`External` replacement, does that show up as a `OpDeleteReplaced` here or `OpReadRemove`?","If we delete an `External` replacement by replacing it with a non-`External` replacement, does that show up as a `OpDeleteReplaced` here or `OpReadRemove`?","[open question, just to understand] I'm wondering if this `else if` should actually be an `if {`. What if the previous `if` branch deletes the latest `p.usersWithPendingRequests`?","This is a cause of flakyness. When this code is executed, the pending request may have already been picked up."
"@@ -1018,8 +1018,17 @@ def while_loop(cond, body, loop_vars, is_test=False, name=None): return loop_vars while_loop_block = While(pre_cond, is_test, name) + with_mutable_vars = assert_with_mutable_vars(loop_vars) with while_loop_block.block(): - output_vars = body(*loop_vars) + # If a variable with mutable type is included in vars, like `dict/list`, + # modifying them in the body function will cause origin variable be modified + # synchronously. This will raise an assignment error out of while block. + # Here we make a copy of the mutable object to aviod this problem. + if with_mutable_vars: + new_loop_vars = copy_mutable_vars(loop_vars) + output_vars = body(*new_loop_vars) + else: + output_vars = body(*loop_vars) if not isinstance(output_vars, (list, tuple)): output_vars = [output_vars] if len(output_vars) != len(loop_vars): ","Grammatical error: ""cause origin variable be modified"" to ""cause origin variable to be modified""","Grammatical error: ""cause origin variable be modified"" to ""cause origin variable to be modified""","Remove ""and types"" in the ValueError message because you set `check_types=False` when calling `assert_same_structure`. However, it's not your fault. I found the old code was wrong here, too. :-)","Remove ""and types"" in the ValueError message because you set `check_types=False` when calling `assert_same_structure`. However, it's not your fault. I found the old code was wrong here, too. :-)","""thses variables can be obtained"" -> ""these variables can be fetched"".","""thses variables can be obtained"" -> ""these variables can be fetched"".",I probably will make a follow up PR to refactor it with `ir_utils.fixup_var_define_in_scope`,"I'm happy with this choice of name, thanks for altering it!","This is not a big problem, since Python 3.5 will reach EoL relatively soon.","Should also consider `[ ]` form, which is in `transform_list_comprehension`","Don't remember why I added this, remove and see if anything is broken?"
"@@ -39,11 +39,12 @@ KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(COARSE_VELOCITY) KRATOS_CREATE_VARIABLE(double,FIC_BETA) // Adjoint variables -KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(ADJOINT_FLUID_VECTOR_1) -KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(ADJOINT_FLUID_VECTOR_2) -KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(ADJOINT_FLUID_VECTOR_3) KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(AUX_ADJOINT_FLUID_VECTOR_1) +KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS_WITH_TIME_DERIVATIVE(ADJOINT_FLUID_VECTOR_3, AUX_ADJOINT_FLUID_VECTOR_1); +KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS_WITH_TIME_DERIVATIVE(ADJOINT_FLUID_VECTOR_2, ADJOINT_FLUID_VECTOR_3); +KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS_WITH_TIME_DERIVATIVE(ADJOINT_FLUID_VECTOR_1, ADJOINT_FLUID_VECTOR_2); KRATOS_CREATE_VARIABLE(double, ADJOINT_FLUID_SCALAR_1) +KRATOS_CREATE_VARIABLE(Vector, PRIMAL_RELAXED_SECOND_DERIVATIVE_VALUES) // Non-Newtonian constitutive relations KRATOS_CREATE_VARIABLE(double, REGULARIZATION_COEFFICIENT) ",mmm... are these time derivatives?,I propose you call them `FAR_FIELD_*` instead of `*_INFINITY`.,"Just one thing, be sure to define what each parameter means",Which is the intended use of this variable?,"Very minor detail: I would ask you to create this variable in the section solver parameters a bit lower in this file, right after we create MACH_LIMIT. The reason is to try to have the variables a bit organized according to categories, for me flow field magnitues are variables that have a physical meaning and solver parameters are parameters that are required from the numerics","There is already a PENALTY parameters in the core, called INITIAL_PENALTY",I am astonished this doesn't exist yet,@GuillermoCasas Do you agree with the change?,"this would be ""gamma""?",This should be renamed to `NODAL_DISPLACEMENT_STIFFNESS` to be consistent It is not a heavily used variable so I would choose consistency over not wanting to break code,This variable is defined in the Structural?
"@@ -1,12 +1,15 @@ // Licensed to the .NET Foundation under one or more agreements. // The .NET Foundation licenses this file to you under the MIT license. +using System; + namespace System.Configuration { public enum SettingsSerializeAs { String = 0, Xml = 1, + [Obsolete(Obsoletions.BinaryFormatterMessage + @"". Consider using Xml instead."", false)] Binary = 2, ProviderSpecific = 3 } ",This is a change to public surface area. I would have expected the ref to also be updated with this.,On line 34: NullReferenceException will be thrown when provider is `null`.,I'm not sure I see what requires unreferenced code in this constructor.,NIT: `string? namespaceURI`?,On line 95: * `elementName` and `ns` should be nullable. * NullReferenceException is thrown if `members` is `null`.,unfortunate assert below... you might consider fixing,It would be general goodness to change all these to be const too.,most likely `internalSubset` should be nullable (looking at other classes and no guarding against null),"Many overloads that funnel into this one should be able to receive null values but are not annotated as such. See lines 159, 164, 168 & 172.","From doc for all overloads `XmlNameTable nt, XmlNamespaceManager nsMgr, string xmlLang` are all nullable",On line 31: `typeName` should be nullable.
"@@ -3130,7 +3130,7 @@ void ByteCodeGenerator::ProcessCapturedSym(Symbol *sym) FuncInfo *funcHome = sym->GetScope()->GetFunc(); FuncInfo *funcChild = funcHome->GetCurrentChildFunction(); - Assert(sym->NeedsSlotAlloc(funcHome) || sym->GetIsGlobal() || sym->GetIsModuleImport()); + Assert(sym->NeedsSlotAlloc(funcHome) || sym->GetIsGlobal() || sym->GetIsModuleImport() || sym->GetIsModuleExportStorage()); // If this is not a local property, or not all its references can be tracked, or // it's not scoped to the function, or we're in debug mode, disable the delayed capture optimization. ",do you need to make change to ByteCodeGenerator::InitBlockScopedNonTemps ? #Resolved,Is it necessary to do this initialization of export memory at runtime? It seems like it could be done when we allocate the memory.,"Nit: coding style isnt a big deal for us, but I think we usually avoid using `this->` unless it is to avoid ambiguity.",What's the syntax that would get us here?,Can a module export be declared in a block scope? I'm wondering how sym->GetIsModuleExportStorage() can be true.,"So this means that the ref here is coming from a nested function, correct? I'm not following what this is always the case, versus a ref coming from an enclosing scope. I will admit my understanding of the PidRef model is not good.",EnsureScopeSlot() also does a NeedsSlotAlloc check.,Compare with lines 5146-5150. Important point is we must check if this Sym needs reloading based on its BackEndId (see line 5140 compared with line 5148.,"I want to call out here that fall through into the rest of `EmitPropStore` is intentional, whereas if you look at `EmitPropLoad/Typeof` they both stop at this point. The intention is that this way we don't need `EmitUseBeforeDeclarationRuntimeError` to do something special to make the bytecode well-formed. Instead we just let `EmitPropStore` do the thing its always done, except it is preceeded by a `RuntimeError` opcode. We could consider taking this further and removing the `LdUndef` from `EmitUseBeforeDeclarationRuntimeError` and making `EmitPropLoad/Typeof` also continue after emitting the `RuntimeError` bytecode, but I think that is out of scope at this point in the release. No need to stir that up.",So is the this symbol created only when there's a reference to this?,I assume this is no longer true because the exports are now considered local to the top-level function body?
"@@ -247,6 +247,7 @@ define([ } var i; + var j; var len; // Clear the render list. ","At some point in this function, the quadtree should know (or could know) if we reached a leaf node, and we could use this to let the tile's billboards know that we reached the maximum level and they don't need updates.",`time` isn't used.,Do you think we should do this before `_primitives.update` so all ground primitives are drawn below all primitives if both were to have `GroundPrimitive`s?,Add a getter for `colorTexture` inside `BrdfLutProcessor` so we don't access a private variable.,You can combine these two ifs,Place this in `function render` instead.,I would just remove this option and always copy depth.,Remove this. Note the `@type` above.,"Property names for the cache don't seem to follow any kind of known naming scheme, so what about name collisions? One option is to list all of the ""known names"" and initialize them as undefined, this way we are also not modifying the literal at runtime (performance benefit). Another option would be to follow a well defined scheme, like objectName_propertyName.","Are we sure about this? If we are sure that every app will need this or it is super fast (like 3m), can't we do it cleanly in a separate WebGL context initialization function instead of maintaining the `executed` state? Otherwise, let's only create this when we know there's a shader that will need it. To start it could be as simple as ""were any glTF models loaded?""",What if stencil is not supported? Shouldn't we fall back to just depth?
"@@ -3133,6 +3133,16 @@ class FirstPass(NodeVisitor): func._fullname = self.sem.qualified_name(func.name()) if kind == GDEF: self.sem.globals[func.name()] = SymbolTableNode(kind, func, self.sem.cur_mod_id) + if func.impl: + # Also analyze the function body (in case there are conditional imports). + sem = self.sem + sem.function_stack.append(func.impl) + sem.errors.push_function(func.name()) + sem.enter() + func.impl.body.accept(self) + sem.leave() + sem.errors.pop_function() + sem.function_stack.pop() def visit_class_def(self, cdef: ClassDef) -> None: kind = self.kind_by_scope() ",Hmm... Refactor this to merge with the nearly identical block in the previous method?,This explanation is not very clear. I would rather say that we don't add function top-level functions when we just enter each of it during second phase of analysis -- processing of functions. Also I would rather explain _why_ this is needed (I agree that this looks reasonable).,`We only interpred` -> `We only interpret a`,"The return type doesn't look right. I suspect the issue is that self check isn't running right now at all, so these won't be caught by CI.",Add docstring and describe the argument. Also discuss when it's okay to leave it out.,A namespace can be deferred while it's incomplete. I think that we should also remove the namespace from incomplete namespaces if it's complete. Now it looks like that we sometimes don't remove the namespace from `incomplete_namespaces` even though we probably should.,Typo: extra s in definitions,What about having a context manager that temporarily sets `self.cur_node` and using it here (and elsewhere where it makes sense)?,"It seems like adding an extra parameter to fail function might not be the best way to do it. I would try to keep this function generic for any kind of failures. Perhaps, you can check if the error is in the caller.","This is not important, but it looks a bit strange that you need to set _both_ flags here.","Style nit: I'd prefer two nested with statements, as otherwise the second context manager is easy to miss."
"@@ -230,7 +230,7 @@ int d_fault_attr_err_code(uint32_t fault_id) { struct d_fault_attr_t *fault_attr; - uint32_t err_code; + int32_t err_code; fault_attr = d_fault_attr_lookup(fault_id); if (fault_attr == NULL) { ",Also don't need the case in return;,copyright date update needed,copyright date is way out of date on this file,"I thought the advantage of the new interface was this could be static, so the lookup only needed to happen once, having this on the stack means that both fault_attr_lookup() and d_should_fail() will be required for every call-site?",(style) 'dedup' may be misspelled - perhaps 'dedupe'? (style) 'dedup' may be misspelled - perhaps 'dedupe'?,"This is interesting because some of the datamover tools (`dcp --preserve`) will try to copy the ownership. It's simple enough for `dcp` to just ignore `chown` for DFS. But a dfuse path is just seen as a POSIX path to `dcp`, so the `chown` call will always fail if a dfuse path is given as the destination to `dcp --preserve`. Certainly not something that dfuse itself should have to worry about, but I wonder if there is a ""conditional"" chown that only runs if the owners are actually different? (Of course, `dcp` could always stat and check itself)","I don't think this is a proper solution. `sizeof(long double) == sizeof(double)` on many platforms and the problem remains. `ULONG_MAX + 1` can be exactly represented as a double. Unfortunately, `ULONG_MAX + 1` isn't calculable directly. I'll have a think about solutions....",What problem does the original order have?,(style) line over 80 characters,"any reason why not change line 308 instead, and add error check to ensure val >=0 for strcmp cases when value is not expected to be negative?",This will be called even if d_mm_init() fails.
"@@ -382,11 +382,9 @@ static int rsa_get_ctx_params(void *vprsactx, OSSL_PARAM *params) } p = OSSL_PARAM_locate(params, OSSL_ASYM_CIPHER_PARAM_OAEP_LABEL); - if (p != NULL && !OSSL_PARAM_set_octet_ptr(p, prsactx->oaep_label, 0)) - return 0; - - p = OSSL_PARAM_locate(params, OSSL_ASYM_CIPHER_PARAM_OAEP_LABEL_LEN); - if (p != NULL && !OSSL_PARAM_set_size_t(p, prsactx->oaep_labellen)) + if (p != NULL && + !OSSL_PARAM_set_octet_ptr(p, prsactx->oaep_label, + prsactx->oaep_labellen)) return 0; p = OSSL_PARAM_locate(params, OSSL_ASYM_CIPHER_PARAM_TLS_CLIENT_VERSION); ",I wonder if this should really be an octet_string instead of an octet_ptr?,Make sure to initialise `p2`,Huh?? I wonder why?,I was thinking along the same lines here. The alternative is putting the variables into the ctx which seems like overkill.,These aren't required. Values are created on demand when parsing definitions. The reason that _yes_ and _no_ are treated specially is to avoid lots of look ups when checking Booleans. With this change we're moving away from Booleans and we could reconsider having these special values entirely.,There should be a blank line before this one. We separate declarations from code.,This introduces end of line whitespace.,Maybe a NULL check inside the function is a good idea?,Static analyser will not like derefs on the pkey followed by a check for pkey == NULL.,Oh! This didn't show when I looked at the commit that implements this change...,What is the rationale for ignoring errors from this? Unknown parameters are ignored and a success returned. An error indicates that something has gone tangibly wrong with the request.
"@@ -163,6 +163,14 @@ export class UrlReplacements { return removeFragment(info.sourceUrl); })); + this.setAsync_('SOURCE_URL', () => { + return getTrackImpressionPromise().then( + this.getDocInfoValue_.bind(this, info => { + return removeFragment(info.sourceUrl); + }) + ); + }); + // Returns the host of the Source URL for this AMP document. this.set_('SOURCE_HOST', this.getDocInfoValue_.bind(this, info => { return parseUrl(info.sourceUrl).host; ",I think there is a problem here: Doc info eagerly reads `location.href` and never reads it again after.,Please provide sync alternatives to these that do not wait for the promise,This method might need to stay inside `viewer-impl`,@brandondiamond Is the trailing `=` right?,This is young enough. We must require this here.,"if two requests share the same fullUrl, Wouldn't `ampCustomadXhrPromises[fullUrl]` be replaced by the second request.",Can we make this `!AccessSource`. I'd rather this were to fail if the wrong index is requested.,"Since lightbox gallery was the only user of this function (`installAutoLoadExtensions`), I went ahead and deleted it. Is there good reason to keep it alive? cc @rsimha-amp",Is this related to the rest of this PR?,"+1 for keeping PRs small but I think we should still ship things that work. This PR loads and runs more code, but doesn't add any feature. Should we have one PR to add the dependency (this one), but keep this code for a separate one that adds the feature? I don't feel strongly so I'm still approving it, up to you :)",You could just pass a4aElement from which you can get win and checkStillCurrent
"@@ -106,6 +106,16 @@ class Search_Replace_Command extends WP_CLI_Command { return $wpdb->get_col( $wpdb->prepare( ""SHOW TABLES LIKE %s"", like_escape( $prefix ) . '%' ) ); } + private static function fast_handle_col( $col, $table, $old, $new, $dry_run ) { + global $wpdb; + + if ( $dry_run ) { + return $wpdb->get_var( $wpdb->prepare( ""SELECT COUNT(`$col`) FROM `$table` WHERE `$col` LIKE %s;"", '%' . like_escape( esc_sql( $old ) ) . '%' ) ); + } else { + return $wpdb->query( $wpdb->prepare( ""UPDATE `$table` SET `$col` = REPLACE(`$col`, %s, %s);"", $old, $new ) ); + } + } + private static function handle_col( $col, $primary_keys, $table, $old, $new, $dry_run, $recurse_objects ) { global $wpdb; ",`fast_handle_col` should be `sql_handle_col()`. Let's also rename the other method.,`fast_handle_col` should be `sql_handle_col()`. Let's also rename the other method.,"Please wrap this conditional in braces, and break the statement with newlines.","Please wrap this conditional in braces, and break the statement with newlines.","When a warning is issued, the command continues. When an error is issued, the command exits with status 1. So, you should use `WP_CLI::error()` here, which automatically calls `exit(1)`.","When a warning is issued, the command continues. When an error is issued, the command exits with status 1. So, you should use `WP_CLI::error()` here, which automatically calls `exit(1)`.",Can you use `PHP_EOL` instead of `\r\n` ?,Can you use `PHP_EOL` instead of `\r\n` ?,Why is this removed?,Why is this removed?,"`?` is also a glob. WP coding style: `false !== strpos( $table, '*' )`"
"@@ -31,6 +31,7 @@ public class ProjectLaunchImplTest extends TestCase { public static void testParseSystemCapabilities() throws Exception { Workspace ws = Workspace.getWorkspace(IO.getFile(""test/ws"")); Project project = ws.getProject(""p1""); + project.getTarget().mkdirs(); String systemCaps = null; try { ",Do you really need to mkdirs() here? I would think you just need `project.prepare()` which will make that target folder if necessary. Can you try that instead?,I would just skip defining `WORKSPACE_TMP` in this case.,Can you please explain the rationale around the removal of these assertions?,"This is an example that XShell handles, output redirection.",why a mock ?,Why remove the ability to add extensions when you create a project? I find the feature quite useful.,Sounds like an error suppression. Could you please explain this change a bit?,"This log message is not particularly useful. * Never use multiple exclamation points, or I shall be forced to quote Terry Pratchett   In fact, it's fine to use none at all. * Which agent? (`build.getBuiltOn()` perhaps?) * Perhaps it would be useful to include the status of the agent, if safely feasible? * Which project? * In fact, it's even a misleading statement: The workspace is perhaps _undefined_, as Jenkins _creates_ it if defined a few lines up. So the problem isn't existence (on the file system). * It's not a severe error of the system. `WARNING` should be fine. With the current lack of information, the log message is pretty much useless.",@gsmet you should be more confident in what I am saying with this :),"Should we add these into a list of something? Probably not useful now, but we may see more exceptions like these. WDYT?",The reason should be passed in the exception message. Otherwise the user will not see the root cause in the build log
"@@ -405,13 +405,8 @@ int dgst_main(int argc, char **argv) } else { const char *sig_name = NULL; if (!out_bin) { - if (sigkey != NULL) { - const EVP_PKEY_ASN1_METHOD *ameth; - ameth = EVP_PKEY_get0_asn1(sigkey); - if (ameth) - EVP_PKEY_asn1_get0_info(NULL, NULL, - NULL, NULL, &sig_name, ameth); - } + if (sigkey != NULL) + sig_name = EVP_PKEY_get0_first_alg_name(sigkey); } ret = 0; for (i = 0; i < argc; i++) { ","This is very dodgy. One alias to the HMAC signature algorithm and the test may randomly go **BAMF**, because you might end up with, oh I don't know, ""id-Hmac"". This is a case where the application has more accurate knowledge than libcrypto, as it really has *all* the data it needs to know exactly what names it's asking for. It's quite a simple program after all...","So the ""good case"" is `(pem_str == NULL) == ((flags & ASN1_PKEY_ALIAS) != 0))` ...",I suppose this is really an impossible error condition. However please note the pkey value is used in the following call as well. So perhaps it would be just better to do `if (pkey == NULL) break;` ?,The NULL check isn't necesary.,"You are changing the output here - with no ""Order OK"" - did you intent to mix that in here?","So while you're making new public functions out of the others, this one you're making internal... it seems inconsistent, wanna tell me why?","Shouldn't this change (also in in the doc) to `""sha256""`?",Could you add a blank line above this. I know it's pre-existing but worth fixing the style problem while you're here.,Why? Is this still necessary now that #11808 has gone in?,Any reason why you removed the assertion?,This seems not necessary anymore in 3.0.0. I recall @levitte resolved this to automatically set the SM2 tag when loading a key.
"@@ -165,7 +165,9 @@ define([ that.state = Cesium3DTileContentState.FAILED; that._readyPromise.reject(error); }); + return true; } + return false; }; /** ","Since we prefer early return, flip the above `if(defined(promise))` check and return false immediately to make the code cleaner.","Add a `@private` property getter for this. Otherwise, it looks like this is not used.",Shouldn't `contentReady` determine if the content is renderable? Would it make more sence to make sure it's non-empty and also if the content is ready?,"The one thing I don't like about this, is the naming of this function... I think it's a bit confusing, and would be better renamed to something like `rejectImpl` or something. I'm not sure everyone else would share this same opinion, though.","Can we check only the `error` attribute? That way when the media changes src, it'll clear the error out.",return here would need EventTarget too?,"This is a reference compare; instead, we would want to check each element in the array. However, I actually want to change how we expose `map` and `default`. Let's expose the ""compiled"" version, which uses `Color` like we do elsewhere (we'll want to do the same thing for color ramp), not the style JSON version.","> ... and functions ... No, JavaScript does not report the type of a function as an object, even though they are object-like. `isObject()` will return false for functions","Lookbehinds are brand new, impossible to polyfill.",Ditto: we just turned a user error into a dev error.,Is there a case where `currentSrc` is falsey?
"@@ -350,7 +350,7 @@ def test_generalization_across_time(): reg = KernelRidge() def scorer_proba(y_true, y_pred): - roc_auc_score(y_true, y_pred[:, 0]) + return roc_auc_score(y_true, y_pred[:, 0]) # We re testing 3 scenario: default, classifier + predict_proba, regressor scorers = [None, scorer_proba, scorer_regress] ",fixes missing return in previous PR,Recommend using `np.asarray` instead of `np.array` to avoid unnecessary copy.,"what's the difference between 'def prob' and 'def probs', why do we need 'def prob' ?","what's the difference between 'def prob' and 'def probs', why do we need 'def prob' ?",the min here is because e.g. babi only has 6 candidates!,"you generally want .float and then a `.type_as` later on, to switch BACK to fp16 if needed.",If this attribute is not set at construction time it should end with an underscore.,can you avoid the 4 if and use just one with some 'and' thx,"No need for back tick in error message, they don't render","scoring is missing in the doc: You can add there the lines I suggested above to explicit what is going on. Formally, I think it's not perfect because that means the functions does very different things depending on the input (i.e. X becomes a y_pred), but I guess it's private so we'll deal with it.",does this not fit on one line? Also using self.assertEqual would be better
"@@ -225,6 +225,12 @@ func resourceCloudFunctionsCreate(d *schema.ResourceData, meta interface{}) erro if err != nil { return err } + // We do this extra validation here since most regions are not valid, and the + // error message that Cloud Functions has for ""wrong region"" is not specific. + _, errs := validCloudFunctionRegion(region, ""region"") + if len(errs) > 0 { + return errs[0] + } cloudFuncId := &cloudFunctionId{ Project: project, ","I see, the provider-level region skips the field validation. May be add a mention about this here?","If done here, this check should be done not only for `Spec.Provider.InfrastructureConfig`, but for all fields that are of type `RawExtension` and may contain provider configuration. These are (but please double-check if I haven't missed anything): * `Spec.Provider.ControlPlaneConfig` * `Spec.Extensions[].ProviderConfig` * `Spec.Networking.ProviderConfig` * `Spec.Provider.Workers[].ProviderConfig` * `Spec.Provider.Workers[].Machine.Image.ProviderConfig` * `Spec.Provider.Workers[].CRI.ContainerRuntimes[].ProviderConfig`","What does ""no higher non-preview version"" mean? I'm confused by the word ""higher"" ?!","If there are valid other places that can give this resource a trailing period, I guess we may want to walk back on adjusting this particular attribute and allow it to still handle both with and without the trailing period. I'd rather avoid changing the ACM validation record behavior since that could affect interactions with DNS systems outside of AWS.",what is the difference between the 2 cloudformation packages?,I guess it should be rather `field.Invalid` or `field.Forbidden`,"This change is not really needed for my pull request. Before I made changes below, the code was unable to find the field that failed validation inside embedded anonymous struct, and I got panic due ErrorMsg being not set. I decided to add this so the code won't crash in similar cases (which should not happen unless there's a bug). In my opinion, the entire function is somewhat sloppy and needs rewriting. I only modified it as much as I needed, and didn't try to refactor it.","As for `diff_suppress_funcs.go`, I suggest renaming `validateCloudFormationTemplate` to `validateStringIsJsonOrYaml`.","`UpdateTags` method internally will apply the `IgnoreAWS()` functionality and be able to handle `keyvaluetags` type, but not the `elasticsearchservice.Tag` type as `keyvaluetags.New` does not have logic to handle this type","Sorry I know this is a hassle   but can you please rename all these to: * function names: `resourceAwsBudgetsBudget` * resource itself: `aws_budgets_budget` This is so we can: * Easily keep the service resources grouped together (e.g. `aws_budgets_notification`, `aws_budgets_subscriber`) * Prevent confusion with any other AWS service that may refer to a ""budget""",Drive by note: We'll probably be looking for including `_ec2` in the resource name.   Trying to get better about denoting the AWS service to prevent future collisions/confusion.
"@@ -1,4 +1,6 @@ class DeepLinksController < ApplicationController + AASA_PATHS = [""/*"", ""NOT /users/auth/*""].freeze + def mobile; end # Apple Application Site Association - based on Apple docs guidelines ","_I think_ this is the correct way to freeze this array, but I'm open to any suggestions to improve it (or fix it altogether if I'm not even close to how it should be   )","this one isn't working, need to dig in more to debug it","this one isn't working, need to dig in more to debug it",Do we need to unset this so that it doesn't leak into other tests?,"@benhalpern Do you happen to know why this is necessary? I feel like we should be able to remove it, but I didn't want to recreate a bug that this is hiding.",same note about `# TODO: [thepracticaldev/oss]`,Should this use `URL.url` (and maybe update that method if necessary)?,"no need for a `try` here, once it exists in discourse_defaults it is safe to use. That said, I say we just kill the setting altogether, it is not named right. `ignore_anon_views_on_private_sites` is probably more correct, but it a mouthful. Let's offer no setting, then if someone complains they need a setting we can consider adding it.",This needs to default to the `two_factor_options_url` if both of those checks are false.,This needs to default to the `two_factor_options_url` if both of those checks are false.,"I would think this and others like this should be `include (""#{ApplicationConfig['COMMUNITY_NAME']} Shop"")`"
"@@ -84,7 +84,6 @@ class JavaThriftLibrary(JvmTarget): def include_paths(self): return self._include_paths - # TODO(Eric Ayers) As of 2/5/2015 this call is DEPRECATED and should be removed soon @property def is_thrift(self): return True ","Perhaps instead of adding a new call for is_thrift, this could move to a different pattern. Maybe it could look for the class instead via isinstance. It looks like the deprecation plan for the associated `is_*` methods involved types via marker mixins.",Could you expand the description of #4535 to account for this new layer of indirection?,"It's not necessary to add user to the url, as we also provide the login config anyway to the webdav Client.","I agree with muting this warning in principle because it has been verbose, and the reason in the commit msg makes sense. Writing the full message looks potentially fragile though as that feels like it may change faster than the actual warning. Is there some kind of warning category that we can use to describe this warning in a more generic way?",Ditto on the question whether this annotation is still required?,"This does have a minor performance hit to convert from `OrderedSet` to `FrozenOrderedSet`. I looked at refactoring this code to use a comprehension so that we can use `FrozenOrderedSet`, but it doesn't seem possible with the `while` loop. We could choose to have `TransitiveHydratedTargets.closure` use `OrderedSet` instead of `FrozenOrderedSet`, but, from the start, the entire purpose of these `ordered_set` changes has been for this particular use case to make THTs safer..So, I think it's worth it to get the safety of immutablity + hashability.","This try-except was masking a bug in my code that I didn't discover until after I removed it. Personally, I think we shouldn't be catching the exception, and raise an error if a non-existent test function is requested. For most build systems, we implement an empty test method with `pass` anyway, so it shouldn't fail.",This was modifying the `path` used during walking.,Why do you need these three `bool`s here?,"What are the code changes needed for? This one seems like a real logic change. (Though a correct one, I suspect!)","Similar to above, this should probably be `current_target()`."
"@@ -224,6 +224,16 @@ class Environment: self._values[k] = new_value return self + def to_dict(self): + ret = OrderedDict() + for varname, varvalues in self._values.items(): + value = self._format_value(varname, varvalues, """", os.pathsep) + ret[varname] = value + return ret + + def apply(self): + return _environment_add(self.to_dict()) + class ProfileEnvironment: def __init__(self): ","Maybe for the variable access we should provide access to the ""structure""? Like if it is a list of items, it should be a list of items, not always a string that they will need to parse? I also understand the reason for always a string, to resemble the native env-vars, just a question.","OK, but between reading the messages, it's already done and pushed.",This actually fixes a bug. Maybe it should be a separate PR?,It won't be expanded in python. So any build helper or recipe using vcvars will get a wrong value here.,Why do we have this return value? This method operates solely on side effects - it modifies the `env` passed as an argument or `os.environ`. Where is it useful to chain calls on this method? I think returning a value gives the wrong impression that the object passed as argument and the return value are independent and this can be combined in a functional style.,I think this needs to go in `conda-meta/`. That's the location that's completely off limits to packages. Otherwise any rando package on anaconda.org could overwrite that location.,"I don't think `decoding` is idempotent, so this method will only work the first time you call it? In which case, maybe call it `_decode_and_copy_env` or something, so that somebody doesn't try to use it to just copy.",Maybe wrap the parse from text functionality in the EnvValues too? Seems have some duplication with parsing ``conaninfo.txt``,this line is over 80 chars long; please shorten.,"I think it makes sense to keep these, as there are still good reasons a package developer might want to use them in `install()`. Mainly, if they want to make environment changes _only_ for the build that _won't_ go into a module. Modifications to `CC`, `CXX`, etc. probably fall into this category most of the time.",This is done in order to mimic the same behavior as ``cpp_info.name`` and have default names in components (simplifies syntax in recipe)
"@@ -147,9 +147,9 @@ public class AWSJobConfigurationManager extends JobConfigurationManager { if (jobConfigDir.exists()) { LOGGER.info(""Loading job configurations from "" + jobConfigDir); final Properties properties = new Properties(); - properties.setProperty(ConfigurationKeys.JOB_CONFIG_FILE_DIR_KEY, jobConfigDir.getAbsolutePath()); + properties.setProperty(ConfigurationKeys.JOB_CONFIG_FILE_GENERAL_PATH_KEY, jobConfigDir.getAbsolutePath()); - final List<Properties> jobConfigs = SchedulerUtils.loadJobConfigs(properties); + final List<Properties> jobConfigs = SchedulerUtils.loadGenericJobConfigs(properties); LOGGER.info(""Loaded "" + jobConfigs.size() + "" job configuration(s)""); for (Properties config : jobConfigs) { LOGGER.debug(""Config value: "" + config); ",Please also change the config property name in conf/aws/application.conf,Let me have a deeper look here. This change is not correct because the idea is to able to poll HDFS directories too.,You can use `JobConfigurationUtils.putPropertiesIntoConfiguration` for this.,shouldn't you be passing in `jobProps.getProperty(ConfigurationKeys.JOB_TEMPLATE_PATH)` instead?,"Does this config cause any problem? AFAIK, it copied from deltastreamer.",Seems wrong imports,"Can you move the creation of the `FileSystem` into its own method (something like `buildFileSystem`), so that the `super` declaration isn't so long.",you can use stringutils here,Please make name consistent with above property: job.hdfs.jars.,Please use `Strings.nullToEmpty(configuration.get(MRJobConfig.MAP_JAVA_OPTS))`,Can there be any recovery from this exception?
"@@ -26,10 +26,6 @@ namespace Microsoft.Xna.Framework.Graphics this.VertexCount = vertexCount; this.BufferUsage = bufferUsage; - // Make sure the graphics device is assigned in the vertex declaration. - if (vertexDeclaration.GraphicsDevice != graphicsDevice) - vertexDeclaration.GraphicsDevice = graphicsDevice; - _isDynamic = dynamic; PlatformConstruct(); ",We could live with this maybe... although I expect XNA does set it. I wonder how many people have as a hack assumed they could fetch the graphics device via `VertexDeclaration.GraphicsDevice`.,Should we `_selfReference = null` after removing it?,Should we `_selfReference = null` after removing it?,We could live with this maybe... although I expect XNA does set it. I wonder how many people have as a hack assumed they could fetch the graphics device via `VertexDeclaration.GraphicsDevice`.,I guess the idea here is that `GraphicsResource.DisposeAll()` is taking care of calling `Effect.Dispose()`?,I guess the idea here is that `GraphicsResource.DisposeAll()` is taking care of calling `Effect.Dispose()`?,Should this.material be initialized in the constructor to undefined instead of a Color material?,We should add either to these docs or somewhere that this feature only works on some platforms. Might even call out DX and GL platforms specifically since that is all that is supported.,We should add either to these docs or somewhere that this feature only works on some platforms. Might even call out DX and GL platforms specifically since that is all that is supported.,@mjkkirschner I don't think we need to override `OnRenderPackagesUpdated` here anymore as we have already made the necessary changes to it in the base class above.,"Let's cleanup all the branches before calling `initialize`. Why not just call it every time and rely on its `shader._program` check? This will have no performance impact. I expect more changes here later as we try to take advantage of async shader compiling and linking, depending on how/when WebGL in workers comes."
"@@ -479,7 +479,7 @@ All jobs created by a pipeline will create commits in the pipeline's repo. createPipeline.Flags().StringVarP(&pipelinePath, ""file"", ""f"", ""-"", ""The file containing the pipeline, it can be a url or local file. - reads from stdin."") createPipeline.Flags().BoolVarP(&pushImages, ""push-images"", ""p"", false, ""If true, push local docker images into the cluster registry."") createPipeline.Flags().StringVarP(&registry, ""registry"", ""r"", ""docker.io"", ""The registry to push images to."") - createPipeline.Flags().StringVarP(&username, ""username"", ""u"", """", ""The username to push images as, defaults to your OS username."") + createPipeline.Flags().StringVarP(&username, ""username"", ""u"", """", ""The username to push images as, defaults to your docker username."") createPipeline.Flags().StringVarP(&password, ""password"", """", """", ""Your password for the registry being pushed to."") var reprocess bool ","Small nit: we should probably be prompting for password interactively by default, rather than asking people to input it as part of the command","If the added above before terminal, here too.",If we moved this value out in to a var then this could be made compile/link time settable,Where is this coming from? Feels like it would break compilation,Breaking CLI change.,"With a default setting here `ctx.IsSet(""pid"")` below will always be set to true",Kindly update the docs to reflect the new flag,"These should be constants, i.e. `Local` and `Source`",@deads2k i'm removing a dependency on pkg/cmd here by making a copy of the BuilderServiceAccountName constant... appropriate?,let's change this to `image-store` to be consistent with `volume-store`,"Similar to above, would `BoolVar(&rbac, ""rbac"", true, ...)` be clearer than `BoolVar(&noRBAC, ""no-rbac"", false, ...)`?"
"@@ -1975,6 +1975,18 @@ def find_bad_channels_maxwell( .. versionadded:: 0.20 """""" + if h_freq is not None: + if 'lowpass' in raw.info: + msg = (f'The input data has already been low-pass filtered with a ' + f'{raw.info[""lowpass""]} Hz cutoff frequency. If you wish ' + f'to avoid filtering again in find_bad_channels_maxwell(), ' + f'please pass `h_freq=None`.') + logger.warning(msg) + + logger.info(f'Applying low-pass filter with {h_freq} Hz cutoff ' + f'frequency ...') + raw = raw.copy().filter(l_freq=None, h_freq=h_freq) + limit = float(limit) onsets, ends = _annotations_starts_stops( raw, skip_by_annotation, invert=True) ",lowpass is always present but it can be None. I think you will warn all the time here. What I would do is something like this: `if raw.info.get('lowpass') and raw.info['lowpass'] < 'lowpass' `,For this to be true you need to then set `h_freq = None`,this isn't assigned or done in place,"Or should we set them to `0` and `info['sfreq'] / 2` instead? I guess this amounts to the same thing (where do we equal `None` to these values?), but it would be more explicit (maybe at least in the warning message).","allow_maxshield == ""yes"" ???","could you check that removing the space before the "":"" keep the doc formatting correct in the reference doc generation?","I'm actually for deprecating this class, it's completely redundant. @agramfort @jasmainak WDYT?",how about renaming N by order? it's more explicit...,pardon my nitpicking but I would put the method arg before iir_params in the function signature since iir_params is only relevant if method is not fft.,Protecting users from silliness (including ourselves).,I left these for readability and placeholders if we decide to handle them different in the future.
"@@ -102,6 +102,7 @@ var mapServiceNames = []string{ ""codecommit"", ""cognitoidentity"", ""cognitoidentityprovider"", + ""dataexchange"", ""dlm"", ""eks"", ""glacier"", ","This service supports updating tags via the `TagResource` and `UntagResource` API calls, which means it can be added to `aws/internal/keyvaluetags/generators/updatetags/main.go` as well for completeness. Will add its service entry and generate the new update function on merge.","This service supports updating tags via the `TagResource` and `UntagResource` API calls, which means it can be added to `aws/internal/keyvaluetags/generators/updatetags/main.go` as well for completeness. Will add its service entry and generate the new update function on merge.","This service supports updating tags via the `TagResource` and `UntagResource` API calls, which means it can be added to `aws/internal/keyvaluetags/generators/updatetags/main.go` as well for completeness. Will add its service entry and generate the new update function on merge.","I think this should still be computed as Computed values are still Optional, but DNS name is probably a required value for a managed zone. Even though we set the value to the GCP resource's value right now, Optional can potentially cause this value to not be set.",write a high severity bugzilla for the master team to fix apiservice and SCC in 4.0 for migration.,"Since we know the structure, it would be better to set the schema rather than allowing unknown strings. This would make us update the acc test also, to check given attributes :)",This could be split over several lines as well,This is kind of a breaking change. Should we mention it in the changelog.,"nit: `case googlecloud.ServicePubsub, googlecloud.ServiceLoadBalancing:`",Minor nit: These should be sorted alphabetically,maybe `RequireRunningTask ` sounds better and is more coherent with ECS task status
"@@ -267,6 +267,16 @@ public class CommentManagerImpl implements CommentManager { return commentDocModel; } + protected DocumentModel createHiddenFolder(CoreSession session, String parentPath, String name) { + DocumentModel dm = session.createDocumentModel(parentPath, name, ""HiddenFolder""); + dm.setProperty(""dublincore"", ""title"", name); + dm.setProperty(""dublincore"", ""description"", """"); + Framework.doPrivileged(() -> dm.setProperty(""dublincore"", ""created"", Calendar.getInstance())); + DocumentModel parent = session.createDocument(dm); // change variable name to be effectively final + setFolderPermissions(parent); + return parent; + } + private static void notifyEvent(CoreSession session, DocumentModel docModel, String eventType, DocumentModel parent, DocumentModel child, NuxeoPrincipal principal) { ",Can you explain why this change is not present in master and 10.10?,shouldn't this be updated in the options map too?,"Why not do, similarly to what we do for dublincore, just `name.startsWith(NOTIF_PREFIX)`",Was this done by IDE auto-indentation or because the earlier version did not match the general indentation? There are also similar places in the other classes.,This method can be private,"Why does adding uuid in the key make it better, please ?","Ditto here. Also, why is there an `endswith` test (there isn't in line 94)?",It doesn't seem right for me to have a BundleDependency with additionalDependencies. It feels like it's not a proper Object model. Could't that information be in the ClassLoaderModel instead?,"I'm not sure how does this change anything, perhaps I'm missing something: the old `GEOMETRY` has the value of `Geometry`, and the new `GEOMETRY_CATEGORY` has the same value `Geometry`.",Bumping to `5.6.2` it seems will require a more complex url handler since there was a shift from `tar.gz` to `tar.xz`. Just changing the url like this breaks downloads for anything before `5.5.x` when the `tar.xz` became available and breaks the checksums for everything before `5.6.2` since they were based on the `tar.gz`,Typo in method & field name.
"@@ -412,9 +412,6 @@ public class FakeDatasetService implements DatasetService, Serializable { @Override public WriteStream createWriteStream(String tableUrn, Type type) throws IOException, InterruptedException { - if (type != Type.PENDING && type != Type.BUFFERED) { - throw new RuntimeException(""We only support PENDING or BUFFERED streams.""); - } TableReference tableReference = BigQueryHelpers.parseTableUrn(BigQueryHelpers.stripPartitionDecorator(tableUrn)); synchronized (tables) { ",We could check for COMMIT_AT_LEAST_ONCE explicitly.,nit: this looks like dead code,Why doesn't this invoke the `close` method of the write client?,"suspect you need the `addRetryOptions` here as well, in some cases.",can we maintain `testBucket` and `testObject` for consistency ?,Consider swapping this to debug instead of dropping the logging statement completely.,why change it from table? table is used in the if block,Same: Which file was not found/could not be read etc.,"We need to do something about the repeated line `getConfig().getProps().put(HoodieCompactionConfig.FAILED_WRITES_CLEANER_POLICY_PROP, HoodieCleaningPolicy.HoodieFailedWritesCleaningPolicy.LAZY.name());` even if you want to override only selectively. Can we add an override for `getConfig(boolean)` which decides whether or not we do lazy cleaning of failed writes.",Seems like this should happen before we verify other parameters based on Method at lines 1143-1152.,Why not `handleReadError(ex)`?
"@@ -69,11 +69,17 @@ def test_compute_proj(): projs_evoked = compute_proj_evoked(evoked, n_grad=1, n_mag=1, n_eeg=0) # XXX : test something + # test parallelization + projs = compute_proj_epochs(epochs, n_grad=1, n_mag=1, n_eeg=0, n_jobs=2) + projs = activate_proj(projs) + proj_par, _, _ = make_projector(projs, epochs.ch_names, bads=[]) + assert_array_equal(proj, proj_par) # Test that the raw projectors work for ii in (1, 2, 4, 8, 12, 24): raw = Raw(raw_fname) - projs = compute_proj_raw(raw, duration=ii-0.1, n_grad=1, n_mag=1, n_eeg=0) + projs = compute_proj_raw(raw, duration=ii-0.1, n_grad=1, n_mag=1, + n_eeg=0) # test that you can compute the projection matrix projs = activate_proj(projs) ",Does this test work for you? It fails here.,preload is already false by default,this really suggests that projs_all is a convenient variable in the Epochs object but not really an attribute of the measurement info. If you move `projs_all` to a `_projs_all` attribute in Epochs than I can live with it. besides this and my previous remarks I am relatively happy with this PR especially as the tests are good and fast to run. What maybe bothers me now that we can combine Raw is that we could have done it by combining Raw first and keep Epochs untouched. Now unless I've missed something we have 2 ways to do the same thing which is not always a good decision.,if we avoid the branching then we won't need these tests. Also in windows n_jobs > 1 don't work unless you start the calls from a main function so tests with n_jobs > 1 will break on windows :(,What does the `activate` do actually? It's not super clear to me ...,testing inst.preload = True should be the better way,For some reason `Report` was not added to the namespace.,this extends the cases to be treated as delayed ssp,"This test case is used to ensure whether the gradient checking results between CPU and GPU are consistent when using the same inputs, thus, it doesn't need to call check_grad. ","This test case is used to ensure whether the gradient checking results between CPU and GPU are consistent when using the same inputs, thus, it doesn't need to call check_grad. ",I like this but wouldn't such change require deprecation?
"@@ -79,8 +79,11 @@ type Config struct { ActiveSeriesMetricsIdleTimeout time.Duration `yaml:""active_series_metrics_idle_timeout""` // Use blocks storage. - BlocksStorageEnabled bool `yaml:""-""` - BlocksStorageConfig tsdb.BlocksStorageConfig `yaml:""-""` + BlocksStorageEnabled bool `yaml:""-""` + BlocksStorageConfig tsdb.BlocksStorageConfig `yaml:""-""` + StreamChunksWhenUsingBlocks bool `yaml:""-""` + // Runtime-override for type of streaming query to use (chunks or samples). + StreamTypeFn func() QueryStreamType `yaml:""-""` // Injected at runtime and read from the distributor config, required // to accurately apply global limits. ",Why do we also need this if we have a runtime override? Can't we just used that?,Might be good to have an option to return error too.,Where is this coming from? I cannot see this on tip of TSDB :thinking: nor 0.8.0 which `go mod` vendors here. Is this manually modifed TSDB code in vendor? Cannot see any `replace` directive on `go.mod` as well so you don't use fork as well...,Why are these config options hidden?,You'll want a trailing period for this and similar sentences as well.,The CLI flag is `promql.lookback-delta` but the YAML option is within the querier. This looks an inconsistency. How can we make it consistent?,I think this would be more useful as a histogram? What do you think?,Just noting this is safe to remove because it is never called and the boolean in config is used instead.,Was unused. Removed it.,Should you make the default 6mins?,"Hmm, minor nit. Should this be `0`? Making this `24h` could break deployments that use like `48h` chunk time :P This is an esoteric example, but the point being this modifies current behaviour. Am I being too pendantic? /cc @bboreham @tomwilkie"
"@@ -108,7 +108,7 @@ public class SearchAdminResource implements ResourceHandler { throw new CacheException(""NotImplemented""); } else { SearchStatistics searchStatistics = Search.getSearchStatistics(cache); - searchStatistics.getQueryStatistics().clear(); + Security.doAs(restRequest.getSubject(), () -> searchStatistics.getQueryStatistics().clear()); return completedFuture(responseBuilder.build()); } } ",why is this required? the cache already contains the subject (via `Cache.withSubject()`),how about logging the user here instead?,> authenticated identity is not present for HTTP or if authentication is not setup,Defensive programming: Shouldn't `close` also clear the `sensorList` after removing them from `metrics`? In case someone else calls close or start?,"I feek we need to check if `serviceContext != null` here. Correct me if I'm wrong, but if something fails during the `onOpen`, then are `onClose` and `onError` called afterward? or just `onError`? If `onClose` is called, then the `serviceContext` will be null. If `onError` is called, then are we leaking connections if we don't close them?",Doesn't this work by logging the exception directly? To get the entire stack logged.,what does this TODO mean?,`setSetAuthorizationUser` might be better -> like `setSetPath`,"Let's remove the ""allowUnsecured"" condition here, it's sufficient to check for just `authInfoChecked` since UnsecuredResourceFilter sets that attribute",Aesthetic nitpick: This could be `affectedIndices.isEmpty()` to make the intention 100% clear beyond any doubt.,"I don't understand this... Why can't we just use the previous operation on clearing the cache. I don't think this is a valid test change. The test was written to validate the cache cleared. if caching becomes a valid option now, we should rather just remove the test."
"@@ -46,11 +46,4 @@ public class AssetManagerTest { HttpURLConnection httpCon = (HttpURLConnection) url.openConnection(); assertEquals(HttpURLConnection.HTTP_NOT_FOUND, httpCon.getResponseCode()); } - - @Test - public void handlebarsLoad() throws Exception { - URL url = new URL(j.getURL() + ""assets/handlebars/jsmodules/handlebars3.js""); - HttpURLConnection httpCon = (HttpURLConnection) url.openConnection(); - assertEquals(HttpURLConnection.HTTP_OK, httpCon.getResponseCode()); - } } ",Is there any change in the way the plugins consume handlebars3 now? Do plugin developers need to do any change? or are the plugins going to stop working because of that or trigger a 404 in the browser console?,@gsmet Isn't that going to break as soon as someone bumps the value of the property? A sustainable solution would be to reuse the property here.,Remove this code if no longer needed,"We no longer bundle `credentials` as a detached plugin as of commit commit c6f061f26a, which this test wanted. Fortunately, there's a `credentials.hpi` in the source tree, so we can get the same effect with a `@WithPlugin` annotation.",Do you need to import java.util.List when you are already using Guava?,@jeffret-b is this because the return type of the selectNodes() method has changed in the new implementation?,In these cases we can call gerBytes on the string and use copyOf.,Please remove this field.,"This should not longer be necessary, as it's already done on when destroying the context",Call `this.getPage(getContextPath() + relative)`and remove this line?,We shouldn't append job ID here.
"@@ -173,10 +173,11 @@ void MultiTopicDataReaderBase::data_available(DDS::DataReader_ptr reader) if (rc == RETCODE_NO_DATA) { return; } else if (rc != RETCODE_OK) { - ostringstream rc_ss; - rc_ss << rc; + OPENDDS_STRING rc_ss; + rc_ss.reserve(sizeof(ReturnCode_t)); + rc_ss += rc; throw runtime_error(""Incoming DataReader for "" + topic + - "" could not be read, error #"" + rc_ss.str()); + "" could not be read, error #"" + rc_ss); } const MetaStruct& meta = metaStructFor(reader); ","sizeof() is number of bytes in memory, not number of characters in the string string += int is appending the character value of the integer","sizeof() is number of bytes in memory, not number of characters in the string string += int is appending the character value of the integer",do we need to at least log the failure?,Do the error returns need to free str?,"Thanks, Alex. Hmm, if it just return SUCCESS, then crt_req_send_internal() will return SUCCESS in this case, and it seems there are a few extra error handling depending on the rc of the function?","Now that int-to-string isn't used, this doesn't need ostringstream (also below).","Now that int-to-string isn't used, this doesn't need ostringstream (also below).","Generally, if a function like ds_pool_find_bylabel returns an error, its caller is not expected to look at pool_uuid and *svc_ranks. So we should free ranks before returning the -DER_INVAL. E.g., something like rc = uuid_parse(...); if (rc != 0) { ... D_FREE(*svc_ranks); D_GOTO(...); } Additionally, is -DER_INVAL really appropriate? The caller hasn't specified any invalid argument in this case; it's the control plane supplying an invalid response...",`sizeof(strerror_pool) - cnt`? (misplaced paren),"Hmmm. Actually, on second thoughts, if strerror_r is well behaved, this should never happen, right?",Could use `LogGuid`
"@@ -326,6 +326,7 @@ OIDC_RP_SCOPES = config(""OIDC_RP_SCOPES"", default=""openid profile email"") OIDC_REDIRECT_ALLOWED_HOSTS = config( ""OIDC_REDIRECT_ALLOWED_HOSTS"", default="""", cast=Csv() ) +OIDC_AUTH_REQUEST_EXTRA_PARAMS = {""access_type"": ""offline""} # Allow null on these because you should be able run Kuma with these set. # It'll just mean you can't use kuma to authenticate. And a warning ",  Interesting! I didn't know anything about this before. So this allows us to refresh an access token without the user needing to be present and authorize the refresh?,"Let's say we have 3 credentials in the chain. First time, #1 failed, #2 succeeded. Second time, #2 failed, do we want to try #3? What's the expected behavior?",random extra new line,Suggest centralizing this in `resolve_tenant` instead,Suggest deleting these no-op initializers,"suggest ""such as **an async** credential""",probably want to start using `%[1]s` in help upstream and passing in the command name like we do in origin,"Why still set the env var at all, if nothing points at it? Should this be `PREFECT__CLOUD__API`?",do we need this?,"- we want to support Azure ServicePrincipal credentials on the DVC config level (tenant_id, client_id, client_secret) - should we do this as part of this PR, or keep it purely as a migration one?",I'm curious: what changed to make this needed?
"@@ -609,10 +609,7 @@ class SharePermission(Model): } _attribute_map = { - 'permission': {'key': 'permission', 'type': 'str', 'xml': {'name': 'permission'}}, - } - - _xml_map = { + 'permission': {'key': 'permission', 'type': 'str'}, } def __init__(self, **kwargs): ","we should avoid manual edits to the generated files, right?","not ""key"": ""featureId"" ? same for content_type",Will this not crash if there are two attrs with the same name? Do we have a test for this?,This seems temporary. Can you create an issue and assign to you and me? I feel that I need to think a bit more about it.,This seems temporary. Can you create an issue and assign to you and me? I feel that I need to think a bit more about it.,"By default, I guess for new users, `email` value is assigned to the `name` field on the `Auth0` side. If you update the `name` field value, then you can't be sure if that also contains the last name. I suggest including a length check before reading index-based values.","By default, I guess for new users, `email` value is assigned to the `name` field on the `Auth0` side. If you update the `name` field value, then you can't be sure if that also contains the last name. I suggest including a length check before reading index-based values.","I think it might be wise to explicitly set this and not make people think that it is actually configurable. We can say that we are using this coder explicitly for portability reasons of PubsubIO across implementations in languages. Also, we assume that the PCollection element type is bytes within ReadStringsFromPubsub and WriteStringsToPubsub.","I considered having our code normalize this, but I figure it's better to avoid the wasted computation every run.",This is a setting rename because `autopostprocess`__e__`r` is mispelled. It was changed to `autopostprocess`__o__`r`,change to `rf` for pycharm.
"@@ -296,10 +296,15 @@ export function createIframeWithMessageStub(win) { element.expectMessageFromParent = msg => { return new Promise(resolve => { const listener = event => { + let expectMsg = msg; + let eventMsg = event.data.receivedMessage; + if (typeof expectMsg !== 'string') { + expectMsg = JSON.stringify(expectMsg); + eventMsg = JSON.stringify(eventMsg); + } if (event.source == element.contentWindow && event.data.testStubEcho - && JSON.stringify(msg) - == JSON.stringify(event.data.receivedMessage)) { + && expectMsg == eventMsg) { win.removeEventListener('message', listener); resolve(msg); } ",nit: rename `eventMsg` to `actualMsg`,"This needs to check `!sentinelNameChange`. As is, this will always fail when using the sentinel-name-change experiment is enabled.",the difference between InvalidOperationException and Exception is cosmetic when there is no intention for the user to catch it,what else can it be if not string?,The previous version was correct. `!` should be in front of `{`,"could you update the doc, seems it allows both Object and string",Is this changed needed right now? No code except IframeMessagingClient is sending message in this format yet. I would expect a deprecation of this whole method in your refactoring CL.,`Def` as a suffix existed so we could lint-allow unused variables. For TS typing we can/should drop it,It's already `!JSONType`. Why cast it again?,"or, we could just not sending the sitekey?",Can you annotate the return type of getData instead?
"@@ -507,3 +507,5 @@ def cleanup_old_worker(*args, **kwargs): """""" name = kwargs['sender'].hostname _delete_worker(name, normal_shutdown=True) + # Recreate a new working directory for worker that is starting now + common_utils.create_worker_working_directory(name) ",Who calls `cleanup_old_worker()`?. I am having some trouble finding it.,"Oh neat, so the resource_manager also gets tracked now. Makes sense. Hopefully we have protections to keep it from assigning work to itself or the scheduler? (I'm only like 33% through this PR )","I really want to avoid this, but I'm not sure how. Any ideas?",This needs to be locked.,"This is dangerous as you may end up re-using still-active worker ids. E.g. if you allocate worker_1, worker_2, and worker_3, then close worker_1, the next worker would be worker_3. You can omit this line--there are plenty of integers, no need to re-use worker ids.",I think the only time a Criteria object needs to be used is if the user has handed it to us as part of the API. All internal usages of Criteria should be rewritten to use the mongoengine queryset directly. We shouldn't need to use Criteria's anymore.,Move this line to the baseclass (and remove it from the two subclasses).,Plz add a blank line between tags and summary for better readability,"I agree this isn't critical, but do you know why this is happening? I've only seen it happen in the oldest tests.","We really need len(self._environments) * num_workers, right? Also, should we throw an error if this was previously initialized with too few threads?",I had imagined this entire functionality being distributed to where the heartbeats are recorded. That would also eliminate the need to have this thread altogether. Does that sound right?
"@@ -4,8 +4,10 @@ # Licensed under the MIT License. # ------------------------------------ +from typing import Optional from azure.core.polling.base_polling import ( LongRunningOperation, + PipelineResponseType, _is_empty, _as_json, BadResponse, ",This can't be imported here because it's defined in a type checking block. You'll need to redefine it in this file.,AsyncHTTPResponseType is already defined in azure.core.common,Maybe we should use PipelineRequestType,"nit: since this is async, we can use the python 3+ style type hints. I think I saw we have an issue open for that already.","In actual usage AsyncPipeline ensures `self.next` is not None, so I think it's reasonable for this not to be Optional. (It matters because subclasses will get mypy errors on `self.next.send()` if this is Optional.)",`decompress` should be a keyword-only argument.,Is this intentionally redundant?,"This is an interesting behavior change, I know it's coming from generated code, but just wondering if this will impact customers who were counting on the previous behavior? Mainly this is just curiosity on my end","@xiangyan99 side note: with a git revert on the PR itself, you would have get this for free.",Is the annotation necessary? It seems redundant given the cast.,can ignore all of the generated files
"@@ -27,6 +27,18 @@ public class JavaExternalSerializerProtocol extends AbstractSerializationProtoco */ @Override public void serialize(Object object, OutputStream out) throws SerializationException { + if (object instanceof CursorStreamProvider) { + try (CursorStream cursor = ((CursorStreamProvider) object).openCursor()) { + doSerialize(toByteArray(cursor), out); + } catch (IOException e) { + throw new SerializationException(createStaticMessage(""Could not serialize cursor stream""), e); + } + } else { + doSerialize(object, out); + } + } + + private void doSerialize(Object object, OutputStream out) { validateForSerialization(object); SerializationUtils.serialize((Serializable) object, out); } ",I think that at least we should create an issue to be able to serialize Cursor without loading everything into memory at the same time.,could `inputStream` not be a closeable here?,SAme here with deserialization,this issue is closed,this jdoc is too vague. Here you should explain that this is for the case in which items in an iterable stream contain nested byte streams.,won't fix. This needs to be resolved at the runtime level. Extensions should absolutelly not need to know about the providers.,"i know this is a test, but this may be confusing if looking for examples of this. Can you pass a mock or new location for this?",create a new exception class for this,"This is fine, but redundant and IMO not quite best practice. It means that if one refactors the class to have a different access level, one also has to scrape through the methods and change them.",has to -> `must` to put more enphasis?,why not put this with an `&&` in the previous `if`?
"@@ -12,6 +12,7 @@ describe 'two_factor_authentication/totp_verification/show.html.slim' do before do allow(view).to receive(:current_user).and_return(user) allow(view).to receive(:reauthn?).and_return(false) + allow(view).to receive(:confirmation_for_phone_change?).and_return(false) @presenter = TwoFactorAuthCode::AuthenticatorDeliveryPresenter. new(presenter_data, ApplicationController.new.view_context) ",This is not needed anymore.,How does having a phone configuration present make the form submission valid?,How does having a phone configuration present make the form submission valid?,"do we need this to also be a string rather than a symbol now? (`idv_params` is defined as `idv_session.params`, which no longer has `symbolize_keys!` being called on it)","do we need this to also be a string rather than a symbol now? (`idv_params` is defined as `idv_session.params`, which no longer has `symbolize_keys!` being called on it)","Given that we know this logic will change for sure when we support multiple phone configurations, what do you think about encapsulating this logic inside the `SmsLoginOptionPolicy` class, or some other Policy class? That way, when the logic inevitably changes, we will only need to make a change in one place.","Given that we know this logic will change for sure when we support multiple phone configurations, what do you think about encapsulating this logic inside the `SmsLoginOptionPolicy` class, or some other Policy class? That way, when the logic inevitably changes, we will only need to make a change in one place.",Shouldn't you be able to check `user_session[:context]` here? I think that should be set to `idv`.,Shouldn't you be able to check `user_session[:context]` here? I think that should be set to `idv`.,"It's not clear to me what problem this PR is solving. Why remove the `decorated_user` method from application controller, and then define it here to be able to use this helper method, but not everywhere else? It seems inconsistent to call `current_user.decorate` directly in all controllers except this one. What if we change the way we decorate the current user? Wouldn't it be easier to change a single `decorated_user` method rather than all instances of `current_user.decorate`?","It's not clear to me what problem this PR is solving. Why remove the `decorated_user` method from application controller, and then define it here to be able to use this helper method, but not everywhere else? It seems inconsistent to call `current_user.decorate` directly in all controllers except this one. What if we change the way we decorate the current user? Wouldn't it be easier to change a single `decorated_user` method rather than all instances of `current_user.decorate`?"
"@@ -1,8 +1,15 @@ from django.template import Library +from ...core.utils import get_country_name_by_code + register = Library() @register.simple_tag def get_formset_form(formset, index): return formset.forms[index] + + +@register.simple_tag +def get_country_by_code(country_code): + return get_country_name_by_code(country_code) ",I think this can be done via `get_language_info` `i18n` templatetag,I think this can be done via `get_language_info` `i18n` templatetag,We could add some docstring here.,We could add some docstring here.,We need a blank line here.,I left `dbg` since I don't know if there's anything coming out from somewhere that still uses it so I wanted to be better safe than sorry.,"What's the side effect of saying that `cak` is `en` - we don't support it on addons-server? There isn't a similar language we can use instead, I guess?",After all of the experience with Oscar seeing this available at the template level makes me scared. We should be moving logic out of the template if anything.,After all of the experience with Oscar seeing this available at the template level makes me scared. We should be moving logic out of the template if anything.,This change is backwards incompatible. Can we keep the extra keyword arg and the default here ?,"Now we can have markdown in docstrings, can you add a couple of examples of registering different constructors and their corresponding jsonnet config?"
"@@ -647,7 +647,7 @@ function killme() /** * @brief Redirect to another URL and terminate this process. */ -function goaway($path) +function goaway($path = '') { if (strstr(normalise_link($path), 'http://')) { $url = $path; ",Interesting for #5907 So I will rename it from `System::redirectTo($url)` to `System::redirect($to = '');` :-),My thinking here is that I don't want to change the timing of DB connections being made in the boot process. This may be overly paranoid.,Plz add a blank line between tags and summary for better readability,"""In the case XYZ you may wish to override the URL stored in...""",Standards: Please add braces to this conditional statement.,"This 'http://' check is useless, if anything - it should be removed. Same thing with the Form validation method.",Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.,Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.,"This is new, but I think it's not controversial.",we cannot change the method signature here too,this should use a strict comparison to match coding standards
"@@ -79,6 +79,18 @@ def test_lcmv(): assert_raises(ValueError, lcmv, evoked, forward, noise_cov, data_cov, reg=0.01, pick_ori=""normal"") + # Test picking normal orientation + stc_normal = lcmv(evoked, forward_surf_ori, noise_cov, data_cov, reg=0.01, + pick_ori=""normal"") + + assert_true((np.abs(stc_normal.data) <= stc.data + 0.8).all()) + + # Test picking source orientation maximizing output source power + stc_max_power = lcmv(evoked, forward, noise_cov, data_cov, reg=0.01, + pick_ori=""max-power"") + + assert_true((np.abs(stc_max_power.data) <= stc.data + 1).all()) + # Test if fixed forward operator is detected when picking normal or # max-power orientation assert_raises(ValueError, lcmv, evoked, forward_fixed, noise_cov, data_cov, ","why `+0.8`? shouldn't it always be lower? i.e., `np.abs(stc_normal.data) <= stc.data` should hold",Why can it be bigger?,I prefer to explicit parameters to it's obvious to user that there is something hard coded here. Given the impact it can have on beamformers we should really show this.,"This is different from two of the others, but they should all be identical IIUC","again, unrelated change ...",So it was really incorrect before...,These changes should go in #4312,"@britta-wstnr don't be creative with variable names. sometimes you can it sfilter or spat_filt etc. I vote you call it everywhere filters so filters = make_lcmv_filters(...) stc = apply_lcmv(filters, .... and then stc = apply_lcmv_epochs(filters, .... stc = apply_lcmv_raw(filters, .... I think using operator is confusion as this would suggest that you can use an LCMV operator with apply_inverse that takes an ""operator"" as input",FYI you do not need parens here. (The only reason a lot of tests have these parens is that `'assert_true' -> 'assert '` was an easier find-and-replace in my editor than trying to remove the start and end parens.),"@agramfort would this work? If yes, I will implement the same in ``test_dics``",this one still needs to stay
"@@ -1,6 +1,6 @@ require Rails.root.join('lib', 'config_validator.rb') -Figaro.require_keys( +Figaro.require_keys([ 'attribute_encryption_key', 'database_statement_timeout', 'disallow_all_web_crawlers', ",I vote to keep the splat/`*args`,I vote to keep the splat/`*args`,Would you mind adding the messaging service SID here? I neglected to do that in my PR  ,Would you mind adding the messaging service SID here? I neglected to do that in my PR  ,Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.,Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.,should we set `options: { symbolize_names: true }` on this one?,should we set `options: { symbolize_names: true }` on this one?,"Looks good, but it seems to me we should also pin <2.0.","Is it possible to move the PathConflict, SafetyChecks imports and then do the above in `conda/common/serialize.py` ?",typo: its instead of it's
"@@ -1094,7 +1094,7 @@ KUMASCRIPT_URL_TEMPLATE = 'http://developer.mozilla.org:9080/docs/{path}' ES_DISABLED = True ES_LIVE_INDEX = False -LOG_LEVEL = logging.WARN +LOG_LEVEL = logging.DEBUG SYSLOG_TAG = 'http_app_kuma' LOGGING = { ","Whoops, did these `settings.py` changes sneak in? Should these be in `settings_local.py`?",So this indicates that only logs with a level of `WARNING` or higher would be sent?,"No need for an option. The dotted underlining doesn't really work with linked actions anyway, so please revise this PR, get rid of dotted underlining and implement your changes without user choice.","How about: ""two means to control""",Nitpick / suggestion: recent versions of pytest provide a `tmp_path` fixture that return a `pathlib.Path`.,"interesting, no way for these to be able to share a single file?",These were unused,"this is the most explicit, but I suppose `LOGGING['root']['level'] = logging.DEBUG` works too",Do we need a heavier assurance that `urllib3` will be properly available now?,"For consistency, could you use the ""aliased"" import below for this package. It's just aliased to `win`.",Package names should be lowercase.
"@@ -88,12 +88,12 @@ abstract class WPCOM_JSON_API_Comment_Endpoint extends WPCOM_JSON_API_Endpoint { && $this->api->token_details['user']['display_name'] === $comment->comment_author ) { - $user_can_read_coment = true; + $user_can_read_comment = true; } else { - $user_can_read_coment = current_user_can( 'edit_comment', $comment->comment_ID ); + $user_can_read_comment = current_user_can( 'edit_posts' ); } - if ( !$user_can_read_coment ) { + if ( !$user_can_read_comment ) { return new WP_Error( 'unauthorized', 'User cannot read unapproved comment', 403 ); } } ","Since you're editing that line, could you add a space after the `!` to make it super clean?","I thought that external user id was saved in `wpcom_user_id` user meta, and it looks like we are trying to match that here against the local `id` instead? I'm probably missing something, but I'm not sure what. :)",I think this should either default to `false` or the method's return value description should be adapted to say that `0` means that no applicable user can be found.,"If you introduce a method for getting the user id, be sure you use it consequently.",Looks like you missed spaces inside the square brackets. Could you add them?,Could you add inline docs for this action?,"If both are allowed, would there be any problem with dropping the context check?",Let's add a mental note to answer this question in a public method in `Tokens` in the future :),"With the options framework, you don't have to check that the array key exists as it will _always_ exist and as all values are validated, please use proper strict checking too. so: `elseif ( $options['disable_author_noposts'] === true ) {`",What's the difference between `manage_options` and `customize` in terms of permissions? Could we use `manage_options` here?,Can we get a trailing comma here to make `phpcs` happy?
"@@ -43,6 +43,11 @@ func NewPlan(ctx *plugin.Context, target *Target, prev *Snapshot, source Source, olds := make(map[resource.URN]*resource.State) if prev != nil { for _, oldres := range prev.Resources { + // Ignore resources that are pending deletion; these should not be recorded in the LUT. + if oldres.Delete { + continue + } + urn := oldres.URN contract.Assert(olds[urn] == nil) olds[urn] = oldres ",What the heck is a LUT?  ,"If we delete an `External` replacement by replacing it with a non-`External` replacement, does that show up as a `OpDeleteReplaced` here or `OpReadRemove`?","If we delete an `External` replacement by replacing it with a non-`External` replacement, does that show up as a `OpDeleteReplaced` here or `OpReadRemove`?","If we delete an `External` replacement by replacing it with a non-`External` replacement, does that show up as a `OpDeleteReplaced` here or `OpReadRemove`?",What the heck is a LUT?  ,What the heck is a LUT?  ,"Nit: can we standardize on `InFlight` or `Pending`? My preference is for the latter, but all I really care about is that we pick one term in strings that might end up being displayed to a user.","Nit: can we standardize on `InFlight` or `Pending`? My preference is for the latter, but all I really care about is that we pick one term in strings that might end up being displayed to a user.","Nit: can we standardize on `InFlight` or `Pending`? My preference is for the latter, but all I really care about is that we pick one term in strings that might end up being displayed to a user.","Can we change the log to `...pending-delete resource (%v, %v)..."", res.URN. res.ID`?","Can we change the log to `...pending-delete resource (%v, %v)..."", res.URN. res.ID`?"
"@@ -812,10 +812,8 @@ func (mod *modContext) genNestedTypes(member interface{}, resourceType bool) []d // and if it appears in an input object and/or output object. mod.getTypes(member, tokens) - isK8s := isKubernetesPackage(mod.pkg) - var typs []docNestedType - for token, tyUsage := range tokens { + for token := range tokens { for _, t := range mod.pkg.Types { switch typ := t.(type) { case *schema.ObjectType: ",All or most of this deletion was related to generating the per-language API doc link for each object type.,All or most of this deletion was related to generating the per-language API doc link for each object type.,All or most of this deletion was related to generating the per-language API doc link for each object type.,Do you have an example of a situation where this would be used?,Do you have an example of a situation where this would be used?,Do you have an example of a situation where this would be used?,What happens if we delete these lines entirely? I have a feeling that the call to `typeString` below will do the right thing.,What happens if we delete these lines entirely? I have a feeling that the call to `typeString` below will do the right thing.,What happens if we delete these lines entirely? I have a feeling that the call to `typeString` below will do the right thing.,"Nit: `enumType` doesn't feel like an obvious name. Is it more of a `modifier` thing, or `prefix`, or `nullable`?","Nit: `enumType` doesn't feel like an obvious name. Is it more of a `modifier` thing, or `prefix`, or `nullable`?"
"@@ -146,6 +146,16 @@ public class SCMPipelineManager implements PipelineManager { pipelineFactory.setProvider(replicationType, provider); } + @VisibleForTesting + public void setAllowPipelineCreation(boolean newState) { + this.allowPipelineCreation.set(newState); + } + + @VisibleForTesting + public boolean getAllowPipelineCreation() { + return allowPipelineCreation.get(); + } + protected void initializePipelineState() throws IOException { if (pipelineStore.isEmpty()) { LOG.info(""No pipeline exists in current db""); ","I would suggest to use pipelineCreationAllowed as the internal state name, it makes the code easier to read out as I I see. I know this is a regular getter and and setter pair, but... In the tests, the set method is always called with true as the parameter, so I suggest to call this method simply allowPipelineCreation() without a parameter, the getter part of the pair in this case can be called as isPipelineCreationAllowed(). This suggestion is simply about expressions from the usage point of view, and I don't have a strong opinion on this, however if we want to keep this name and want to name it as a regular getter setter as it is suggested by the books then we should use isAllowPipelineCreation as the getter name.","In PipelineManagerImpl we donot acquire lock, but here we do. Any reason? // should not lock here, since no ratis operation happens. Should nt be the same, as these methods are called only during initialize.",Pass the conf.,this `synchronized` seems not necessary ?,"Not sure we should be calling out RBAC here. Probably better to be more generic, e.g. something about it being secured with standard Kafka ACLs or _a custom auth mechanisum_.",`isEnableSparkMetricsSink` might be more standard.,"""The statistic will be created during the startup"" sounds really specific, but this is a generic interface used by all stores, some of which may have statistics but not a `Statistics` object.","if the flag is false, it's more accurate to say that CST statements would be rejected, right?","Same as below, `Container` to `Services`",NIT: Can we add a helper function like checkLeader() to dedup the code?,Can we move this logic to SCMSafeModeManager itself? This is currently called via SCMSafeModeManager#exitSafeMode. Also currently startPipelineCreator if called multiple times will create multiple fixed interval tasks for pipeline creation.
"@@ -319,7 +319,7 @@ func (s *StoreInfo) regionScoreV2(delta int64, deviation int) float64 { score = (K + M*(math.Log(C)-math.Log(A-F+1))/(C-A+F-1)) * R } else { // When remaining space is less then F, the score is mainly determined by available space. - score = (K+M*math.Log(C)/C)*R + (F-A)*(K+M*math.Log(F)/F) + score = (K+M*math.Log(C)/C)*R + B*(F-A)*(K+M*math.Log(F)/F) } return score / math.Max(s.GetRegionWeight(), minWeight) } ",can we make F configuration and set to a more suitable default value?,"I think you should unify the score for int, so usedRatio returns int, and leaderScore also returns int.","I think we should use int for (0, 100), not float64 now. Btw, (0, 100) means we can't get 0 or 100?",any reason in particular why you changed the kernel function?,"Try to stick to one or the other abbreviation, i.e., CPS or CPF. It's less confusing this way.","`0 < K2 < 0.4` since you fixed spacing on `None,None,None` above",just to tell that it would automatically detect the template parameters. you do not need to put them explicitly (it is correct if you do of course),Why not put the rate in the error message? Instead of saying `at least 50% of..` just say `67% of fetchers failed`,I think it is better to directly register a symmetric tensor (there is a macro for that),Which is the intended use of this variable?,This function has nothing to do with storeInfo now. You can move it to balancer.go.
"@@ -31,6 +31,7 @@ from paddle.fluid.dygraph.dygraph_to_static.loop_transformer import LoopTransfor from paddle.fluid.dygraph.dygraph_to_static.print_transformer import PrintTransformer from paddle.fluid.dygraph.dygraph_to_static.return_transformer import ReturnTransformer from paddle.fluid.dygraph.dygraph_to_static.tensor_shape_transformer import TensorShapeTransformer +from paddle.fluid.dygraph.dygraph_to_static.cast_transformer import CastTransformer from paddle.fluid.dygraph.dygraph_to_static.static_analysis import StaticAnalysisVisitor from paddle.fluid.dygraph.dygraph_to_static.utils import get_attribute_full_name ","Here we import with alphabetical order, so please put this line after CallTransformer","Here we import with alphabetical order, so please put this line after CallTransformer",Remove the extra `.` at the end of the sentence.,After reading the original commit I still have no idea what the `absolute_import` in this file had to do with celery as it doesn't reference celery at all and these constants aren't related to it either.,Could you expand the description of #4535 to account for this new layer of indirection?,What does moving this to a dictionary fix ? (for my knowledge),Is this statement still valid? Does 'value' need to be escaped any more?,@mdcutone for now I'm still running the test suite on Py2 as well as Py3 so a syntax error breaks tests. I had to switch to the slightly uglier format to cope with that,Is this intentionally redundant?,Shouldn't you delete this variable? It's no longer updated.,No longer used.
"@@ -720,8 +720,8 @@ def write_protocol_deps_cache(proto_deps: Dict[str, Set[str]], def write_plugins_snapshot(manager: BuildManager) -> None: """"""Write snapshot of versions and hashes of currently active plugins."""""" - name = os.path.join(_cache_dir_prefix(manager), '@plugins_snapshot.json') - if not atomic_write(name, json.dumps(manager.plugins_snapshot), '\n'): + name = '@plugins_snapshot.json' + if not manager.metastore.write(name, json.dumps(manager.plugins_snapshot)): manager.errors.set_file(_cache_dir_prefix(manager), None) manager.errors.report(0, 0, ""Error writing plugins snapshot"", blocker=True) ",This should really be a defined constant.,Why was this removed?,"This must be one of the longest docstrings ever for something that returns a static constant. :-) Note that the argument is unused now. @ilevkivskyi Even so, I don't understand why these filenames try to look like they are the cache for a module -- it looks like neither of these files uses the same format as the per-module cache filenames. So maybe we can clarify that by not using `.meta` and `.data` (maybe use `-meta` and `-data`).",Use the file system cache?,"You only need to compare the hash when the sizes are equal. There's another subtle issue here: if the mtime differs but the size and hash match, we don't rewrite the meta.json file (AFAICT), so that means that from then on we *always* hash the file. Now, the hashing seems so fast that this barely matters, but I want to use this for a huge codebase, so I'm still worried about this (else why bother with the mtime check). Also I'd like to see a log message if the mtime differs, but the size and hash are the same (this helps validating that it works).","Rather than a flag, could we add a lockfile? That would have both reproducibility and speed benefits.","This `if` is not needed, `trace()` already has it.",This raises after return -- looks like the raise statement is redundant.,Why was this removed?,Looks like a typo: the -> they?,Could you explain what's going on here? Naively I'd expect a change on L1844 (since it would mirror the change in `parse_file`)
"@@ -38,7 +38,10 @@ class ProfileParser(object): include = include[:-1] self.includes.append(include) else: - name, value = line.split(""="", 1) + try: + name, value = line.split(""="", 1) + except ValueError as error: + raise ConanParsingError(""Error while parsing line %i: '%s'"" % (counter, line)) name = name.strip() if "" "" in name: raise ConanException(""The names of the variables cannot contain spaces"") ","Let's throw a generic ``ConanException``. New exceptions will be introduced from now on, only if it is going to be captured and processed somewhere else. Let's keep it simple.","The long line is a step back in readability I think, especially since the line contains a newline. Not a blocker though.",Is this the result of a merge that's gone awry? Fairly sure I saw a patch with this in recently.,"Perhaps combine the two messages? It's important to tell the user that the compiler failed to analyse the bytecode, but also useful to say why.",Where does this get used (or is the PR still in progress?),Move the keyword option to a new line. (Also below.),Is `self.text[0]` always guaranteed to be populated (and you won't get index out of bounds error?),"Does `kwargs` ever contain `'fromfile'` here or is this using the default 100% of the time? If the latter, drop the clause?",You can spell this `EnvironmentError`.,"I'd remove ""due to"" here. I think the "":"" alone corresponds a bit better to standard error messaging.","This is super confusing. The function raises, but is also declared to return an exception, and its callers raise whatever it returns, but those raise statements are never raised because the called function raises. Wouldn't it be simpler to make this function _actually_ return the exception and have the call sites _actually_ raise the exception it returns?"
"@@ -2220,6 +2220,16 @@ describe User do end end + describe ""Destroying a user with security key"" do + let!(:security_key) { Fabricate(:user_security_key_with_random_credential, user: user) } + fab!(:admin) { Fabricate(:admin) } + + it ""removes the security key"" do + UserDestroyer.new(admin).destroy(user) + expect(UserSecurityKey.where(user_id: user.id).count).to eq(0) + end + end + describe 'Secure identifier for a user which is a string other than the ID used to identify the user in some cases e.g. security keys' do describe '#create_or_fetch_secure_identifier' do context 'if the user already has a secure identifier' do ","Isn't `admin` fabricated ""earlier""?",test the rows don't get deleted,"I don't know why the factory for vomit reactions is so hard to use, but create() raises a category validation error, even when a category is passed explicitly.",should we consider doing this in a transaction? so if one step fails we're not left in a half-state?,should we consider doing this in a transaction? so if one step fails we're not left in a half-state?,"These tests contain a lot of magical reflection built by @lightalloy, instead of creating a ""if association is rating votes do something slightly different"" I just decided to power up the user so that the rating vote validator will let them create a row in the DB","It's possible to reduce number of queries to 1 if the first check will be like this: `user.reactions.load.size.positive?` This will load the assosiation, and the second query won't be needed. Another way to optimize is replacing `user.reactions.count.positive?` with `user.reactions.any?` This way 2 queries will be executed, but the first will be `select 1` instead of `select count(*)`",There is a fair bit of duplication here so I think moving `UserStat.update_draft_count` into a method will help DRY the code up.,I think that you don't have to use self here,1. Is this a confusing condition to put on here? I could also move this scope into the call site 2. Is it OK to assume that we **do not** want to notify revoked SPs of credential changes?,1. Is this a confusing condition to put on here? I could also move this scope into the call site 2. Is it OK to assume that we **do not** want to notify revoked SPs of credential changes?
"@@ -35,4 +35,9 @@ spec: <%_ } _%> ports: - name: http + <%_ if (app.applicationType === 'microservice' || app.applicationType === 'uaa') { _%> + port: 80 + targetPort: <%= app.serverPort %> + <%_ } else { _%> port: <%= app.serverPort %> + <%_ } _%> ","Unless there is a really good reason for this, I'd prefer using the condition : `!app.serviceDiscoveryType || app.applicationType === 'uaa'` -> so it will be specific to UAA and will not impact the other option as the other options works well with Kubernetes","Unless there is a really good reason for this, I'd prefer using the condition : `!app.serviceDiscoveryType || app.applicationType === 'uaa'` -> so it will be specific to UAA and will not impact the other option as the other options works well with Kubernetes",Remove the entire condition.,Remove the entire condition.,Additional note : client-authentication-scheme should be the same in gateway/microservice applicationTypes ( I don't know if Keycloak/Okta accept both scheme ),Additional note : client-authentication-scheme should be the same in gateway/microservice applicationTypes ( I don't know if Keycloak/Okta accept both scheme ),Pending remark : (applicationType === 'gateway' && authenticationType === 'oauth2') may be safer than authenticationType === 'oauth2',Pending remark : (applicationType === 'gateway' && authenticationType === 'oauth2') may be safer than authenticationType === 'oauth2',"The condition should be : applicationType === 'gateway' && authenticationType === 'oauth2' to be more precise spring-cloud-security is already added in the pom later for the ""authenticationType === 'uaa'"" case => it could be merged ( the uaa case use it in both gateway et microservice applicationType : at the moment, it is probably safer to keep applicationType === 'gateway' as the side effect on microservice are not clear to me at the moment )","The condition should be : applicationType === 'gateway' && authenticationType === 'oauth2' to be more precise spring-cloud-security is already added in the pom later for the ""authenticationType === 'uaa'"" case => it could be merged ( the uaa case use it in both gateway et microservice applicationType : at the moment, it is probably safer to keep applicationType === 'gateway' as the side effect on microservice are not clear to me at the moment )",can we use variable name`jhi-authenticationToken` plz
"@@ -246,10 +246,10 @@ public class JPMSModuleInfoPlugin implements VerifierPlugin { } private void requires(Entry<String, Attrs> instruction, Analyzer analyzer, Packages index, - ModuleInfoBuilder builder) { + Parameters moduleInfoOptions, ModuleInfoBuilder builder) throws Exception { String eeAttribute = instruction.getValue() - .get(""ee""); + .get(Constants.EE_ATTRIBUTE); EE moduleEE = (eeAttribute != null) ? EE.valueOf(eeAttribute) : DEFAULT_MODULE_EE; ","You should make this `orElseGet` to avoid all the work until it is needed. `orElse` is good when you already have the else value handy. But it you have to go to some work to make the else value, `orElseGet` can avoid that work when you don't need the else value.","We should assert that this only happens for NonVersionable methods. (If its happening for any other method, we shouldn't actually be inclining)",The first two terms in the assert condition can be simplified to just single `!owningMethod.HasInstantiation`,If `n` is is not `> 0` then you don't want to substring here. cleanSource should be the original source.,"I initially debated whether moving this was a good idea, but I think it makes sense, :+1:",Please either fix this right away or create a github issue.,Please either fix this right away or create a github issue.,"which exact cases are you trying to cover with this? If the attribute is an invalid expression, then it should actually fail, so that the user becomes aware of that and fixes it. This change will consider the value as not an expression, will not fail and the connector will not behave as expected. That situation will be much harder for the user to understand and troubleshoot.","Change this test to: `className.getShortName().equals(""package-info"")` or `className.getBinary().endsWith(""/package-info"")`.","This check can avoid NPE from happing by checking before use, however, I don't think it can resolve the root `methodParams` initialization issue as it has a race condition that needs to be resolved.",It may be better to clear the flag `CORINFO_FLG_BEFOREFIELDINIT` at the end instead. One less `#if READYTORUN` ifdef and one less call to `VersionsWithType`.
"@@ -1,7 +1,7 @@ <div class=""row""> <div class=""col-12""> <h2>Notes</h2> - <% if @user.notes.count > 0 %> + <% if @user.notes.load.size > 0 %> <% @user.notes.each do |note| %> <p><em><%= note.created_at.strftime(""%d %B %Y %H:%M UTC"") %> by <%= User.find(note.author_id).username if note.author_id.present? %></em> - <% if !note.reason.blank? %><strong><%= note.reason %>:</strong> ","since we know that the notes are going to be iterated upon in the following line, we can preload them, to avoid a second `SELECT count` that would instead happen with `.each`",Could you add `(last 10)` or something similar? Better to be specific here IMO. :),"I didn't used the totalItems field because it was not generated when using the no-pagination option, but it can be refactored to generate it every time","I didn't used the totalItems field because it was not generated when using the no-pagination option, but it can be refactored to generate it every time",Line is too long. [108/80],Line is too long. [236/80],"Hmm, there shouldn't be both `class` here and down below on line 24.",What is the plan for backfilling these to ensure that the scores all get updated and are consistent?,Hmmmmm I think this is for the better but not entirely sure whether or not we care about accuracy here.,"Shouldn't it be in json file, when there is i18n ?","Shouldn't it be in json file, when there is i18n ?"
"@@ -358,7 +358,12 @@ class TransformVisitor(NodeVisitor[Node]): new.fullname = original.fullname target = original.node if isinstance(target, Var): - target = self.visit_var(target) + # Do not transform references to global variables. + # TODO: is it really the best solution? Should we instead make + # a trivial copy, or do something completely different? See + # testGenericFunctionAliasExpand for an example where this is important. + if original.kind != GDEF: + target = self.visit_var(target) elif isinstance(target, Decorator): target = self.visit_var(target.var) elif isinstance(target, FuncDef): ","If you remove `visit_mypy_file` from the class (I think that it's unused), this will be completely reasonable, since this will be reference to something outside the AST node we are transforming.","Could use `self.func_map.get(target, target)` here for a minor simplification.","What are the code changes needed for? This one seems like a real logic change. (Though a correct one, I suspect!)","Similar to above, this should probably be `current_target()`.",Why a cast needed here? Is it possible to replace it with an assert?,No reasonable way around this?,Why did you delete this assertion? Is gast.IfExp also goes through visit_If?,Why did you delete this assertion? Is gast.IfExp also goes through visit_If?,What exactly goes wrong without this?,"This looks surprisingly simple, but maybe more corner cases will be necessary for more tests, see below",What about having a context manager that temporarily sets `self.cur_node` and using it here (and elsewhere where it makes sense)?
"@@ -658,6 +658,9 @@ func (b *cloudBackend) PreviewThenPromptThenExecute( // Now do the real operation. We don't care about the events it issues, so just // pass a nil channel along. var unused chan engine.Event + + // Print the stack outputs at the end this time. + displayOpts.ShowStackOutputs = true return b.updateStack( updateKind, stack, pkg, root, m, opts, displayOpts, unused, false /*dryRun*/, scopes) ","Since we're always setting this to `true`, any reason not to make `true` the default, and change this to something like `SuppressStackOutputs`? Is there even a reason to make it conditional? Also, was it intentional that you only did this for the cloud backend? Why not local also? I really don't want to see us diverging in behavior here.","Since we're always setting this to `true`, any reason not to make `true` the default, and change this to something like `SuppressStackOutputs`? Is there even a reason to make it conditional? Also, was it intentional that you only did this for the cloud backend? Why not local also? I really don't want to see us diverging in behavior here.","Since we're always setting this to `true`, any reason not to make `true` the default, and change this to something like `SuppressStackOutputs`? Is there even a reason to make it conditional? Also, was it intentional that you only did this for the cloud backend? Why not local also? I really don't want to see us diverging in behavior here.","Is it clearer if the `pulumiEngine` is a member field of the `localBackend` type? I get that technically it need not be, but maybe conceptually that's how we would want to think about it?","Is it clearer if the `pulumiEngine` is a member field of the `localBackend` type? I get that technically it need not be, but maybe conceptually that's how we would want to think about it?","Is it clearer if the `pulumiEngine` is a member field of the `localBackend` type? I get that technically it need not be, but maybe conceptually that's how we would want to think about it?","As an alternative, we could change this function to return an error.","As an alternative, we could change this function to return an error.","As an alternative, we could change this function to return an error.",No need for this to be a pointer?,No need for this to be a pointer?
"@@ -253,7 +253,8 @@ class SubmissionsController < ApplicationController begin if !test_runs.empty? authorize! assignment, to: :run_tests? - AutotestRunJob.perform_later(request.protocol + request.host_with_port, current_user.id, test_runs) + @current_job = AutotestRunJob.perform_later(request.protocol + request.host_with_port, current_user.id, test_runs) + session[:job_id] = @current_job.job_id success = I18n.t('automated_tests.tests_running', assignment_identifier: assignment.short_identifier) else error = I18n.t('automated_tests.need_submission') ",Metrics/LineLength: Line is too long. [122/120],Metrics/LineLength: Line is too long. [132/120],"You can remove this block---it's not wrong, but our code base doesn't generally restrict the request types unless we need to distinguish between multiple format types.",Metrics/LineLength: Line is too long. [132/120],Layout/ExtraSpacing: Unnecessary spacing detected.<br>Layout/SpaceBeforeFirstArg: Put one space between the method name and the first argument.,"I think in this case you want to render a 403 error if this fails, not flash a message. Please handle this sort of authorization in a `before_action` context. Also, this applies for `new`, `create`, etc. below",Align the operands of an expression in an assignment spanning multiple lines.,Metrics/CyclomaticComplexity: Cyclomatic complexity for perform is too high. [10/6]<br>Metrics/MethodLength: Method has too many lines. [39/20]<br>Metrics/PerceivedComplexity: Perceived complexity for perform is too high. [11/7]<br>Metrics/ParameterLists: Avoid parameter lists longer than 5 parameters. [6/5],I'm pretty sure this partial view is only ever rendered for students when `ran_by == 'student'`. Can you please confirm this and if so make the following changes: - rename this file so that it better describes when it is used (ex: `_test_runs_self_test.html.erb`) - remove all the code that checks if `ran_by == 'instructor'` since that is no longer necessary and set the props for the TestRunTable component appropriately.,Metrics/CyclomaticComplexity: Cyclomatic complexity for perform is too high. [10/6]<br>Metrics/MethodLength: Method has too many lines. [39/20]<br>Metrics/PerceivedComplexity: Perceived complexity for perform is too high. [11/7],Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.
"@@ -138,14 +138,11 @@ func signAndPublishDeviceEK(ctx context.Context, g *libkb.GlobalContext, generat } type deviceEKsResponse struct { - Results []struct { - MerklePayload string `json:""merkle_payload""` - Sig string `json:""sig""` - } `json:""results""` + Sigs []string `json:""sigs""` } -func getActiveDeviceEKMetadata(ctx context.Context, g *libkb.GlobalContext, merkleRoot libkb.MerkleRoot) (metadata map[keybase1.DeviceID]keybase1.DeviceEkMetadata, err error) { - defer g.CTrace(ctx, ""GetActiveDeviceEKMetadata"", func() error { return err })() +func getAllDeviceEKMetadataMaybeStale(ctx context.Context, g *libkb.GlobalContext, merkleRoot libkb.MerkleRoot) (metadata map[keybase1.DeviceID]keybase1.DeviceEkMetadata, err error) { + defer g.CTrace(ctx, ""getAllDeviceEKMetadataMaybeStale"", func() error { return err })() apiArg := libkb.APIArg{ Endpoint: ""user/device_eks"", ",pre-existing bug. We should split this function into `maybeStale` and `active` like in user_ek -- the `getServerMaxDeviceEK` is busted if the latest key is stale.,Should the storage format be forwards compatible for this change?,"Do you think ""own"" is redundant, since we only ever do this for self? I could agree with that.",I'm surprised @oconnor663 let you get away with `DeviceEk` rather than `DeviceEphemeralKeyInOtherWordsAKeyThatIsNotPersisted` :),linter complained about this line,Change to AllSecretKeyTypes for the same reason as revoke.go,"you're doing this in all cases, even when `GetEnabledSahredDHStrict` is off?",I think this can be changed to AllSecretKeyTypes for the same reason as btc.go,why not just always set it?,"Instead of making 2 calls, we make 1",i think you can delete `uidByKID` function in this engine now.
"@@ -130,13 +130,16 @@ public class ClipboardActionsBean implements ClipboardActions, Serializable { private transient Map<String, List<Action>> actionCache; + @Override public void releaseClipboardableDocuments() { } + @Override public boolean isInitialized() { return documentManager != null; } + @Override public void putSelectionInWorkList(Boolean forceAppend) { canEditSelectedDocs = null; if (!documentsListsManager.isWorkingListEmpty(DocumentsListsManager.CURRENT_DOCUMENT_SELECTION)) { ",This cleanup should have gone in a separate commit.,Maybe `map(String::valueOf)` to make sur we never NPE on this?,This is a formatting change too.,"`getProxies(doc, null)` is costly because it always does a search. It would be better to add a new `getProxies(doc)` API that is simpler and ends up using `KEY_PROXY_IDS` for DBS, and `PersistenceContext.targetProxies` for VCS.","Seems reasonable, but could we just make removal idempotent?",why not put this with an `&&` in the previous `if`?,We should use new `TrashInfo`.,"Is the intention to answer the query for committed state, or hypothetically if the current transient state were to be committed? This is consistent with the latter. If the former, you'd want `valueState.hasState`. Then this would be `ReadableState<Boolean>` as well.","nit: you can modify the signature of this method to throw IOExceptoin, but this should also be fine.",cc @hanishakoneru does OmStateMachine also need similar code?,this isn't an allocation
"@@ -74,7 +74,7 @@ func (wh *webhook) run(stop <-chan struct{}) { mux := http.DefaultServeMux // HTTP handlers - mux.HandleFunc(""/health/ready"", wh.healthReadyHandler) + mux.HandleFunc(""/healthz"", wh.healthHandler) mux.HandleFunc(osmWebhookMutatePath, wh.mutateHandler) server := &http.Server{ ",We could put this string in a central place somewhere so we can reference it in both places where it appears in the code here in this PR.,"Do we need to change vendor code, can't we do this stuff in openshift code?","What does ""url variable name for timeout"" mean here?","I wonder if it would make more sense to call this `/modules`, do you plan to add anything else?","i'd remove `healthcheck`counters, don't think they provide any value.",the formatting is weird here ;-),I think the `resp` need Close.,function is called `IsServerHealthy` not `IsServerReady` so this seems suspect,"Should we solve this TODO, right?",You should use the `Balancer` interface here.,"im not convinced about this. i wanted to not have any logic at all on the top level handlers (backend, frontend) and just chain downstream handlers, so they can be better reused. chaining would be their only responsibility. this ways you are doing too many things imo: composing _and_ branching. i'd liked more eg. @simitt idea of renaming the feSwitchHandler so it could be used in the backend if needed. this way you would have to duplicate the logic, and is not like this affords code or something."
"@@ -600,6 +600,7 @@ MINIFY_BUNDLES = { 'js/zamboni/buttons.js', 'js/zamboni/tabs.js', 'js/common/keys.js', + 'js/common-min.js', # jQuery UI 'js/lib/jquery-ui/jquery.ui.core.js', ","common-min.js is is a generated file. It shouldn't be included here. In fact, it's generated from this list of files, so I'm surprised that this helps.",if this the last place these files are referenced (and I assume so) then we should remove the files in static too. Or note this down in a follow-up issue (finding unused files later gets much more tedious.),Why the new arrangement here? Did a stray change sneak into the commit?,Is jquery ui possible to move to this setup too?,mmm having one `reviewers.styl` and one `reviewers.less` file is going to be really annoying,Did we run into an issue compressing a CKEditor lib last week?,Cleanup this file.,Cleanup this file.,Maybe name this `format-medium-datetime.pipe.ts` so that name reflects as accurately as possible the purpose of this pipe?,Maybe name this `format-medium-datetime.pipe.ts` so that name reflects as accurately as possible the purpose of this pipe?,"This is just a side effect, but I like the absolute pathing this introduces vs the relative pathing we were using."
"@@ -13,7 +13,7 @@ import ( ""code.gitea.io/gitea/modules/repository"" ""code.gitea.io/gitea/modules/setting"" api ""code.gitea.io/gitea/modules/structs"" - webhook_module ""code.gitea.io/gitea/modules/webhook"" + webhook_module ""code.gitea.io/gitea/services/webhook"" ) type webhookNotifier struct { ",I think we should rename _module to _service ...,"I think these are two separate concerns: whether module is public (visible in -modules) and whether it is runnable (can be selected for -target). There can be modules that are runnable, but not public. (for testing, during development) I suggest we remove this check for now. We can introduce second option to make module ""runnable"" later.",Design-wise looks weird to me removing the explicit Server dependency from all components. They still directly depend on the `Server` not just because of the `API`. Wouldn't be more correct keeping the `Server` references in each component and add `API` too? Am I missing anything?,@lunny it works on your current branch but not after merge! -> we still need this import,"please change this text to: ""missing X-GitHub-Event, X-Gogs-Event, or X-Gitlab-Event""",this function has to be moved to the interface file.,any lock needed?,Switch to v2 resource/action.,Do we want to keep the `v2` in this package's name? I suppose we could now move the code to `server/server.go`?,Missing information on which field the user should use.,Missing information on which field the user should use.
"@@ -649,7 +649,8 @@ public class DataWeaveExpressionLanguageAdaptorTestCase extends AbstractWeaveExp @Test public void evaluateInvalidCompiledExpression() throws MuleException { ExpressionCompilationException e = new ExpressionCompilationException(createStaticMessage(""oopsy"")); - expectedEx.expect(is(sameInstance(e))); + expectedEx.expect(ExpressionRuntimeException.class); + expectedEx.expectCause(is(sameInstance(e))); CompiledExpression compiled = new IllegalCompiledExpression(""#[ble]"", e); try (ExpressionLanguageSessionAdaptor session = ",we should assert thet the error message is meaningful here,"I don't think the ""string"" part should be removed, because otherwise it sounds like the expression is not an expression which is confusing.","This should be something like `""Expression '"" + expression + ""' is invalid.""`",This will result in 2 almost identical log lines in some scenarios. I think it's best to just keep the debug one.,Is the static import possible?,would it be valid for the 'mel' token to be in the middle of an expression instead of at the start?,No test is checking that the composite exception contains the different exceptions (from the parent and the child if corresponds in each case),when can it happen that a MessagingException doesn't have the event set?,Avoid using wildcards,Are there any positive tests we can have in this class?,"why was the cloning removed? if it's not needed anymore, remove the previous line too."
"@@ -262,6 +262,18 @@ function indexToInsertByPosition (items, position) { return (query in queries) ? queries[query](idx) : idx } +function removeExtraSeparators (template) { + let visiblePrev + const visibleItems = template.filter(el => el.visible !== false) + + return visibleItems.filter((el, idx, array) => { + const meetsDeleteConditions = !visiblePrev || idx === array.length - 1 || array[idx + 1].type === 'separator' + const toDelete = el.type === 'separator' && meetsDeleteConditions + visiblePrev = toDelete ? visiblePrev : el + return !toDelete + }) +} + function insertItemByType (item, pos) { const types = { normal: () => this.insertItem(pos, item.commandId, item.label), ",This is _a little_ hard to scan. I think that a `reduce` would work wonders here.,In this function I would assume that none of the `items` are `null`s and just didn't do this check.,when does this happen?,"This is not sufficient. We are using `array.filter`, which `isArrayLike` does not guarrantee to exist. Maybe we could change `array.filter(...)` with something like `isArray(array) ? array.filter(...) : Array.prototype.filter.call(array, ...)`. It might even be better to always use the latter form regardless of the type of `array`. This needs a little more investigation.","I guess the check for `isArray()` is for performance reasons, since `isArrayLike()` already returns true for arrays?","I think we want to use the hashKey api from src/api.js for this, rather than an array (this would work for 1.2.x as well)","> not containing ""M"" This seems wrong.",This looks unintentional,"@gkalpak Let me elaborate why it shouldn't break anything now. The only situation where we would fire `jqLiteRemoveData(element)` before and not fire `jqLite.cleanData([element])` here now is when `jqLiteAcceptsData(element)` is `false`. But if you then look at `jqLiteRemoveData` source, it changes anything only if `element.ng339` is defined. This property is only set to something non-`undefined` inside `jqLiteExpandoStore` and only if the second passed argument is truthy. That, in turn, happens in two places only: one is inside `jqLiteData`, the other one is in `jqLite#on`. In both cases this setter is guarded by the `jqLiteAcceptsData(element)` being truthy which contradicts our assumptions. Therefore, there should be no observable differences to external code here.","you never explained in the docs, what strict is? Not obvious that it is == instead of substring",`invalids` is supposed to be an array.
"@@ -121,6 +121,9 @@ func (bc *BuildPodController) HandlePod(pod *kapi.Pod) error { nextStatus := build.Status.Phase currentReason := build.Status.Reason + // if the build is marked failed, the build status reason has already been + // set (probably by the build pod itself), so don't do any updating here + // or we'll overwrite the correct value. if build.Status.Phase != buildapi.BuildPhaseFailed { switch pod.Status.Phase { case kapi.PodPending: ","Should we have utility functions that delineate which non-successful BuildPhases are set by the build pod (where it is *currently* just Failed) and which are set outside of the build pod (i.e. BuildPhaseError), in case those two lists change over time?","@bparees I think the API was overriding the `reason` and `message` here. With this changed, I don't get any flakes testing this (but both `reason` and `message` updates after being set from `builder.go`)","hmmm.. any idea why we were/are excluding complete builds here? note that line 337/335 actually then attempts to set a timestamp if the build is complete, which will never get invoked here....",this is the one case where you don't want to reset the field.,"I think Message and Reason should always be updated together, so i suggest moving this up into the individual case statements where Reason is being reset.","the downside to doing this is we can now never change the GetBuildPodName function since the only coupling between builds and their pods is through that function, regardless of when the build was created. What was the motivation to remove this field?",we don't want to record status here?,"there should be no harm in setting it to empty here, right? you're only worried about resetting it to empty when you've indicated a failure reason, but if the phase is pending, you haven't set a failure reason.","if this is optional, maybe it would be worth to explain what is the default behavior if I don't set this",also tolerate `IsNotFound` errors below when doing the actual deletion,s/if/If/ 2 spaces before `Garbage`
"@@ -328,6 +328,14 @@ func resourceComputeInstance() *schema.Resource { Computed: true, }, + ""network_ip"": &schema.Schema{ + Type: schema.TypeString, + Optional: true, + ForceNew: true, + Computed: true, + Deprecated: ""Please use address"", + }, + ""access_config"": &schema.Schema{ Type: schema.TypeList, Optional: true, ",@danawillow what was the plan with `address` and `network_ip`?,I have created #4828 to fully expand the resource schemas rather than continue with this generated approach.,This validation means that you cannot pass an empty string and as a result ALL of our EC2 instances that were created with a module which passes an empty string (which is a valid value) when an IP is not specified are now producing diffs.,"What is the benefit of changing the way people use the nat ip? This PR is already big, I would leave this change out of it for now and open an issue (explaining why it is desirable and how the benefits outweigh having to force users to change their config) if you feel strongly about it. Note: I don't know why they where split in two fields in the first place, I wasn't there when the decision was taken, maybe @danawillow has more insights.","Removals are done by using the `Removed` property and not removing the field entirely, so that any remaining users of the field see a descriptive error and not one that looks like a syntax error.",`ForceNew: true` as it doesn't seem like the network border group can be updated after creation.,These 2 lines should be removed,"Instead of marking this as `Computed: true`, this seems like it should be `Default: ""amazon""` to match the API.",is computed needed here?,@paddycarver fyi these have been deprecated for 2 years.,"Can you add a validation function for this please? e.g. `ValidateFunc: validation.StringInSlice([]string{emr.ScaleDownBehaviorTerminateAtInstanceHour, emr.ScaleDownBehaviorTerminateAtTaskCompletion}, false)`"
"@@ -42,7 +42,8 @@ cov = mne.cov.regularize(cov, evoked.info) import pylab as pl pl.figure() ylim = dict(eeg=[-10, 10], grad=[-400, 400], mag=[-600, 600]) -plot_evoked(evoked, ylim=ylim, proj=True) +picks = fiff.pick_types(evoked.info, meg=True, eeg=True) +plot_evoked(evoked, picks=picks, ylim=ylim, proj=True, exclude='bads') ############################################################################### # Run solver ",This will throw a warning since the `exclude` parameter is not set. Might be saner to do `exclude='bads'` then omit from the next line.,"Indeed this looks like it should work, but I would write a little 10 line test with read_info to make sure / assert it is the case (can use pytest.deprecated_call for ensuring it warns at the right time)","This used to operate in place, but now does a copy?",""", set `meg` explicitly to avoid this warning"" ... and you should only emit this if there are actually MEG channels present. Otherwise the value of `meg` does not matter and people should not care/be warned (e.g., when working with just EEG or fNIRS data the `meg=True` default won't matter)",no there is a separate arg now. Update the docstring and it's good to go.,I would also put this demo in the basic raw example plot_read_and_write_raw_data.py,remove this line. You do it below,Too many newlines,I don't think you shouldn't have to have the `exclude` statement anymore. Shouldn't your interpolation function eliminate the channels from `bads`? Or maybe we want to leave them in so they are not used in inverses? I'm not sure...,"it is easy to miss this if it is only here, and to a newcomer it may not be intuitive that `proj=True` relates to applying reference.","if the goal is to remove `evoked` from the calls, you can use `info['ch_names'].index(...)` instead"
"@@ -164,7 +164,8 @@ public class PullPhysicalPlan { // Could be one or more keys KEY_LOOKUP, RANGE_SCAN, - TABLE_SCAN + TABLE_SCAN, + UNKNOWN } /** ",We cannot know what the WHERE clause is for stream pull queries since it's not analyzed by the logical plan,"In any case where we actually have a plan, we always know the kind of plan it is.","Similarly, if we actually have a plan, we know whether or not it's a windowed source.","Assert non null values for the non error constructor? We don't ever have partial keys, do we? It's either all known or all unknown?","Slight rewording, since this check is done in query parsing before we know whether it's a TPQ or SPQ.",just noting that you can use `sourceTable.text()` instead of using a replace here,To check my understanding: the reason this PR adds window info into the output node is so the window info can be printed as part of the key?,"Not sure why `row` must be mutable... But if I change it, some tests break...","To better understand the PR. What is `columns` and what is `schema` exactly? Is `columns` the list of selected columns from the `SELECT` clause (in the corresponding order) ? Is `schema` the ""physical"" layout of the input (what is `schema` for a join query?)",is there any backwards compatibility concerns here or have these not been published yet?,"`rewrittenPredicate` is now only used in `SelectOperator`. I think this can also be refactored so that we only need to maintain a single member field, a.k.a `disjuncts` while `rewrittenPredicate` can just be a local declared field in constructor. Generally speaking I'd suggest we only keep one field as the truth-of-truth and all other forms could be inferred from this field in-flight when needed. So that we are not vulnerable to bugs that changes one of the field but not the other."
"@@ -101,9 +101,7 @@ func Execute(configFile io.Reader) { context.GetLogger(app).Fatalln(err) } } else { - tlsConf := &tls.Config{ - ClientAuth: tls.NoClientCert, - } + tlsConf := crypto.SecureTLSConfig(&tls.Config{ClientAuth: tls.NoClientCert}) if len(config.HTTP.TLS.ClientCAs) != 0 { pool := x509.NewCertPool() ",`crypto` module isn't imported.,"All constants should be `CamelCase` - don't change the old ones, but any new ones should follow that rule.",I think we can change 'Enabled' to `bool`. The `IsEnabled` method also defaults 'Enabled' to true.,I was thinking this would be conditionally required. If `client_auth` is `none` then you wouldn't need to set this.,Don't we need `ClientAuth` to be set to do any sort of validation from the cert pools?,How about: `TLSConfig contains TLS settings required to connect to the docker daemon via TCP` ?,"Multiple `grpc.Chain*Interceptor` options passed to the same NewServer call compose, so it's safe for calling code to add interceptors in addition to these.","Unfortunately we don't know the exact version yet, as we are subject to changes in golang. But we could implement the check ourselves. Basically run with `Certificate` verification mode only, but install a verification step that extracts the hostname from `CommonName` and does the lookup.",Can you change `allowed-cn` to `cert-allowed-cn` like other components?,Could you explain this line?,only move out enableForwarding?
"@@ -630,6 +630,10 @@ export class Resource { */ pause() { if (this.state_ == ResourceState.NOT_BUILT || this.paused_) { + if (this.paused_) { + dev.warn(TAG, 'pause() called on an already paused resource:', + this.debugid); + } return; } this.paused_ = true; ","`#warn` won't give us the call stack, this has to be an `#error`.",FMI: is `useResourcesNotify` still necessary? It would be great if we were able to stop calling `mutateElement` on each render.,Does this get destroyed when `destroy` is called or when `debugShowShadowVolume` is false?,to follow the convention: '3p-frame-context-in-name',"I combined this with the next test because the behavior here changed. Since we no longer set `src` based on the result of `parseSrcset`, the only thing that determines whether an image should show or hide its fallback is whether or not the image loaded, i.e. the result of `loadPromise`.","So, this class now needs `unlayoutOnPause` until we address that issue, right? Let's do this and add TODO and reference that bug#.","We also need to discuss the confusion that will be developing between ""can I render"" and ""can I prerender"" very soon with @mkhatib 's work. I'm leaning toward a hard and fast rule for now in one place and get the prerendering story done before tuning this deeper.",save those precious chars isNaN(delay) : this.renderOutsideViewport() : delay,Can this be moved to `ElementProto` in `custom-element.js`?,"Lookbehinds are brand new, impossible to polyfill.",Won't this get noisy?
"@@ -268,7 +268,10 @@ func (t *Team) Rotate(ctx context.Context) error { memSet := newMemberSet() // create the team section of the signature - section, err := memSet.Section(t.Chain.GetID()) + + // TODO -- fill in a non-nil if we can't write/admin this chain explicitly and need + // admin permissions. See CORE-5501 + section, err := memSet.Section(t.Chain.GetID(), nil) if err != nil { return err } ",why doesn't this try calling t.getAdminPermission()?,There's something pre-existingly weird about these methods. I think `TeamAllowStub` is unused. If you'd like you can merge them and I think `role` goes away.,"Log the error for the next person to debug this. Maybe they will try to combine SBS, subteams, and writer rotates and it will just be too much.",This wasn't used AFAICT.,I think a good test would be to try to post a link like that (bypassing service_helper functions and transactions code) and having it caught by precheck. There are some tests like this for implicit teams if you grep for `PrecheckAppendError`.,s/expected/minExpected or min,The above line failed before I added the new `EldestChainLink` type,not just admins so name prevAdminsAndOwners or prevHighSet,You should use enum to provide the valid values,"I almost wonder if the old code was just supposed to return here in the case where the token isn't found (making `DeleteToken` idempotent); that it doesn't might be a bug. The fix in this PR makes sense to me, though.",This method lives in the PFS server but it seems like a re-implementation of Authorize in the auth server - especially if we wire up group membership it probably makes sense to consolidate this logic in the auth server.
"@@ -32,13 +32,15 @@ const Routes = ({ match }) => ( <> <Switch> <%_ if (!readOnly) { _%> - <ErrorBoundaryRoute exact path={`${match.url}/:id/delete`} component={<%= entityReactName %>DeleteDialog} /> <ErrorBoundaryRoute exact path={`${match.url}/new`} component={<%= entityReactName %>Update} /> <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={<%= entityReactName %>Update} /> <%_ } _%> <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={<%= entityReactName %>Detail} /> <ErrorBoundaryRoute path={match.url} component={<%= entityReactName %>} /> </Switch> + <%_ if (!readOnly) { _%> + <ErrorBoundaryRoute exact path={`${match.url}/:id/delete`} component={<%= entityReactName %>DeleteDialog} /> + <%_ } _%> </> ); ","not so sure about that one... if the point of having the deletion modal on top of the entity list page is what matters, then there may be a better way to achieve that","not so sure about that one... if the point of having the deletion modal on top of the entity list page is what matters, then there may be a better way to achieve that","dont do this(since its not nice in a single page app, we do not want to propogate bad practices) instead just call the getAll action here and see if that helps, so that the store gets updated and list automatically gets updated.","dont do this(since its not nice in a single page app, we do not want to propogate bad practices) instead just call the getAll action here and see if that helps, so that the store gets updated and list automatically gets updated.","Not the best way to do it, but it's pretty quick and does not add bloat to the code.","Not the best way to do it, but it's pretty quick and does not add bloat to the code.",Pager isn't supported anymore,Pager isn't supported anymore,`entity.user = users.find(user => user.id.toString() === values.user.id.toString());`,`entity.user = users.find(user => user.id.toString() === values.user.id.toString());`,"I don't get it, why `dto !== 'mapstruct'`?"
"@@ -17,6 +17,8 @@ package cluster import ( ""context"" + ""github.com/gogo/protobuf/proto"" + . ""github.com/pingcap/check"" ""github.com/pingcap/kvproto/pkg/metapb"" ""github.com/pingcap/kvproto/pkg/pdpb"" ",remove the empty line,rm empty line,Please use `github.com/ngaut/log`.,rm empty line,"Can you move `""google.golang.org/grpc/status""` down with the rest of the 3rd party imports?",rm empty line,why change these three lines?,Remove empty line?,Remove empty line?,"Curious, are these changes related to / necessitated by pipenv removal?","Curious, are these changes related to / necessitated by pipenv removal?"
"@@ -51,7 +51,14 @@ public class LuceneCacheWarmer implements Runnable { for (final File indexDir : indexDirs) { final long indexStartNanos = System.nanoTime(); - final EventIndexSearcher eventSearcher = indexManager.borrowIndexSearcher(indexDir); + final EventIndexSearcher eventSearcher; + try { + eventSearcher = indexManager.borrowIndexSearcher(indexDir); + } catch (final FileNotFoundException fnfe) { + logger.debug(""Cannot warm Lucene Index directory {} because the directory no longer exists"", indexDir); + continue; + } + indexManager.returnIndexSearcher(eventSearcher); final long indexWarmMillis = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - indexStartNanos); ","Hi, What do you think of extracting this nested try to a separate method?","The reason the stack trace isn't logged is because it is using the error(Object) method which just invokes toString. If you instead call log.error(String, Throwable) method it will print the stack trace. Although I wonder if we want to only print the stack trace if tracing is enabled and leave it as is for when tracing is not?","I wouldn't normally expect to reinterpret the thread when throwing an exception that stating that we were interrupted. I find I would normally reset the status and return early or throw the exception, but not both.","This feels a little off to me, @olegz - why not just pass the ComponentLog in to the constructor? It should always be present.",Which exception has been observed here? Please don't catch exceptions when we don't actually know what they are.,"Even if the bundle does not have a BSN, shouldn't it get a startlevel? And be started?",can we use a CountDownLatch.await(1 minute) here instead? that way not too many logs will be printed and also it wouldn't wait any more than necessary ?,"Same here, there's plenty of other occurrences :)",Please don't catch `Exception` but `RuntimeException` or even a more specific one if there's a relevant one you know may happen. Also pass the exception `e` as second argument to `log.error` to get a stack trace.,Can't we just re-throw as an `UncheckedIOException` ?,Did you overlook this method?
"@@ -17,12 +17,17 @@ import com.google.inject.Binder; import com.google.inject.Module; import com.google.inject.Scopes; +import static io.airlift.configuration.ConfigBinder.configBinder; +import static org.weakref.jmx.guice.ExportBinder.newExporter; + public class EventListenerModule implements Module { @Override public void configure(Binder binder) { + configBinder(binder).bindConfig(EventListenerConfig.class); binder.bind(EventListenerManager.class).in(Scopes.SINGLETON); + newExporter(binder).export(EventListenerManager.class).withGeneratedName(); } } ",No need to add this since `EventListenerManager` doesn't have any `@Managed` annotations.,"This should be done inside the plugin. It's generally needed for certain libraries that don't do ""the right thing"", so the engine should not be involved. Why can't we do it like every other ClassLoaderSafeXXX variant and let plugins do the wrapping if necessary.",We should note in release notes that iceberg metric names changed,"Agreed, we should just bind an empty set here.",Make this part of `AbstractBootstrap` and then you can keep `AbstractBootstrap.group` private.,This method cannot be abstract because this class is public and it would break the API contract.,Deprecate `Builder` and provide new constructor `EventSubmitter(MetricContext context)`,Is that TODO still valid?,commit title is too long,Wouldn't it make sense to rename this to `EventIndices` while we're at it? I find `MoreIndices` too vague for it's very specific purpose. `EventWriter` or `EventIndexer` would be even more specific. Same would go for `MoreIndicesAdapter` and `MoreIndicesAdapterES6`. The method name `bulkIndex` on the other hand is unnecessarily specific. `write` would be a fine alternative imo.,Revert this change
"@@ -133,6 +133,17 @@ func (ms *Status) Start() error { return nil } + exists, err = ms.hasActionData() + if err != nil { + ms.updateErr(err.Error(), ""Unable to detect migration status"") + return err + } + if exists { + ms.update(""Starting migration of actions to the event-feed-service"") + go ms.migrateAction() + return nil + } + return nil } ",The migration runs in the background and does not prevent the ingest-service for starting fully while migrating the actions.,The migration lock is removed when the finish is called to prevent background migration from running on two ingest services.,"Previously we ran each migration step in it's own transaction. This runs this risk of leaving a customer database in a weird in-between state where they can't run a previous release or the current release. It also meant we needed to re-acquire the lock on the migrations table for each step in the migration, which would make for confusing logs in pachd if multiple instances were competing to make progress.",same thing here - I think we want the connection attempt to be scoped to the API request via its context,"After all the A1 actions are updated to A2, we re-ingest the actions to send them to the event-feed-service and policy information to config-mgmt-service.",Do we want to toggle it back to false after successful migration? Or do we want to keep it one for all future SQL work via ORM?,Do we rather want to panic or dirty exit here?,"This section of the migration seemed very curious to me. Why set fixed to true then immediately use it in the if? What I found was that if a game did not need a migration and the migrations was run against it, the actions would be set to nil. The new code prevents that from happening and we get the `Nothing to do, game works` as expected. Now, I am concerned because obviously people are using migrations already, so I am surprised this ""bug"" would exist, but i doubt its PEBKAC either?","Should we rename `etcdRev` to e.g. `timestamp`? This is stored in postgres now and is set to the current unix time, right?","Is it weird to draw all this attention to v1 -> v2? For new users, there has never been a v1. I considered renaming this function and it fell through the cracks, but we're only ""migrating v1 -> v2"" within the `MigrateToV2` function _if_ it's not a fresh install. Otherwise, we're really, er, ""Creating base IAM roles and policies"" . . . ? If you'd like to do a rename and push this logging into that function, I suppose that is fine. Otherwise, I'd modify this message to be something more like ""Setting up IAM basics"" or something.",can you remove negation and swap if/else blocks?
"@@ -112,6 +112,15 @@ public abstract class HttpClientTracer<REQUEST, CARRIER, RESPONSE> extends BaseT super.endExceptionally(span, throwable, -1); } + /** Convenience method primarily for bytecode instrumentation. */ + public void endMaybeExceptionally(Context context, RESPONSE response, Throwable throwable) { + if (throwable != null) { + endExceptionally(context, throwable); + } else { + end(context, response); + } + } + private Span internalStartSpan( Context parentContext, REQUEST request, String name, long startTimeNanos) { SpanBuilder spanBuilder = ","I'd put this method in a PR with at least one usage of it - inClientSpan / withClientSpan are quite clear here, but not this method which isn't used. One way to keep PRs small is to change just one usage in one PR, and remaining usages in a mechanical way in another.","does this seem like the right default, or should we not try to propagate at all if we don't have one in the cache?","ah, this is another place where we can't do `TRACER.startScope()` because we need two return values `Scope` and, in this case, `requestBuilder`",let's keep the scope activation,Why was this just removed?,this is needed by TracingExecutionInterceptor.afterMarshalling (2.2),"I think ending in `close` handles this, either that or we don't have any unit test covering this case","Kubernetes client is a wrapper in okhttp instrumentation I think. We probably want to refactor this to inherit from the okhttp tracer at some point, assuming it's technical feasible",Should this update client span in context as well?,Is this not needed anymore?,This doesn't look like it's used anymore
"@@ -48,10 +48,10 @@ namespace System.Text.Json.Serialization.Converters // Read method would have thrown if otherwise. Debug.Assert(tokenType == JsonTokenType.PropertyName); + ReadOnlySpan<byte> unescapedPropertyName = JsonSerializer.GetPropertyName(ref state, ref reader, options); JsonPropertyInfo jsonPropertyInfo = JsonSerializer.LookupProperty( obj, - ref reader, - options, + unescapedPropertyName, ref state, out bool useExtensionProperty); ","Note that `GetPropertyName` is marked with `AggressiveInline` but `LookupProperty` is not (it used to be, but there became 4 references to it over time causing code bloat).",You pulled this out from `LookupProperty` to pass less state?,"If we are already calling `reader.GetString()` below, consider using that instead?",">IsNoCache [](start = 24, length = 9) if the cache was disabled, is it ok to cache the property string on it?","Why the local variable here, rather than passing in `&(this->propertyRecord)`?",is this a functional change for the non-generator scenario?,"These ones using a pointer, is it safe to do like this?","Are we happy with using the same threshold for chars, effectivly doubling the stackalloc size? I know the thresholds are all over the place in this repo (100,256,512,1024), but I'm still a bit uneasy with 512 bytes (not even talking about 1024 in MultiPartcontent).","this is an else part, the 'if' part already checking the VirtualTableInfo thing. That code is not needed anymore right? Could you remove it>",We just validated that `jsonPropertyInfo.NameAsString` is not null in the debug.assert above. We still need the `!` here?,"Probably don't need this condition anymore? If we're adding a property record, the old invariant that it shouldn't already be in the map, should still hold"
"@@ -27,6 +27,7 @@ return array( 'logout' => ""Log out"", 'logoutok' => ""You have been logged out."", 'logouterror' => ""We couldn't log you out. Please try again."", + 'session_expired' => ""Your session has expired. Please reload the page to log in."", 'loggedinrequired' => ""You must be logged in to view the requested page."", 'adminrequired' => ""You must be an administrator to view the requested page."", ",Reloading the page won't always prompt for login.,"these are not related, ok for now but next time please do separate PRs","these are not related, ok for now but next time please do separate PRs",Thoughts on using sprintf instead of splitting this define into two? I'm thinking mostly of cases where people may be using (outdated) language packs... Keeping the same constant name may facilitate an easier upgrade...,"Please indent with tabs, not spaces.",it has not yet been enable**d**,Would you mind adding the messaging service SID here? I neglected to do that in my PR  ,Would you mind adding the messaging service SID here? I neglected to do that in my PR  ,"Nit: translators might not know what a story is. It's worth adding context here, communicating the fact that users open a full page experience and that clicking here will close it and go back to where they were originally","Can you also add these to en.js, with a description of each?",Lets not add the `account` path prefix to `login` route path.
"@@ -117,8 +117,6 @@ class Collection(ModelBase): objects = CollectionManager() - top_tags = TopTags() - class Meta(ModelBase.Meta): db_table = 'collections' unique_together = (('author', 'slug'),) ",The `TopTags` at the beginning of the file is now unused and can be removed as well.,"We should create an issue to remove this, I don't think the frontend cares about top tags at all...","Still unresolved: ""All mutations that return collection should wrap it in ChannelContext. You should add it to all deprecated collection meta mutations in this file.""","Still unresolved: ""All mutations that return collection should wrap it in ChannelContext. You should add it to all deprecated collection meta mutations in this file.""",And what would `_base_manager` or `_default_manager` be? Do they need to be defined too?,"as before, I find it unexpected that this is a `str`, so I'm confused about what this really is.",Shouldn't we rather use hyphen here? Similar problem was mentioned in #1553. Same below.,Shouldn't we rather use hyphen here? Similar problem was mentioned in #1553. Same below.,All mutations that return collection should wrap it in `ChannelContext`. You should add it to all deprecated collection meta mutations in this file.,All mutations that return collection should wrap it in `ChannelContext`. You should add it to all deprecated collection meta mutations in this file.,"The original code made sense with this choice of vocabulary. After all, models (classes) are unique and order doesn't matter."
"@@ -179,6 +179,12 @@ $array = array('rowid' => 'ID', 'ref' => 'Ref', 'label' => 'Label', 'datec' => ' print $form->selectarray('TAKEPOS_SORTPRODUCTFIELD', $array, (empty($conf->global->TAKEPOS_SORTPRODUCTFIELD) ? 'rowid' : $conf->global->TAKEPOS_SORTPRODUCTFIELD), 0, 0, 0, '', 1); print ""</td></tr>\n""; +print '<tr class=""oddeven""><td>'; +print $langs->trans('TakeposGroupSameProduct'); +print '<td colspan=""2"">'; +print ajax_constantonoff(""TAKEPOS_GROUP_SAME_PRODUCT"", array(), $conf->entity, 0, 0, 1, 0); +print ""</td></tr>\n""; + $substitutionarray = pdf_getSubstitutionArray($langs, null, null, 2); $substitutionarray['__(AnyTranslationKey)__'] = $langs->trans(""Translation""); $htmltext = '<i>'.$langs->trans(""AvailableVariables"").':<br>'; ","If you use (and we should from v12) the new feature ""forcereload"" (param 1 at position 6), it means clicking on image is enough to switch. This also means you don't have to make the ""$res = dolibarr_set_const($db, 'TAKEPOS_GROUP_SAME_PRODUCT', ..."" when you click on save button or you will erase the setup",I think you must also add a AND pr2.entity IN ('.getEntity('product').') in the WHERE of the adde subrequest.,"Why renaming 0 into 3. This seems to break compatibility/feature with the page that include the tpl and manage the ""correct_stock"" action that need 0 or 1 to know if it is a + or - stock movement.","Note that you should prefer ""elseif"" than ""else if""","Because we want API to be a low level and this method may generate a high level of subrequest, it is better to add an option to do this. For example, other api have a parameter call $includestockdata set to 0 by default. And load of stock is done only if this param is set to 1. Can you add this ?",Why disabling the percent discount ?,"If a product has several different categories (most common case when tags are used), this will duplicate record of products. Also what should be the position if product has both tag AAA and tag ZZZ","What if there is 11 fields. position 40.11 will be before 40.2 May be we can make something like float('40.'.sprintf('%03s',$i));","Problem here is that we always translate value, and sometime we should just show the value as it is. In which case did you get a missing translation ?",This test will always be true because hookmanager seems to not be imported with global $hookmanager,"I don't like the idea of this being exposed via an API. Can we just make it ""username""?"
"@@ -23,7 +23,7 @@ angular.module('<%=angularAppName%>') var url = '//' + loc.host + loc.pathname + 'websocket/tracker';<% if (authenticationType == 'oauth2') { %> /* globals localStorage */ /*jshint camelcase: false */ - var authToken = JSON.parse(localStorage.getItem('ls.token')).access_token; + var authToken = JSON.parse(localStorage.getItem('jhi-authenticationToken')).access_token; url += '?access_token=' + authToken;<% } %> var socket = new SockJS(url); stompClient = Stomp.over(socket); ",shouldnt this be `$localStorage.authenticationToken` ? @cicoub13,shouldnt this be `$localStorage.authenticationToken` ? @cicoub13,can we use variable name`jhi-authenticationToken` plz,can we use variable name`jhi-authenticationToken` plz,"the key name is very misleading, I think we should change it to something like `language` or `locale`","the key name is very misleading, I think we should change it to something like `language` or `locale`","Since you are moving this code around, can you compute it dynamically (wrapped in a function for example) instead of accessing the `config` global? You can get the store with `APP.store.getState()`.",Do we not have a method for this already?,"Why is this removed? I guess because the local storage backend takes care, but then why do we load it from there on line 27?","One problem I see is that account info might be fetched while not login in and you might already have changed language in UI, so we need to ensure this doesnt switch it back","One problem I see is that account info might be fetched while not login in and you might already have changed language in UI, so we need to ensure this doesnt switch it back"
"@@ -1335,7 +1335,13 @@ class CheckoutDeliveryMethodUpdate(BaseMutation): ), ) - delivery_method = convert_to_shipping_method_data(shipping_method) + delivery_method = convert_to_shipping_method_data( + shipping_method, + shipping_models.ShippingMethodChannelListing.objects.filter( + shipping_method=shipping_method, + channel=checkout_info.channel, + ).get(), + ) cls._check_delivery_method( checkout_info, lines, shipping_method=delivery_method, collection_point=None ) ",Wouldn't be better to have here `.first()`? I don't see any try/catch here,Wouldn't be better to have here `.first()`? I don't see any try/catch here,It should be `channel_slug` from middleware. This resolver should work without slug if it's only one channel in Saleor.,It should be `channel_slug` from middleware. This resolver should work without slug if it's only one channel in Saleor.,Are we sure that should be a task? What if I remove the shipping method from channel `X` and a few seconds after(before the task is executed) some client tries to complete checkout with this shipping method assigned to checkout?,Are we sure that should be a task? What if I remove the shipping method from channel `X` and a few seconds after(before the task is executed) some client tries to complete checkout with this shipping method assigned to checkout?,"This is mutation for managing the shipping_method. It is fine if this part of code will raise an error (it is even expected with inccorect ID). IMHO this part of code should work as previously - If shipping_method doesn't exist then we raise an error. If there is an issue with relation ShippingMethod type to ShippingMethod model, then I would overwrite the mutation method to handle such case. Currently we change the behaviour of Saleor, as your function can return None here, which were never happen before.","This is mutation for managing the shipping_method. It is fine if this part of code will raise an error (it is even expected with inccorect ID). IMHO this part of code should work as previously - If shipping_method doesn't exist then we raise an error. If there is an issue with relation ShippingMethod type to ShippingMethod model, then I would overwrite the mutation method to handle such case. Currently we change the behaviour of Saleor, as your function can return None here, which were never happen before.",Maybe it would be useful to wrap this into a `for_channel` queryset? We have the same pattern for Stock model and it's easy to reuse and read.,Maybe it would be useful to wrap this into a `for_channel` queryset? We have the same pattern for Stock model and it's easy to reuse and read.,This drops 12 queries from the test case. I think this might be due to Django autocaching intermediary lookups that weren't listed (lines 70 and 71)
"@@ -210,6 +210,7 @@ func (o *RollbackOptions) Run() error { return err } target = deployment + configName = r.Name } if target == nil { return fmt.Errorf(""%s is not a valid deployment or deployment config"", o.TargetName) ",add default or check if the `configName` is not empty,shouldn't we check if this cast succeed?,@deads2k @juanvallejo can you confirm this will work? :-),Why can't this be part of details?,"You have already claimed those RCs above, no?",This is pretty close to the point where it needs to be abstracted - you added a few hundred lines of duplication.,Is this going to record an event over and over and over?,Why aren't you using pointer receivers?,Note to self: No AtomicWriter here?,can we add the suggestion here (on server side),combine with above line?
"@@ -28,9 +28,9 @@ module Idv end def render_document_capture_cancelled - failure(I18n.t('errors.doc_auth.document_capture_cancelled')) mark_steps_incomplete redirect_to idv_url + failure(I18n.t('errors.doc_auth.document_capture_cancelled')) end def render_step_incomplete_error ","Arguably we could remove `link_sent` from `HYBRID_FLOW_STEPS` since it's not having any effect here anyways, but I don't think it hurts anything to keep.","Arguably we could remove `link_sent` from `HYBRID_FLOW_STEPS` since it's not having any effect here anyways, but I don't think it hurts anything to keep.",allow loading data from the async flow,allow loading data from the async flow,"I think we may want to leave this default setting thing in to keep things smooth during a deploy, with old servers expecting data in the session hash, and new servers ignoring it then follow up with another PR to drop it next deploy","I think we may want to leave this default setting thing in to keep things smooth during a deploy, with old servers expecting data in the session hash, and new servers ignoring it then follow up with another PR to drop it next deploy","style nit, indent the contents of the hash? give each of the keys above its own line?","style nit, indent the contents of the hash? give each of the keys above its own line?","One thing I notice is that after the user cancels, this response will cause the page's form to submit, leaving them at the `link_sent` step with the error notice. But since we're not considering cancellation on the step itself, we'll continue to poll, causing the page to reload over and over until the user presumably clicks the ""< Back"" link to get out of the step. Possible improvements could be: - Don't poll if they've cancelled - Send the user somewhere else after they've cancelled","One thing I notice is that after the user cancels, this response will cause the page's form to submit, leaving them at the `link_sent` step with the error notice. But since we're not considering cancellation on the step itself, we'll continue to poll, causing the page to reload over and over until the user presumably clicks the ""< Back"" link to get out of the step. Possible improvements could be: - Don't poll if they've cancelled - Send the user somewhere else after they've cancelled","I feel like we have been using more kebab case class names, should we kebab-case this and `doc_capture_continue_button_form` while we're here? (I don't feel strongly)"
"@@ -41,7 +41,7 @@ var handlerRegistry = b.Build<MessageHandlerRegistry>(); var messageTypesHandled = GetMessageTypesHandledByThisEndpoint(handlerRegistry, conventions, settings); var typesToSubscribe = messageTypesHandled.Where(eventType => !requireExplicitRouting || publishers.GetPublisherFor(eventType).Any()).ToList(); - return new ApplySubscriptions(typesToSubscribe); + return new ApplySubscriptions(typesToSubscribe, settings.ExcludedTypes); }); } ",`var typesToSubscribe = messageTypesHandled.Where(eventType => !requireExplicitRouting || publishers.GetPublisherFor(eventType).Any()).ToList();` this part needs to be changed.,Why is okay to not filter `messageTypesHandled` now? I didn't see anything your changes that addressed this. Was this actually uneeded?,should we limit the concurrency in Subscriber1 too?,maybe we should add a note to rename this class to `MessageDrivenPublishSubscribe` since it sets up both receiving and sending subscriptions and hooks into the publish pipeline.,"Is the method going to be renamed, as in the PR title?",since this tests specifies .Repeat(r => r.For<AllTransportsWithCentralizedPubSubSupport>()) there should be no need to register publishers?,`{eventType}` should be in `'`. Wondering why there is no test failing as the acceptance test contains the ``'?,"Not really related to this PR. But the AutoSubscribe feature is way to complex, envies way to many things it doesn't own and also reimplements some of the scanning logic. It feels very wrong. Can we do something here in another PR? @janovesk @SzymonPobiega","you can now use `c.MessageDrivenPubSubRouting().RegisterPublisher(typeof(MyEvent), PublisherEndpoint)` instead :)",this needs to be properly obsoleted before merging.,since this tests specifies .Repeat(r => r.For<AllTransportsWithCentralizedPubSubSupport>()) there should be no need to register publishers?
"@@ -26,10 +26,7 @@ public final class Jetty11Singletons { INSTRUMENTER = ServletInstrumenterBuilder.<HttpServletRequest, HttpServletResponse>create() .addContextCustomizer( - (context, request, attributes) -> { - context = ServerSpanNaming.init(context, CONTAINER); - return new AppServerBridge.Builder().init(context); - }) + (context, request, attributes) -> new AppServerBridge.Builder().init(context)) .build(INSTRUMENTATION_NAME, Servlet5Accessor.INSTANCE); private static final JettyHelper<HttpServletRequest, HttpServletResponse> HELPER = ","should `ServerSpanNaming.get()` context customizer be added here? I notice it's missing in some cases and included in others, but not clear to me why",I'll send a follow-up PR to change these attribute names to `trace_id` and `span_id` to match logging MDC attribute names.,This would have been relevant only when request is handled by a jax-ws framework that we don't have integration with (or when framework instrumentation is disabled or when there is a bug that prevents it from working properly) because jax-ws framework instrumentation runs before it and already sets the name.,"I think `newInstrumenter(SpanKindExtractor)` is fine for the rare case of an instrumenter that only generates client spans without propagation, or otherwise the semantics of the overloads for `newClientInstrumenter` become too different",The idea behind this was that it allows modifying context before it gets attached to the carrier so that `RequestDispatcherAdvice` that reads context from request attribute would get the same naming context as the request originally had.,"if possible, better to set attributes on the SpanBuilder above",`SpringWebMvcDecorator.DECORATOR` now extends `HttpServerTracerBase`. I had to rename this method to avoid a name conflict. DECORATOR.OnRequest is now used to set span attributes and create the default span name while `DECORATE.updateSpanNameUsingPattern()` updates a span with a custom name.,Is it possible for server span to be null here? In what case?,Maybe this class should be called `ServerSpanNaming`?,The idea is to remove the methods that don't accept a `TracingBuilder`,what do u think of `startScope`?
"@@ -14,7 +14,8 @@ * limitations under the License. */ -import {Messaging, WindowPortEmulator} from './messaging.js'; +import {Messaging, WindowPortEmulator} from './messaging'; +import {TouchHandler} from './touch_handler'; import {getAmpDoc} from '../../../src/ampdoc'; import {isIframed} from '../../../src/dom'; import {listen, listenOnce} from '../../../src/event-helper'; ",Please change file name to `touch-handler`.,"Can you explain how ""messaging"" name here is getting resolved? Also, what will this look like when imported from the ""amp-viewer"" repo?",curious about the size of the intersection-observer-polyfill extension.,This exception is added because the amp-analytics tag needs to send messages to the third-party iframe. It covers the import of the file that contains sendMessage().,"Please move this note to where you initialize Amplitude now, so we can remember.",let's be more specific I see examples folder has `pwa.js` file that is passing presubmit check.,are you sure we need this mock?,dangled commas are useful. why removing them?,dangled commas are useful. why removing them?,"Do you think this is helpful, or unnecessary? I thought it might make sense to explicitly opt-in to this pattern.",This should be moved out of the root `.eslintrc.js` and into `src/.eslintrc.js`.
"@@ -822,9 +822,7 @@ public class GlueHiveMetastore private static List<String> buildPartitionNames(List<Column> partitionColumns, List<Partition> partitions) { - return partitions.stream() - .map(partition -> makePartitionName(partitionColumns, partition.getValues())) - .collect(toList()); + return mappedCopy(partitions, partition -> makePartitionName(partitionColumns, partition.getValues())); } /** ","We could keep this as `toImmutableList()`. Moving away from streams simply to pre-size the output list, in code that's already doing expensive RPC calls, is a hard sell from a code readability standpoint.",It's probably late for this change but dots.are.not.substitutes.for.spaces.,is it the only place where we use `HashSet::new` like that?,Nit: update doc at L152 as well?,anyway we can avoid this?,Nit: No need to wrap here,Please don't put this code here. `HiveCopyEntityHelper` is a generic class that should not have anything avro specific. You can look at `HiveAvroCopyEntityHelper` to see how this kind of modification was done before.,We don't need a separate mapValues() step for materialization anymore -- we can just materialize the result of the transformValues() above directly.,We already get the partition info in replacecommit metadata. Is this log necessary? Let's make it a debug level log if necessary.,"when we deserialize aggregators, we probably have to apply the function to the aggregator first, before doing any post-aggregations","What's the purpose of this change? Is this fixing an existing bug, or something introduced with the KLIP-50 work?"
"@@ -69,7 +69,7 @@ public class PluginSubtypeMarker extends AbstractProcessor { try { write(e); } catch (IOException x) { - processingEnv.getMessager().printMessage(Kind.ERROR, Functions.printThrowable(x), e); + processingEnv.getMessager().printMessage(Diagnostic.Kind.ERROR, Functions.printThrowable(x), e); } } } ",Not to be confused with `hudson.util.FormValidation.Kind`.,"Since we don't have the same drivers for Hibernate Reactive, should it have its own code for this?",Nitpick: I would probably have considered using a `dict` instead of multiple `if`/`else`s. But this is probably faster given the relatively small number of items we have to map...,Why is this needed?,"probably an unrelated change (sorry), `CARRIER` type parameter is removed, without too much downside, and definitely feels nicer just being <REQUEST, RESPONSE>","Changes like this worry me. Personally, I'd rather people use things like `_` to indicate intentionally wrong things.",Smaller class names mean smaller JARs :wink: Maybe use the abbreviation `Syn`?,"`System.Delegate` and `System.MulticastDelegate` marshaling is not AOT friendly. We cannot tell the delegate type to use during AOT compilation for these cases. The marshaling logic is suppressing the AOT warning for the delegates, but this suppression is not correct for the abstract delegate types. This change also needs a matching change in the marshalling logic to avoid suppressing the AOT compatibility warning for these cases.","In line 585ff in this file, should we add DpiUnawareGdiScaled to have parity with the DpiHelper from the runtime? Can we actually consolidate DpiHelper, maybe with #ifs and File References, so we have parity here?",This probably needs to go before release...,How come this is needed? To handle Windows paths?
"@@ -100,6 +100,11 @@ class Api < Roda render_with_games end + r.on 'title', String do |title| + request.params['title'] = title + render(pin: request.params['pin'], games: Game.home_games(user, **request.params).map(&:to_h)) + end + r.on 'game', Integer do |id| halt(404, 'Game not found') unless (game = Game[id]) ",why do you do this?,why do we need to pass in title at all? the game data should have that,can you instead add this to line 126 in the array?,you can just put this in the main on line 94,let's not check in any of the assets,how can hot seats ever get pinned?,"instead could we make this an option on the to_h, so to_h takes in a param who it's for",this breaks games that don't support 5 players like 1836jr. in lib/engine.rb i have a function called player_range,"you can just make the initializer take in an either an array of names or the hash. if an array of names, then you can do this logic",i wonder will this break compatability with all pins?,why do we delete seed? just keep it in. once you make this change go ahead and merge
"@@ -394,6 +394,14 @@ def _perform_kumascript_request(request, response_headers, document_locale, response_headers['X-Kumascript-Caching'] = ( '200 OK, Age: %s' % resp.headers.get('age', 0)) + # We defer bleach sanitation of kumascript content all the way + # through editing, source display, and raw output. But, we still + # want sanitation, so it finally gets picked up here. + resp_body = bleach.clean( + resp_body, attributes=ALLOWED_ATTRIBUTES, tags=ALLOWED_TAGS, + strip_comments=False + ) + # Cache the request for conditional GET, but use the max_age for # the cache timeout here too. cache.set_many({ ",This is to sanitize the HTML in the EJS templates?,"`request.http_headers.set_default('content-type', 'application/xml; charset=utf-8')`?",Should we update _internal_response.encoding in text method? This will cause some side effect?,def _need_new_token(self): # type: () -> bool return not self._token or self._token.expires_on - time.time() < 300 Seems like self._token is None is not needed?,"Two questions: 1. We have a few read() in ContentDecodePolicy, why we only need to change this? 2. Why we read() in sync while not read() in async? Will this inconsistent behavior cause problems?",should be `# type: ignore`,"asking as I don't know how this works on Python... if the service introduces new headers/query parameters, this needs to be updated? or will the user be able to add more logging policies if they desire? -> it might not be needed if the list is always updated though",This caching stuff works with Redis. I'm also sad we're doing this  ,probably we want to modify doc for x_ms_version in this class? it's not a param now,Then the pipeline will call on_request or send or both? Do we have a design for this scenario? @annatisch,Seems like we missed cls and response is not optional
"@@ -82,7 +82,7 @@ class MeshMovingTestCase(KratosUnittest.TestCase): ""MESH_VELOCITY_X"", ""MESH_VELOCITY_Y"", ""MESH_VELOCITY_Z""], - ""output_file_name"" : \""""""""+result_file_name+""""""\"", + ""output_file_name"" : \""""""""+result_file_name.replace(""\\"", ""\\\\"")+""""""\"", ""model_part_name"" : ""Probe_1"", ""time_frequency"" : 0.1, ""use_node_coordinates"" : true ","ouch sorry guys this is my bad, I didn't know how to do this in a portable way :/ Would you say this is a good solution?",What is this supposed to do? Create a new (and empty) Model and reset it??,"I'ld rather remove the ""not worrying"" here and add a ""be careful to escape special chars so borg gets to see them and they are not expanded by your shell"" to the patterns that frequently have a `*` or so in them.",May be we can issue a deprecation warning here?,Remove the TODO,Is it doable to have testing_utilities as a sub module of KratosUnittest so we only import testing once?,"@TommyClausner this is the part that seems like a bug to me. When `morph.apply`'ing to a STC, effectively in the code you were always setting `mri_resolution=True, mri_space=True` (see below; here I've done it explicitly just to keep the functionality equivalent). Was this intentional? It seems like it ignores the arguments to `morph.apply`.",this is also not correct,be real nice if we didn't even need this but ya know,"please use os.path.join, such things fail in windows","@loumalouomega why did you not pass the `self.settings[""material_import_settings""]` in StructuralMechanics? @bodhinandach just copied this but I am not sure what was your initial intention"
"@@ -279,11 +279,16 @@ public class Task implements Runnable { @SuppressWarnings(""unchecked"") Class<? extends DataPublisher> dataPublisherClass = (Class<? extends DataPublisher>) Class.forName( this.taskState.getProp(ConfigurationKeys.DATA_PUBLISHER_TYPE, ConfigurationKeys.DEFAULT_DATA_PUBLISHER_TYPE)); - DataPublisher publisher = closer.register(DataPublisher.getInstance(dataPublisherClass, this.taskState)); + SingleTaskDataPublisher publisher = + closer.register(SingleTaskDataPublisher.getInstance(dataPublisherClass, this.taskState)); LOG.info(""Publishing data from task "" + this.taskId); publisher.publish(this.taskState); + } catch (IOException e) { + throw closer.rethrow(e); } catch (Throwable t) { + LOG.error(String.format(""To publish data in task, the publisher class (%s) must extend %s"", + ConfigurationKeys.DATA_PUBLISHER_TYPE, SingleTaskDataPublisher.class.getSimpleName()), t); throw closer.rethrow(t); } finally { closer.close(); ","This requires data publishers to be of type SingleTaskDataPublisher. If any user is already using a DataPublisher that is not of this type, Gobblin would fail.",Should be `implements`.,"Can you switch the order of `task.` and `DATA_PUBLISHER_PREFIX`, otherwise its not really a prefix. Same for the the `job` param above.",Should this be part of `DataPublisher` or of a common set of capabilities?,Changed by mistake?,provisioning of topic should be optional and opted-in via a configuration,I would suggest make `System.currentTimeMillis()` into a protected method as the default implementation(with a state object as parameter input) so that it can be easily extended in the future.,"This may lead to data loss. If the metadata includes checkpoints and the publish of data fails, on the next run will use the new checkpoints. We should publish data first. Generally, duplicate data is better than data loss.",Don't these have to be static for this to take effect? and why can't we just not use the method?,Does this change the publish behavior? Shouldn't we publish to the DatasetTargeRoot path defined from source?,Why does the equals check only include the topic name and not the other fields?
"@@ -49,6 +49,8 @@ def sanitize(x: Any) -> Any: # pylint: disable=invalid-name,too-many-return-sta elif isinstance(x, (list, tuple)): # Lists and Tuples need their values sanitized return [sanitize(x_i) for x_i in x] + elif isinstance(x, type(None)): + return ""None"" else: raise ValueError(""cannot sanitize {} of type {}"".format(x, type(x))) ",Would `elif x is None` work?,Would `elif x is None` work?,This is a bug fix. We weren't doing any validation before.,"I don't understand what's going on here. This function returns `str` (a type) if `x` is `None`, but `x` (a value) otherwise. That doesn't seem right. And why is it needed at all? The logic in `utils.py` already handles the case when `x` is `None`.","I don't understand what's going on here. This function returns `str` (a type) if `x` is `None`, but `x` (a value) otherwise. That doesn't seem right. And why is it needed at all? The logic in `utils.py` already handles the case when `x` is `None`.","It's fine to leave off `AsyncField.compute_value()`. In this new reorganization, `AsyncField` is simply a subclass.",Missing closing paren here.,"I think this would be easier to understand if it was named `exactly_one` and if it accepted an iterable, like `any` and `all`?","I think this would be easier to understand if it was named `exactly_one` and if it accepted an iterable, like `any` and `all`?","We'll want to remove this without a deprecation cycle once possible under the same logic as the `enum()` removal, i.e. that this API was experimental (albeit highly useful!). Maybe hold off on deprecating this so that we can have a dedicated PR for the removal.","Nope, this is mypy's internal NoneType, not the type of None."
"@@ -1,5 +1,5 @@ # -*- encoding : utf-8 -*- -class RemoveDefaultValueFromRequestCreatedAtAndRequestUpdatedAtOnRequestSummary < !rails5? ? ActiveRecord::Migration : ActiveRecord::Migration[4.2] # 4.1 +class RemoveDefaultValueFromRequestCreatedAtAndRequestUpdatedAtOnRequestSummary < ActiveRecord::Migration[4.2] # 4.1 def up change_column_default :request_summaries, :request_created_at, nil change_column_default :request_summaries, :request_updated_at, nil ",Line is too long. [117/80],Line is too long. [98/80],Line is too long. [110/80],Line is too long. [105/80],Line is too long. [88/80],Line is too long. [108/80],Line is too long. [93/80],Line is too long. [87/80],Line is too long. [81/80],Line is too long. [104/80],Line is too long. [99/80]
"@@ -359,7 +359,7 @@ namespace System.Xml.Serialization _writer.Write(""if (type == typeof(""); _writer.Write(CodeIdentifier.GetCSharpName(type)); _writer.Write("")) return new ""); - _writer.Write((string)serializers[xmlMappings[i].Key]); + _writer.Write((string)serializers[xmlMappings[i].Key!]!); _writer.WriteLine(""();""); } } ","At line 331, you do `(string?)` and here you do `!`? Maybe both are fine, just something I noticed. Not sure if it needs to be changed.","Why do we need `!` here and below? We already asserted that `key != null` and if it is, we throw above (line 165).","We already have a `Debug.Assert(key != null) `above. ~If you mark `ThrowInvalidOperationException_SerializerDictionaryKeyNull` as `DoesNotReturn`, you wouldn't need to add these `!`.~ **Edit:** Looks like `ThrowInvalidOperationException_SerializerDictionaryKeyNull` is already marked as such. Why do we need the `!` here? To me, it shouldn't be necessary. Same with line 135 (below).",Please add a TODO requesting this be removed once #50915 is addressed.,Is it uncommon to use named parameters in this codebase?,`name` should be nullable on above method (line 563) also.,"Since `string` is a reference type, this check cannot be optimized by the JIT. It's likely then that users registering a custom string comparer might experience unexpected performance regressions when serializing dictionary keys. Would it be possible to run a few benchmarks, and if performance difference is substantial, replace this with a cached flag?",Nit: introduced a blank line #Resolved,"nit: remove ""the"" and change to ""If the value is <see...""",`name` should be nullable on above method (line 577) also.,Two existing issues in this attribute. 1. It is odd that the ctor is below the properties. 2. We don't store the `Type` ctor arg in a property anywhere?
"@@ -1,9 +1,15 @@ 'use strict'; angular.module('<%=angularAppName%>') - .controller('HomeController', function ($scope, Principal) { + .controller('HomeController', function ($scope, Principal, $state, LoginService) { Principal.identity().then(function(account) { $scope.account = account; $scope.isAuthenticated = Principal.isAuthenticated; }); + + $scope.login = LoginService.open; + + $scope.register = function () { + $state.go('register'); + }; }); ","why is this required, register will still work as normal link??","why is this required, register will still work as normal link??",I think we can move `account` path prefix to `account.route.ts`.,I think we can move `account` path prefix to `account.route.ts`.,can we have `var previousState = Auth.getPreviousState();`,can we have `var previousState = Auth.getPreviousState();`,isnt this used anywhere?,isnt this used anywhere?,I forgot why I added this but it was done for some reason. Are you sure everything works fine without this?,I forgot why I added this but it was done for some reason. Are you sure everything works fine without this?,"$scope.$on, not $rootScope.$on Can we also move the content of initValues function inside this block since this is the only one calling that function?"
"@@ -47,10 +47,15 @@ def is_optimizer_op(op): class CollectiveHelper(object): - def __init__(self, role_maker, nrings=1, wait_port='6174'): + def __init__(self, + role_maker, + nrings=1, + wait_port='6174', + use_pipeline=False): self.nrings = nrings self.wait_port = wait_port self.role_maker = role_maker + self.use_pipeline = use_pipeline def update_startup_program(self, startup_program=None): self.startup_program = startup_program ","Create a new `PipelineHelper` to do compile, which could inherited from `CollectiveHelper`. As `PipelineHelper` is specific for pipeline, it could be put into corresponding meta optimizer.","Create a new `PipelineHelper` to do compile, which could inherited from `CollectiveHelper`. As `PipelineHelper` is specific for pipeline, it could be put into corresponding meta optimizer.","Can we make this less fragile? This will not work, depending on how many levels deep the composite is nested. We can make the termination condition that `isinstance(read_cache.transform, ...)`.",Probably worth typing this as well. The return type should be PipelineResult.,"When you do this, you should check whether `experimental_threading` has any values that are different from `threading` and if so, log a warning with information about which `experimental_threading` options are being ignored.","Out of scope for this PR, but I'm curious, why not just do an isintance check?",Nit: I'd go ahead and inline this.,remove this to init rolemaker in dygraph.,remove this to init rolemaker in dygraph.,Nit: I think this'd be less error prone (especially as we develop out more complicated inputs/outputs) if this was functional (i.e. returned a new pipeline object rather than mutating the existing one.,Should we push populating artifacts into from_container_image?
"@@ -167,7 +167,7 @@ func NewClients(cfg *common.Config) ([]Connection, error) { } if proxyURL := config.Transport.Proxy.URL; proxyURL != nil { - logp.Info(""using proxy URL: %s"", proxyURL) + logp.Info(""using proxy URL: %s"", proxyURL.URI().String()) } params := config.Params ",we already implement `String` on proxyURL. No need to change that line.,Why the rename?,It looks a bit strange here. I think `InitLogger` and `ReplaceGlobal` are more suitable in the main function.,1. This config print is default to false. Is this what we expect? 2. The usage description is way too vague IMO. Could you elaborate a little bit? 3. Would it be better if we can add a default value to this flag? 4. Do you think it would be better to aggregate log flags with a prefix `log.verbose-prints`?,are the file/line locations right if the log messages are forwarded?,"Hum, we want to return a `404` for sure ?",one `\n` too much  ,In the past it seemed like the smart thing to do - to implement the Stringer interface. But that's a trap - one could expose stuff accidentally in logs. So decided to remove this.,Seems like an odd default. It didn't used ot choose 80 or 443 by default?,"add a `New HelperFromDatastorePath(context.Context, *session.Session, object.DatastorePath)` so that we've got an easy transition to using object.DatastorePath directly in the config instead of URL. The only reason we were using URL at all was for the structured path data and url.Parse - given we now have a govmomi structured path type and the url parsing is broken for spaces and unicode in the ""hostname"" portion it adds no value.","Ok, now that we have `ClientNodeURL`, what do we need this `Port` for?"
"@@ -47,8 +47,8 @@ Menu.prototype._init = function () { this.delegate = delegate } -Menu.prototype.popup = function (options) { - if (options == null || typeof options !== 'object') { +Menu.prototype.popup = function (options = {}) { + if (typeof options !== 'object') { throw new TypeError('Options must be an object') } let {window, x, y, positioningItem, callback} = options ","We still need the `null` check here, `null` won't be defaulted and `typeof null === 'object'`","This is minor, but we should initialize `errorMessage: null` in the mixin. It's a good habit to avoid changing the shape of the javascript objects later.",We don't need the second param here since it does a shallow comparison by default.,"> ... and functions ... No, JavaScript does not report the type of a function as an object, even though they are object-like. `isObject()` will return false for functions",This check needs to be way safer. `options.session.constructor` could be falsey / not an object,Save 30s with with this one weird trick.,"Why the double assign? `var o = Object.assign({}, options, e)`",Should probably default to `null` over `false`,This broke things in our project. It changed the behaviour of `$filter`. I don't think it is OK to change the behaviour in minor releases.,"I would have loved to just name this `features` but it is already taken where we use it to selectively disable features. For example, you would pass in `{ features: {table: false} }` to disable the table markdown engine. In my case, I only want the features which I pass in to be enabled so I can pick and choose what I want to enable.",I am not sure if this will come back to bite me...I think if all the acceptance tests pass it should be OK
"@@ -18,3 +18,13 @@ class ProductErrorCode(Enum): VARIANT_NO_DIGITAL_CONTENT = ""variant_no_digital_content"" CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT = ""cannot_manage_product_without_variant"" PRODUCT_NOT_ASSIGNED_TO_CHANNEL = ""product_not_assigned_to_channel"" + + +class CollectionErrorCode(Enum): + DUPLICATED_INPUT_ITEM = ""duplicated_input_item"" + GRAPHQL_ERROR = ""graphql_error"" + INVALID = ""invalid"" + NOT_FOUND = ""not_found"" + REQUIRED = ""required"" + UNIQUE = ""unique"" + CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT = ""cannot_manage_product_without_variant"" ",Do you use this error code somewhere? It doesn't sound like an error code for collection.,Do you use this error code somewhere? It doesn't sound like an error code for collection.,I think this code it not used anymore.,I think this code it not used anymore.,In `BulkProductError` we use `index`; I think it would be better to do it here as well.,In `BulkProductError` we use `index`; I think it would be better to do it here as well.,"It's recommended to use inheritance from (str, Enum)","It's recommended to use inheritance from (str, Enum)","We have `NOT_AVAILABLE_IN_CHANNEL`, are these two error code different or do they refer to the same error? Now I noticed that we have the function `validate_variant_channel_listings` - again, isn't it the same functionality as we are adding here?","We have `NOT_AVAILABLE_IN_CHANNEL`, are these two error code different or do they refer to the same error? Now I noticed that we have the function `validate_variant_channel_listings` - again, isn't it the same functionality as we are adding here?",Where is this used?
"@@ -1090,6 +1090,14 @@ Colorblind5 = Colorblind8[:5] Colorblind4 = Colorblind8[:4] Colorblind3 = Colorblind8[:3] +# Bokeh palette created from colors of shutter logo +BokehPalette7 = ('#EC1557', '#F05223', '#F6A91B', '#A5CD39', '#20B254', '#00AAAE', '#892889') +BokehPalette6 = BokehPalette7[:6] +BokehPalette5 = BokehPalette7[:5] +BokehPalette4 = BokehPalette7[:4] +BokehPalette3 = BokehPalette7[:3] + + YlGn = { 3: YlGn3, 4: YlGn4, 5: YlGn5, 6: YlGn6, 7: YlGn7, 8: YlGn8, 9: YlGn9 } YlGnBu = { 3: YlGnBu3, 4: YlGnBu4, 5: YlGnBu5, 6: YlGnBu6, 7: YlGnBu7, 8: YlGnBu8, 9: YlGnBu9 } GnBu = { 3: GnBu3, 4: GnBu4, 5: GnBu5, 6: GnBu6, 7: GnBu7, 8: GnBu8, 9: GnBu9 } ","I think I'd prefer just `Bokeh` since everything in here is a palette, `BokehPalette` seems a bit redundant","@stvn66, why did you make those and related changes?",Missing a comma. I'd also remove the extra whitespace (not try to align with vertically with other 256 palettes) and just put it in the next sequential column after `Greys9`.,"Revert, we settled on BSD-3-Clause in #9569","I wonder if we really need this since there is only one palette... We need to add this to `all_palettes` below, in any case, but maybe we *only* do that, and don't create this named dict here?",Paired9 was added twice.,"Oh, so it's this file that causes weird GUIs to appear in macOS.",what if colors are invalid? Should we handle and provide error message for this case?,what if colors are invalid? Should we handle and provide error message for this case?,is there a chance that this is confounded by red which means bad epoch in epochs.plot or evoked.plot when you show bads?,"I really prefer the old version, I find the whitespace between each pair of lines much more readable"
"@@ -24,10 +24,9 @@ class StrConv(NodeVisitor[str]): def __init__(self, show_ids: bool = False) -> None: self.show_ids = show_ids + self.id_mapper = None # type: IdMapper if show_ids: self.id_mapper = IdMapper() - else: - self.id_mapper = None def get_id(self, o: object) -> int: return self.id_mapper.id(o) ","Why not Optional? (Currently mypy ignores the None initialization but we may change that, and it seems to me this function can definitely return with `id_mapper` still None.","I'd rename this to something more general, since we don't really take advantage of the fact that these represent type constructors anywhere, and the concept of ""higher-kinded type"" sounds kind of complicated. My suggestion would be `special_form`, which can be applied for things other than type constructors that don't have meaningful types but that also aren't imprecisely typed.","Nitpick: if you have to wrap a function def line, put each argument on a line of its own. There's a lot of existing code in mypy which doesn't do this, but it's much easier to read if done this way, so we're trying to do this for new code.","I guess this was redundant because `is_subtype(s, t)` would be true in this case.",Do I understand correctly this simply because visitors are used in annotations?,"`modname` can be `None` for `ExternalFunctionDescriptor`, which should simply export the `qualname`. Perhaps, we should let `mangled_name` logic be override-able by subclass.","Well, these `p.` everywhere are unfortunate :( I guess there is not much better to do",`find_member` won't call any plugins. And might not be as accurate as `analyze_member_access`. Any specific reason to use `find_member` here?,"I think a better alternative is to not show the note at all if `__eq__` is not a function definition. So you can just set `type_name` to `None` here, and add a check in `argument_incompatible_with_supertype()` that will not show the note if the name is `None`.","Okay, but when `self._vault_id is None`, the `name` and `vault_url` properties will raise. Should a user ever construct this class?",Why does this change help? Is it because the `type` attribute of an `Instance` might refer to `FakeInfo` during deserialization?
"@@ -277,7 +277,7 @@ public final class LogoutManagerImpl implements LogoutManager { * @param url The url to send the message to * @param message Message to send to the url */ - public LogoutHttpMessage(final URL url, final String message) { + LogoutHttpMessage(final URL url, final String message) { super(url, message, LogoutManagerImpl.this.asynchronous); setContentType(MediaType.APPLICATION_FORM_URLENCODED_VALUE); } ",Why removing the `public` keyword?,"It's not a big deal, but why did you change `String` to `URL`?",I don't see deprecations any more,@trustin what you think about the TODO ? Do we want to also handle Buf here ?,Good time to deprecate this and all callers?,"If we move the logic to the builder factories, this would not be needed.",`MoreObjects.toStringHelper()` provides a nice builder for a very predictable format in cases like this.,Fix a typo.,this breaks backwards compatability for all `SecurityListener` implementations.,What is _T_ here ? No other reference in the interface ?,Would you mind to explain a bit deeper how this `synchronized` fix helps ? Thanks in advance
"@@ -263,10 +263,7 @@ define([ op = ast.operator; left = createRuntimeAst(expression, ast.left); right = createRuntimeAst(expression, ast.right); - if (op === '+' || op === '-' || op === '*' || - op === '/' || op === '%' || op === '===' || - op === '!==' || op === '>' || op === '>=' || - op === '<' || op === '<=') { + if (binaryOperators.indexOf(op) > -1) { node = new Node(ExpressionNodeType.BINARY, op, left, right); } else { //>>includeStart('debug', pragmas.debug); ","This may have hurt ""compiling"" performance, which will be important for the responsive of a UI generating styles. I don't know for sure so we can see what a profile looks like later; at the least, we can order the linear search so the most common operators are first.",Don't we need to keep the `*`? Otherwise almost everything will use the `['...']` format...,Are you planning to add support for the `@` operator on numpy arrays (probably not in this PR)?,"Looking forward, from the AST perspective (not the tokenized perspective), perhaps `ExpressionNodeType.TERNARY` is better named `ExpressionNodeType.CONDITIONAL`.",Should this code still be here?,Unrelated newline change (but I promise it is just this one @caitp :smiley:).,Remove the indentation changes here.,"Cool! I tried looking for this source, but couldn't find it.",Does ESLint also catch spelling mistakes? :stuck_out_tongue:,"Does this mean that we won't check type errors within the subexpressions of the in expressions? Concretely, does mypy still report an error on code like `1 in ([1] + ['x'])`?",Where is this used?
"@@ -664,6 +664,8 @@ public class RegisterMinionActionTest extends JMockBaseTestCaseWithUser { will(returnValue(Optional.of(MINION_ID))); allowing(saltServiceMock).getMachineId(MINION_ID); will(returnValue(Optional.of(MACHINE_ID))); + allowing(saltServiceMock).getGrains(with(any(String.class)), with(any(TypeToken.class)),with(any(String[].class))); + will(returnValue(Optional.of(new MinionStartupGrains(Optional.of(MACHINE_ID), true)))); allowing(saltServiceMock).syncGrains(with(any(MinionList.class))); allowing(saltServiceMock).syncModules(with(any(MinionList.class))); allowing(saltServiceMock).getGrains(MINION_ID); ","Indentation seems off here and in other places in this file, please double check them all.","Indentation seems off here and in other places in this file, please double check them all.","Do we plan to use this new `Grains` class also elsewhere, eg. in the singular `getGrain`?","Do we plan to use this new `Grains` class also elsewhere, eg. in the singular `getGrain`?",We usually add the plugin related module methods into `PluginModule`. Is there a specific reason to put the method into this file?,"what about this? Also, is legendastv missing here?",FYI this can all be a single string. The shell_str type will shlex things into a list for you.,These imports should be before beats imports.,"Why are you converting this into a method instead of keeping it as a constant? If we use a method, we should adhere to the method naming conventions.",Just make it `private`. There is no legitimate use case for overriding this-we want to use this specific implementation for all subclasses.,"Correct me if I am wrong: with this PR we get an improvement even in the case startup grains are not configured, as we call `grains.items` just once instead of: - calling `grains.item` to get the machine ID first and then - calling `grains.items` again to get all grains (only to filter out `management_key` and, possibly, `saltboot_initrd`)"
"@@ -888,8 +888,12 @@ int capi_rsa_sign(int dtype, const unsigned char *m, unsigned int m_len, /* Now cleanup */ err: + if (hash) CryptDestroyHash(hash); + if (hprov && hprov != capi_key->hprov) + CryptReleaseContext(hprov, 0); + return ret; } ",I'd be nice to indent this line.,NULL check not needed.,"Where is the other free? If it happens because of EVP_MD_CTX_set_pkey_ctx(ctx, pctx); then you may still need this call fro some paths..","Can this just read s->session->peer directly to avoid the locking? Also, since SSL_validate_ct isn't a public API, it should be lowercased: 'ssl_validate_ct'.","The ""fips change"" is quite surprising since all the changes below are contained within ""ifndef FIPS_MODULE"" - but I suppose it is this include that does it. Could we move it inside the ""ifndef FIPS_MODULE"" above?","i'm curious, what is the default if 3rd argument remains NULL?","This is optional, but preexisting nit: blank line here.",I think this warrants a TOD0(3.0).,Too many blank lines?,"I've realised that if `OPENSSL_atexit()` is called, a `OPENSSL_init_crypto(OPENSSL_INIT_BASE_ONLY, NULL)` must be made first... so instead of removals, I'll just change the first argument","Changes in this file would not be needed if you revert the changes I proposed above, imo."
"@@ -9,6 +9,8 @@ Runs a full pipeline using MNE-Python: - forward model computation - source reconstruction using dSPM on the contrast : ""faces - scrambled"" +Note that this example does quite a bit of processing, so even on a very +fast machine it can take over 10 minutes to complete. """""" # Authors: Alexandre Gramfort <alexandre.gramfort@telecom-paristech.fr> # Denis Engemann <denis.engemann@gmail.com> ",A bit exaggerated. Maybe remove the 'very'.,`s/and use/and used/`,`s/and use/and used/`,Isn't it possible to put the second part of the` if` inside the function `MakeAnalyticsPipeLine `? So that you don't need to access a member variable from outside...,"`num_span_refinement_layers` might be a better name, given your description  ","`num_span_refinement_layers` might be a better name, given your description  ",can you give me a summary of what all the updates do? does it support ranking now? or anything else new?,"Just curious, what's the motivation for switching from a Dict to a list of tuples?","Just curious, what's the motivation for switching from a Dict to a list of tuples?","should this be ""... {} _characters_ long""","Oh, one other note that I forgot last time - it'd be nice to make a `matrix_attention/` module, and put all of these in there, like how the `seq2seq_encoders` are structured."
"@@ -657,5 +657,5 @@ crt_proc_out_common(crt_proc_t proc, crt_rpc_output_t *data) rc = crt_proc_output(rpc_priv, proc); out: - return rc; + return crt_der_2_hgret(rc); } ",Same here regarding line 614,Line 519 does direct return so needs to be modified as well,"My only concern is that we are making this change once, buy a quick grep shows there are 47 cases where we set rc to -DER_HG and 194 where we return -DER_HG, and many of those should probably also be treated like this, but just aren't triggered currently by the fault injection testing. Outside the scope of this PR but I think it's something we should look at at some point.","In the CoRPC case, if rank X receives an incoming request, rejects the incoming HLC timestamp T, proceeds to crt_corpc_req_hdlr, then it will forward the request to its children before hitting the ""if"" check added here. Will the requests to the children carrying HLC timestamps >= T? One solution is to at least ensure they carry timestamps = T. If only a few ranks' clocks are largely behind the other ranks, then they won't stop the CoRPC reaching the other ranks. The problem will be that when the replies aggregates these ""behind"" ranks won't have their local replies. I'm not sure if this is worth the trouble. Another solution is to simply do the check earlier, before forwarding. Because the former solution seems to bring little benefit, I'm leaning towards this solution.",(style) space required before the open parenthesis '(',"I'm having trouble following this code, it's traverersing a hash table, and copying in up to CRT_SRV_CONTEXT_NUM per hash-table entry by the looks of it, so this buffer could potentialy be over-run?",do we need to at least log the failure?,"(style) code indent should use tabs where possible (style) please, no space before tabs",Check DER_NONEXIST with conditional punch if have more chance to refresh the patch.,"It seems like in the -DER_OVERFLOW case here you could still return the data, along with the return code and then the client presumably need to act appropriately. I'm not sure what this RPC is actually used for so so don't know if that would be useful.","for coding style, is it required to exit the fun at the end? not a problem although."
"@@ -29,7 +29,9 @@ public class ErrorHandlerAdvice { @Advice.Argument(0) Context ctx, @Advice.Argument(1) Throwable throwable) { Optional<Span> span = ctx.maybeGet(Span.class); if (span.isPresent()) { - DECORATE.onError(span.get(), throwable); + // TODO this emulates old behaviour of BaseDecorator. Has to review + span.get().setStatus(Status.UNKNOWN); + TRACER.addThrowable(span.get(), throwable); } } } ",Or remove status :-),Could you explain why you made this change?,Why was this just removed?,nit: you can merge both lines above as `checkNotNull` will return the given argument,"Instead of introducing a `kind` param, how about deciding the behavior basing on the attributes extractor used? I.e. you could check `extractor instanceof HttpServerAttributesExtractor` and choose the behavior based on that",I am not fully convinced this is the proper error handling logic to extract the http or grpc status code here. DatastoreException has an int getCode() this should return the http code which serviceCallMetri.call() will convert to a grpc status code. So lets's just change the logic to } catch (DatastoreException exception) { serviceCallMetric.call(exception.getCode()); .... and we can remove getErrorInfo,Can this be made private/protected now?,Modify the addErrorType method of the repository as well to include a check of the internal map.,"It's up to you whether you want to write the tests first or write the tests after you've written the code, but we'll definitely need to see working acceptance tests in order to merge the resource.","If you move this logic to `onResponse` in `HttpClientDecorator`, it should remove the duplication across all the instrumentation.",Why do you deprecated instead of deleting? It seems useless to keep a unused method.
"@@ -266,9 +266,8 @@ class JvmTarget(Target, Jarable): @property def resources(self): - # TODO(John Sirois): Consider removing this convenience: - # https://github.com/pantsbuild/pants/issues/346 - # TODO(John Sirois): Introduce a label and replace the type test? + # TODO: We should deprecate this method, but doing so will require changes to JVM publishing. + # see https://github.com/pantsbuild/pants/issues/4568 return [dependency for dependency in self.dependencies if isinstance(dependency, Resources)] @property ",s/deprecate/kill/? It's not public API.,This makes me so happy! That bit of cruft was a thorn in our side for so long.,"Is this going to introduce breaking changes, or is it okay for us to update fastpass atomically as well? cc @olafurpg",Could you expand the description of #4535 to account for this new layer of indirection?,"I wonder if this could even go on `Target` itself? There's nothing intrinsically JVM-y about the concept, that I can see. The same is true for `strict_deps` itself, of course, but I wouldn't expect you to move that in this change. Or is there some reason why it makes more sense for this to be only on JVM targets?","Hm... I don't think we can just nuke this. Can we apply a hack to deprecate this method while still removing the label? Maybe checking the string value of the classname in the inheritance hierarchy? Alternatively, would it be reasonable to just check for the `provides` property with `getattr`?","Would it be ok to leave this method here as a noop with a deprecation warning? I suspect that because it was deprecated pre-deprecation warnings, some folks might not have gotten the message.",Now the default,"So, actually... I think it should be possible to speed this up even further. What you want to do is inject `::`, basically. And you can do that directly with: `graph.inject_specs_closure(DescendantAddresses(''))`.","Maybe: ""The `url` field for the `jvm_artifact` target type does not support `file:` URLs. Instead, please use the `jar` field to specify the relative path to the local jar file within the project.""",Should probably be `JavaSourceTarget` to make clear this is not the field.
"@@ -2163,7 +2163,7 @@ namespace TTD Js::CallInfo callInfo(static_cast<Js::CallFlags>(generatorInfo->arguments_callInfo_flags), generatorInfo->arguments_callInfo_count, false /*unusedBool*/); - Js::Arguments arguments(callInfo, (Js::Var*)argVals); + Js::Arguments arguments(callInfo, unsafe_write_barrier_cast<Js::Var*>(argVals)); // TODO: BUGBUG - figure out how to determine what the prototype was. Just use GetNull() for now Js::RecyclableObject* prototype = ctx->GetLibrary()->GetNull(); ",This matches the pattern from the recent change to lib/Runtime/Library/BoundFunction.cpp,`VarIs<JavascriptGenerator>` returns true for AsyncGenerators (which are a subclass of Generators) hence had to change these conditions to use an explicit check for Generators instead.,"is it invalid for bytelength to be 0? probably unimportant, but i wonder if this case should be a WebAssemblyCompileError?","This is more of a question about this commit, 5400255f4fd89008908b7ce37a48f38fb899bb7b, why is the prototype creation unnecessary?",Would be appropriate to mention the JS string can be made with `CoffeeScript` class from etc.,"Async function implementation split in two - as second half which actually executes the function can be reused for modules with Top level Await, whilst first half is not needed for modules.",Is `IteratorStepAndValue` used anywhere anymore? Can we delete it and rename `DoIteratorStepAndValue` to `IteratorStepAndValue`?,curious what's the expected output of Object.getOwnPropertyNames(Math)? should we have Symbol.toString output as well?,"May want to add `Assert(Is())` for staticMethod and forceInline above (forceInline isn't your change but the remaining properties all have asserts). aliasProperty also doesn't have an assert, but I can't see where its used?",">toLocaleUpperCase [](start = 72, length = 17) These labels are mixed up between the two functions.",This behaviour is a little different when `func.name` is the empty string. Can you confirm that the behaviour change is OK?
"@@ -30,7 +30,7 @@ module Idv end def message - t('headings.lock_failure') + nil end def next_steps ",What is going on here? Why did we remove this translation?,What is going on here? Why did we remove this translation?,"I don't find this name particularly intent-revealing, it sounds like it will always set the attributes to `nil` unconditionally. Also, what about whitespace only strings like `"" ""` should we nullify them too? I guess there's a whole separate discussion to be had on whether or not this is the responsibility of the model at all or if the caller should handle it but let's not go there.","What's the reason behind this choice? To be clear, I agree very much in principle with the idea of not having both `NULL` and empty strings. I just haven't noticed us using this particular idea elsewhere.",> Update with_default_locale spec helper method  to do what? :),Absolutely not a problem/blocker but to avoid the disable message in this particular case maybe `mentions.map(&:id)` could be used?,"Unused method argument - context. If it's necessary, use _ or _context as an argument name to indicate that it won't be used. You can also write as render(*) if you want the method to accept any arguments but don't care about them.",Why the space man?,Probably we need to update the factories as well?,Lint/AmbiguousBlockAssociation: Parenthesize the param [I18n.t('notes.delete.success')].map { |f| extract_text f } to make sure that the block will be associated with the [I18n.t('notes.delete.success')].map method call.<br>Metrics/LineLength: Line is too long. [124/120],"`encoded.present?` can crash with ""ArgumentError: invalid byte sequence in UTF-8"""
"@@ -61,9 +61,13 @@ public class AddProjectAction implements QProfileWsAction { @Override public void handle(Request request, Response response) throws Exception { AddProjectRequest addProjectRequest = toWsRequest(request); - String profileKey = projectAssociationFinder.getProfileKey(addProjectRequest.getLanguage(), addProjectRequest.getProfileName(), addProjectRequest.getProfileKey()); - String projectUuid = projectAssociationFinder.getProjectUuid(addProjectRequest.getProjectKey(), addProjectRequest.getProjectUuid()); - profileProjectOperations.addProject(profileKey, projectUuid, userSession); + + try (DbSession dbSession = dbClient.openSession(false)) { + String profileKey = projectAssociationFinder.getProfileKey(addProjectRequest.getLanguage(), addProjectRequest.getProfileName(), addProjectRequest.getProfileKey()); + ComponentDto project = projectAssociationFinder.getProject(dbSession, addProjectRequest.getProjectKey(), addProjectRequest.getProjectUuid()); + profileProjectOperations.addProject(dbSession, profileKey, project); + } + response.noContent(); } ",You could even have gone further by loading only once the quality profile because currently : - It's loaded by projectAssociationFinder.getProfileKey - It's loaded again by profileProjectOperations.addProject But that could be part of another refactoring,"`OrganizationDao#getNewPrivateProject` I just don't understand what this method is supposed to do. what about ""isNewProjectPrivateByDefault"" ?",there is no need to handle visibility in the action. This logic is the responsibility of UserSession,"Here, I think when currentOwnerAccount ==null, we should throw InvalidParameterValueException.",It shoud not be 400 but 404 => NotFoundException,"Are there usage of this method where throwing an exception would break flow? (or, are we expecting all usages of this method to be project related?)",remark: I don't understand what `getNewProjectPrivate` does from the name and it doesn't follow our name conventions. I know you didn't create the method,Minor - BranchDao#selectByUuid could have been used instead,so now SQ really handles multi languages properly : ),"booh! production code altered only for UTs, bad :)",why do you log these exceptions here? won't the pipeline catch this and log it? Correct me if I'm wrong but I think this will cause the exception to be logger twice
"@@ -130,6 +130,18 @@ function _conferenceFailed({ dispatch, getState }, next, action) { break; } + case JitsiConferenceErrors.CONFERENCE_RESTARTED: { + const reason = 'Restart initiated because of a bridge failure'; + + if (enableForcedReload) { + dispatch(showErrorNotification({ + description: reason, + titleKey: 'dialog.sessionRestarted' + })); + } + + break; + } case JitsiConferenceErrors.CONNECTION_ERROR: { const [ msg ] = error.params; ",Optional style: I'd put the text in the description bellow without defining a variable for it.,String.prototype.padEnd might be available for use now. Maybe that's worthwhile.,What is the reason for copy/pasted line in both cases of the `if`?,"If deviceErrorDialog is closed by the user, will the reference be cleared from the module variable deviceErrorDialog?","Thanks @gkdre234 for submitting this request. I find this proposal very useful. Note that dispatching a notification will not wait for the timeout. In order to navigate to the main page after a timeout I have to use `setTimeout(() => dispatch(cancelKnocking()), NOTIFICATION_TIMEOUT * 3);`",why do we need this? if an unknown property is checked it will return undefined anyway.,Why does this error get special treatment?,Maybe make this a const and use a `Map` ?,Can we move this into `json.js`?,what are the class names for?,what are the class names for?
"@@ -1,12 +1,12 @@ -import core +import contextlib + import proto.framework_pb2 as framework_pb2 +import core from framework import OpProtoHolder, Variable, Program, Operator from initializer import Constant, Normal, Xavier, Initializer from paddle.v2.fluid.layer_helper import LayerHelper, unique_name -import re -import cStringIO +from registry import layer_registry from param_attr import ParamAttr -import contextlib __all__ = [ 'fc', 'data', 'cross_entropy', 'conv2d', 'pool2d', 'embedding', 'concat', ","The name should be `register_layer`, it's more meaningful.","The name should be `register_layer`, it's more meaningful.","Maybe we can delete this file and put `accuracy` and `auc` to `evaluator`. Currently seems ""evaluator"" is the python wrapping using operators, and `framework/metrics.py` is a pure python implementation.","Maybe we can delete this file and put `accuracy` and `auc` to `evaluator`. Currently seems ""evaluator"" is the python wrapping using operators, and `framework/metrics.py` is a pure python implementation.",why does not support `Sequential`?,why does not support `Sequential`?,"I have a concern, we use a related path of `clip`, the commonly used name `clip`, `io` may have a conflict with other packages.","I have a concern, we use a related path of `clip`, the commonly used name `clip`, `io` may have a conflict with other packages.","`optimizer.py` should not depend on distribute_transpiler, either put `_get_lr_decay_ops` in the transpiler or put `UnionFind` in a single file. I'd prefer the first method, because we don't have to change current demo files then.","`optimizer.py` should not depend on distribute_transpiler, either put `_get_lr_decay_ops` in the transpiler or put `UnionFind` in a single file. I'd prefer the first method, because we don't have to change current demo files then.","It's better to put `error_clipping_threshold ` in the base layer, since the `error_clipping_threshold` can be used in many layers."
"@@ -373,11 +373,12 @@ class ConstraintBuilderVisitor(TypeVisitor[List[Constraint]]): cb = infer_constraints(template.args[0], item, SUPERTYPE_OF) res.extend(cb) return res + elif isinstance(actual, TupleType) and self.direction == SUPERTYPE_OF: + return infer_constraints(template, actual.fallback, self.direction) elif (isinstance(actual, TupleType) and template.type.is_protocol and self.direction == SUPERTYPE_OF): if mypy.subtypes.is_subtype(actual.fallback, erase_typevars(template)): - res.extend(infer_constraints(template, actual.fallback, self.direction)) - return res + return infer_constraints(template, actual.fallback, self.direction) return [] else: return [] ","I don't see how this branch can ever be entered - when this condition is true, the condition of the branch above will be true, and this won't get entered.",Support also structural checks for ``TypedDict``s via fallback (here and in ``subtypes.py``).,"I think it is not a good idea to use unions at this stage, since not all types are analyzed (we might need a separate pass for this in a separate PR).",I'm not familiar with this code. Do you know why it is safe to ignore it?,"Hmm I wonder if `ErasedType` instances can be nested inside unions, for example, and still cause a crash. Maybe `erase_type` should just propagate erased types unmodified? I don't think that `DeletedType` can be nested so it seems safe to handle here, though I'm not sure we need special casing for it. Did you find a use case where we encounter deleted types here, or is it here more as a defensive measure?",This doesn't seem to check that there is an instance upper bound? Should there be? Also my inclination would be to throw parens around the and clause.,Couple more things: * What if the instance is a _subclass_ of `tuple`? * What if we have a named tuple on either side?,"I think this is wrong and should piggyback on the `==` operator if the types are the same. Otherwise, trivial code such as `x is x` will return False unexpectedly.","This signature is now a bit awkward. I think that it would be better to always only take an `Instance`, and some callers can be updated to use `self.named_type`.","Hm, I think it would look ugly to have `""<deleted>""` in the error messages, and ditto for `""<nothing>""` below. Maybe the code that adds the quotes should make an exception for strings starting with `<` and ending with `>`.","Move the body to a separate method, as this function is already quite long. Maybe also move the body of the above if statement (from line 269) to a separate method. You could also move the if statement to be nested under the above if statement (line 267). You'd only need the check `if e.callee.fullname == 'builtins.subclass'` which would simplify things slightly."
"@@ -14,6 +14,17 @@ namespace Dynamo.Search { protected readonly Dictionary<V, Dictionary<string, double>> entryDictionary = new Dictionary<V, Dictionary<string, double>>(); + + private bool experimentalSearch = false; + + /// <summary> + /// Indicates whether experimental search mode is turned on. + /// </summary> + internal bool ExperimentalSearch + { + get { return experimentalSearch; } + set { experimentalSearch = value; } + } /// <summary> /// All the current entries in search. ",When implementing my own debug mode VS suggested; internal bool ExperimentalSearch { get; set; } = false;,can this be made private?,should have a summary /// tag if this a public API - does it need to be public?,"I guess in this case it's not such a big deal, but you usually would not modify a field from another object - I think instead we usually use a property, in this case I think it makes sense to try and hide this field from external consumers - we don't want anyone to use it - in an extension for example.","This class returns (use cref) NodeSearchElement which is used for creating a node, when the element is drag and dropped.","Returning `string` for input/output parameters will not be ideal. On the tool-tip control we need to color the parameter name (e.g. `Point`) in grey color, and parameter type (e.g. `Point[]`) in white. So it can't just be a simple string. Ideally we should return a `IEnumerable<Tuple<string, string>>` that carries both the name and type in pairs. Then the UI will contain an `ItemsControl` or `ListBox` that gets bound to this `IEnumerable`. We also need information about how multiple input/output is displayed on the tool-tip. These properties can start appearing in this level (`NodeSearchElement`) as `virtual` properties, and then also override them in `DSFunctionNodeSearchElement`. In another word, your tool-tip window will only work for anything that is derived from `NodeSearchElement`). The tool-tip won't show up for other search element types.",I don't understand the purpose of this change (same as the one below).,"I have to change from `private` to `protected`, because I need to use it in `SearchLibrary`.",As illustrated above these properties should only be exposed starting from `NodeSearchElement` and all its derived classes (e.g. `DSFunctionNodeSearchElement`). So it should not be here.,I think both `PackageManagerSearchElement` and `CategorySearchElement` do not require input/output parameters. Is there a reason we need them here?,"Could be added as a return type instead, right?"
"@@ -26,4 +26,4 @@ class Jsoncpp(CMakePackage): depends_on('python', type='test') def cmake_args(self): - return ['-DBUILD_SHARED_LIBS=ON'] + return ['-DBUILD_SHARED_LIBS=ON', '-DJSONCPP_WITH_TESTS=OFF'] ",@mdorier can you condition this on whether `self.run_tests` is `True`? by default it will be off. Otherwise I think the result may be unexpected given the python test dependency.,"Hmm, the issue says that the tests are failing - not why they are failing. If the failure is legitimate and not an issue known to upstream, we shouldn't skip this check since it's not a false positive.",Why was the test removed? Is `make test` equivalent?,The issue maybe coming from the fact that Portage's variant is called flecsisp and Wonton's flecsi,<!--new_thread; commit:7fe7732bbf7721231ef7ec072307e533f006aef3; resolved:1--> Note: this line is Dataflow-specific until the FnAPI / containerization effort lands.,You can use extend to add a list of flags,These two lines aren't needed since you gave the function the same name as the testing method in the base class,Is this true in general or tied to a specific version of CMake?,"since this is a derived `class NlohmannJson(CMakePackage)`, don't we have access to `define()` already?","can you remove this function and post the error that you are seeing (as `super(PyPybind11, self).install(spec, prefix)` should literally just call `python('setup.py', 'install', '--prefix={0}'.format(prefix))`",The Python version required has been updated to 2.7+ or 3.5+
"@@ -71,13 +71,6 @@ class SnliReader(DatasetReader): @classmethod def from_params(cls, params: Params) -> 'SnliReader': - """""" - Parameters - ---------- - filename : ``str`` - tokenizer : ``Params``, optional - token_indexers: ``List[Params]``, optional - """""" tokenizer = Tokenizer.from_params(params.pop('tokenizer', {})) token_indexers = {} token_indexer_params = params.pop('token_indexers', Params({})) ","You'll also need to add this to `predict_entailment` in the model, I think.","You'll also need to add this to `predict_entailment` in the model, I think.","If the only correct choices here are of the `PretrainedTransformer*` variety, and they have to match, then I think this should only take `model_name: str = ""bert-base-uncased""` parameter.","If the only correct choices here are of the `PretrainedTransformer*` variety, and they have to match, then I think this should only take `model_name: str = ""bert-base-uncased""` parameter.","I wouldn't name this `keep_if_no_dpd`, because what you really want is `keep_unparseable_utterances`, or something. DPD isn't relevant here.","I wouldn't name this `keep_if_no_dpd`, because what you really want is `keep_unparseable_utterances`, or something. DPD isn't relevant here.","And here... Seems a bit redundant to have it everywhere, but the problem shows up when you read the first file, and we don't know which one you're going to read first.","And here... Seems a bit redundant to have it everywhere, but the problem shows up when you read the first file, and we don't know which one you're going to read first.","Don't you want to give an error? Or is this because you want to use the saved model archive, and you're now missing a dependency that you don't really need anymore?","Don't you want to give an error? Or is this because you want to use the saved model archive, and you're now missing a dependency that you don't really need anymore?","Can we call this `WhitespaceTokenizer` instead? And it looks like these tokenizers should be moved to separate files, instead of keeping them all in `word_tokenizer`."
"@@ -86,7 +86,7 @@ public class JnlpAccessWithSecuredHudsonTest { public void anonymousCanAlwaysLoadJARs() throws Exception { r.jenkins.setNodes(Collections.singletonList(createNewJnlpSlave(""test""))); JenkinsRule.WebClient wc = r.createWebClient(); - HtmlPage p = wc.login(""alice"").goTo(""computer/test/""); + HtmlPage p = wc.withBasicApiToken(User.getById(""alice"", true)).goTo(""computer/test/""); // this fresh WebClient doesn't have a login cookie and represent JNLP launcher JenkinsRule.WebClient jnlpAgent = r.createWebClient(); ","Why does simply `withBasicApiToken(""alice"")` not work here? Does that user not exist until created here?",I thought we had something in `JenkinsRule.WebClient` for this?,"This test specifically needs to use the old implementation, so inlining that here.","Shouldn't this be `finally`? Otherwise the thread retains the impersonation, and if it's from a thread pool ",Is it possible that the bearer token here is empty ?,"It seems doubtful that without the `Jenkins` singleton, we have enough working that ending up in `retrieveAuthFromCookie` will ultimately be successful (`User#getById`?). Just return `null` when `jenkins == null`, and return?","You can wrap as ```java new JettyHttpClient(new HttpClientConfig() .setTrustStorePath(Resources.getResource(""cert/localhost.pem"").getPath())))))","I'm sorry, this is not a bad workaround but I do believe we need to sort out an authentication mechanism alignment instead, I'll open an issue right away and CC you",nit: this could be two commits. One for method extraction and other for change. That way it is easier to see what actually changed.,"Instead of instantiating `HttpCookie` in multiple methods, it would be helpful to encapsulate the cookie generation using an interface and implementation class. Having an interface method such as `String CookieProvider.getJwtCookie(String jwt)` would streamline references here in `AccessResource`, and also provide opportunity for introducing a unit test that ensures certain fields are set as intended.","Why not logging full exception? log.info(""Invalid JWT signature"", e);"
"@@ -1 +1,2 @@ from allennlp.semparse.contexts.table_question_knowledge_graph import TableQuestionKnowledgeGraph +from allennlp.semparse.contexts import atis_tables ","This line doesn't actually do anything, because you're just importing a submodule into a place it was already accessible. Before this line, I could do `from allennlp.semparse.contexts import atis_tables` in code outside of `semparse`, and this line lets me do exactly the same thing. In contrast, the line above takes something that was only accessible in a submodule and makes it accessible here. So before, you had to do `from allennlp.semparse.contexts.table_question_knowledge_graph import TableQuestionKnowledgeGraph`, and after, you can do `from allennlp.semparse.contexts import TableQuestionKnowledgeGraph`.","This line doesn't actually do anything, because you're just importing a submodule into a place it was already accessible. Before this line, I could do `from allennlp.semparse.contexts import atis_tables` in code outside of `semparse`, and this line lets me do exactly the same thing. In contrast, the line above takes something that was only accessible in a submodule and makes it accessible here. So before, you had to do `from allennlp.semparse.contexts.table_question_knowledge_graph import TableQuestionKnowledgeGraph`, and after, you can do `from allennlp.semparse.contexts import TableQuestionKnowledgeGraph`.",`example_string` -> `gold_lisp_string`?,`example_string` -> `gold_lisp_string`?,"nit: since this is async, we can use the python 3+ style type hints. I think I saw we have an issue open for that already.","I had to explicitly import this otherwise many tests failed with ""apache_beam.io.gcp.internal.clients.bigquery has no attribute TableReference"" - I guess bigquery lib was not available in some environments. The pylint check also failed possibly because of this but I haven't figured out what's wrong. Any insights?","How big is the stop words list? If it is not huge, may be you can define the list as a constant in the module instead of reading from a local file?","How big is the stop words list? If it is not huge, may be you can define the list as a constant in the module instead of reading from a local file?",Does this need additional processing? Does this have to be formatted as a corenlp-tagged table?,Does this need additional processing? Does this have to be formatted as a corenlp-tagged table?,"Why did you remove this as a class variable? Because you didn't want to have a shared sqlite connection? I suppose it's possible you somehow got into a race condition in your beaker experiment, depending on how exactly you did the evaluation. But, either way, I still think the `sql_table_context` should just be constructed inside the `World`, not taken as a dependency. It's not something that ever changes, so having it as a constructor parameter doesn't add anything."
"@@ -1641,10 +1641,13 @@ namespace Dynamo.Graph.Workspaces notes.Add(noteModel); } + var annotationGuidValue = IdToGuidConverter(annotationViewInfo.Id); var annotationModel = new AnnotationModel(nodes, notes); annotationModel.AnnotationText = annotationViewInfo.Title; annotationModel.FontSize = annotationViewInfo.FontSize; annotationModel.Background = annotationViewInfo.Background; + annotationModel.GUID = annotationGuidValue; + this.AddNewAnnotation(annotationModel); } ",assign the guid to the annotation GUID on deserialize.,"For the same reasoning as above, this should be `Guid WorkspaceGuid`. If you noticed, the attribute names used in most other recordable commands are the same as the properties themselves, so when we serialize this command, it would end up as `WorkspaceGuid`. This is just to align better with other commands.","Why is this TODO here? In general, a TODO should be encoded in a YT task. This one just seems erroneous.","what does the ""N"" do, does it also accomplish the toLower call as well? Why are you changing this AST id - we don't serialize this I don't think, it should only be used internally for the VM...","Hi @fanwgwg, please revert this file since there's no real change here.",in what case nodes will be null?,Do we need to also delete the resource string if they are not used any more?,This sets off alarm bells for me. Why not just handle this event registration in `WorkspaceModel.AddAnnotation`?,"What about this scenario: 1. Save the custom workspace, `Guid01` is now the new ID. 2. Save the custom workspace as another file. 3. Sounds like the above step will not generate a new ID for the new DYF file. Point number 3 is what the test was originally testing `Assert.AreNotEqual(initialId, newDef);`, sounds like it is expected to have a different `Guid` for `SaveAs`.",@mjkkirschner @aparajit-pratap @pinzart @sm6srw What are your thoughts on this? I feel we are no longer strict on CoGS format so this could be fine? Or we can maybe add the nesting info to view layer but that may cause deserialization problem? I am not sure.,"WorkspaceModel requires annotations. I believe after the View block serialization, annotationModel will be added to workspaceModel, and the viewModel will get constructed."
"@@ -154,6 +154,12 @@ public abstract class Wrapper { // get all public method. boolean hasMethod = hasMethods(methods); if (hasMethod) { + Map<String, Integer> sameNameMethodCount = new HashMap<>(); + for (Method m : methods) { + sameNameMethodCount.compute(m.getName(), + (key, oldValue) -> oldValue == null ? 1 : oldValue + 1); + } + c3.append("" try{""); for (Method m : methods) { //ignore Object's method. ","it would be better if we give it a big enough initial size, such as `(int) (methods.size() / 0.75f) + 1`",this situation should be `overload`,`if (method != null && !method.isAccessible()) ` is more readable,How do we confirm the two logics yield the same results? Was going to recommend we move the two removed tests to where tests for HashHelpers live but could not find where `src\libraries\System.Private.CoreLib\src\System\Numerics\Hashing\HashHelpers.cs` tests are placed. cc: @tannergooding,I think you can just to `VersionCheck.major() > 11`,this belongs in a separate PR,Why? It's now 121 chars.,"All values default to 0, so there's no need for the else case.","This doesn't fix anything, but helps with diagnosis of a current issue with the scheduler tests","@cston, would you prefer we exempt Microsoft.CSharp from this analyzer via a NoWarn, or are you ok with such minimal changes?","The substring call here will create a new String (all be it short lived) which will then be passed to the interning logic. In Java 8 the backing array will be shared between the substring and the new String, but in Java 9 and later the substring will have to copy the backing array as well as create the new String object. The intern will reduce the number of escaping strings so it isn't strictly worse. The unfortunate thing is that the intern operation will have to compute the string hashcode on the substring every time since substring doesn't derive it from the base string. We also have to repeat the lastIndexOf and the clz.getName every time which is also computationally expensive."
"@@ -91,6 +91,11 @@ class EagerFilesetWithSpec(FilesetWithSpec): def files_hash(self): return self._files_hash + def iter_relative_paths(self): + """"""An alternative `__iter__` that joins files with the relative root."""""" + for f in self: + yield os.path.join(self.rel_root, f) + def __repr__(self): return 'EagerFilesetWithSpec(rel_root={!r}, files={!r})'.format(self.rel_root, self.files) ",Better to call this `paths_from_buildroot_iter()` (and below). `relative` is a vague term.,"This `str("""")` has no sense  ",Can you modify the `Args:` and `Returns:` sections of this docstring to mention the behavior on non-pathlike objects?,is it needed for this PR? (or just a warning fix?),We really need to start unifying exceptions in trees so we could use exception flow control instead of abusing `self.exists`.,"Btw, this one doesn't handle `cache=False` cases, as it will try looking for uncached file in the remote and will raise an error. CC @Suor",Eventually `self.repo` should go away entirely (replaced by the `GitPythonBackend` in `self.backends`) `InvalidGitRepositoryError` would get raised here if we cannot instantiate any backend at all instead of where it is now.,"So currently we have a mixup of direct `os.path` and `self.repo.tree` interfaces in our RemoteLOCAL, which is not ideal. We really should work on trees, but for now this is the only thing that was blocking `params diff`, so I've adjusted it. Luckily these are very easy to find with simple tests.","Hmm, maybe `api.open` should use `utf-8` by default?",Drop the else?,"What would this case mean here? That a target owns a source... outside the buildroot? It's not clear that we would want to hide that. It shouldn't be possible at all given the restrictions we place on symlinks in the engine, so would be good to know why/if you saw it."
"@@ -130,9 +130,9 @@ ENCODE_DIGESTINFO_SHA(sha3_512, 0x0a, SHA512_DIGEST_LENGTH) *len = sizeof(digestinfo_##name##_der); \ return digestinfo_##name##_der; -static const unsigned char *digestinfo_encoding(int nid, size_t *len) +const unsigned char *rsa_digestinfo_encoding(int md_nid, size_t *len) { - switch (nid) { + switch (md_nid) { #ifndef FIPS_MODE # ifndef OPENSSL_NO_MDC2 MD_CASE(mdc2) ",SHA1 is non FIPS_MODE here but in FIPS_MODE in rsa_aid.c. Why?,"This proliferation of casts has me wonder if we should un-constify the likes of `EVP_md_null()`, `EVP_get_digestbyname()`, ...",We've only done the init functions elsewhere. Not sure why paramgen is special to have both the init and the main function handled?,Do the error returns need to free str?,Should this be `<=` rather than `<` ?,This still is not right..,"This is optional, but preexisting nit: blank line here.",Why not just move it inside the if and replace the `gctx = NULL` above with `return NULL`,Should this be `<=` rather than `<` ?,"The rest of the code seems to assume that `vprsactx != NULL`, like the `prsactx->mdctx = EVP_MD_CTX_new();` line.","Would it make sense for this to be `EVP_MAX_MD_SIZE` instead? It isn't important at the moment, but it is future safe."
"@@ -73,7 +73,7 @@ int uname(struct utsname *buf) return -1; } - strncpy(buf->nodename, uname_nodename, _UTSNAME_LENGTH); + strncpy(buf->nodename, uname_nodename, _UTSNAME_LENGTH - 1); return 0; } ",This assumes that nodename has a null byte at _UTSNAME_LENGTH - 1. It should be followed with buf->nodename[_UTSNAME_LENGTH - 1] = '\0'; to be safe.,A better way to improve performance of this function would be to simple save kds and enum_buf between calls by hanging them on the dfs_obj_t somewhere. I think performance orientated users would likely call dfs_iterate() over dfs_readdir() so this function wouldn't be high on my list.,"Here as well. memcpy of 0 bytes is a well-defined, only memcpy 0 bytes from NULL is to avoid.","why sizeof(uuid_t) ? The group name is just a string for the group id. Seems this should be based on GROUP_ID_MAX_LEN. Also, Codacy doesn't like using strlen","I don't think we can remove this, otherwise daos_perf will report data corruption if overwriting a large single value with a smaller value.",This is `dfs_lookup_rel`. Do we want to do something similar in `dfs_lookup`?,(style) 'nd' may be misspelled - perhaps 'and'?,"Is this prefetching ZAP leaf blocks in file offset order, or in ZAP iteration order? In either case, does it sort the prefetched blocks to be in LBA (DVA?) order so that the access order is optimized?","side note: but we don't care about one's-complement, right?","I don't think this is a proper solution. `sizeof(long double) == sizeof(double)` on many platforms and the problem remains. `ULONG_MAX + 1` can be exactly represented as a double. Unfortunately, `ULONG_MAX + 1` isn't calculable directly. I'll have a think about solutions....",I see this call without #ifdef in other apps...
"@@ -71,7 +71,7 @@ public class NotebookRestApi { Gson gson = new Gson(); private Notebook notebook; private NotebookServer notebookServer; - private SearchService notebookIndex; + private SearchService noteIndex; private NotebookAuthorization notebookAuthorization; public NotebookRestApi() { ","Term `noteIndex` is little bit confusing for me. Since you are working on naming, how about changing it into `noteSearchService`?","Term `noteIndex` is little bit confusing for me. Since you are working on naming, how about changing it into `noteSearchService`?",Why is this necessary? I think we should work with the interface.,Why is this necessary? I think we should work with the interface.,Should be `static` (and therefore with uppercase field name).,Is it ok not to return here? If we get errors while removing interpreter setting binding. (LINE 342),Is it ok not to return here? If we get errors while removing interpreter setting binding. (LINE 342),for a change like this perhaps it's better to have a JIRA to track change?,for a change like this perhaps it's better to have a JIRA to track change?,I think `setName` may not be the perfect solution because Id would be less than `1111`. How about modifying `note1.contains(notePrivate.getId())`?,I think `setName` may not be the perfect solution because Id would be less than `1111`. How about modifying `note1.contains(notePrivate.getId())`?
"@@ -8210,6 +8210,7 @@ main(int argc, char **argv) case 'm': case 'M': case 'O': + case 'r': case 'R': case 's': case 'S': ",Oh could we have 'r' added to usage as well? I spent forever wondering why `zdb -h` wasn't showing the new option :),"This sort of cast makes no sense at all. You have already defined `o` with that type, so why the cast?",(style) space required before the open brace '{' (style) space required before the open parenthesis '(',(style) space prohibited between function name and open parenthesis '(' (style) spaces required around that '=' (ctx:VxV),"I'ld rather remove the ""not worrying"" here and add a ""be careful to escape special chars so borg gets to see them and they are not expanded by your shell"" to the patterns that frequently have a `*` or so in them.","Ouch. On side note there was a push for making checks for NULL pointers explicit, for example `passinarg != NULL` instead of just `passinarg`. However, there are other occurrences of implicit NULL checks in *this* module, and so it kind of falls beyond scope of this request [which is why it's a side note.]","It does look a bit curious to have `OPT_ERR` jump to `opthelp`, directly followed by an `OPT_HELP`... that doesn't.",Can you also change the `url`/`list_url` to `cloud.r-project.org`?,"@kccain v is kind of out of nowhere. Probably could have picked a letter from word at least like b, perhaps. Or maybe 'S'","@murrant please take a look at this file change, I have zero experience in rrd options :)","Were these showing up as errors? FYI - the test checks for new errors that don't end in the DF_RC/DP_RC print with -DER_NOMEM, so you don't need to remove all errors from the failure path, just include what the error is."
"@@ -130,6 +130,10 @@ </div> <% end %> +<% if current_user.created_at < Time.new(2016, 8, 25) %> + <%= render partial: 'projects/index/introductory_popup' %> + <%= javascript_include_tag ""projects/introdutory_popup""%> +<% end %> <% if @projects_by_orgs.length > 0 %> <% @projects_by_orgs.each do |org, projects| %> <%= render partial: ""projects/index/org_projects"", locals: {org: org, projects: projects} %> ",I would change this date to the actual date this will hit production.,I don't think `user.created_at.nil?` would ever be true right?,"`itemprop=""dateModified""` should be deleted, but `datetime=""<%= @article.edited_at&.utc&.iso8601 %>""` should stay.",Line is too long. [81/80],"**Question for my reviewers**: if necessary, how should I differentiate between users who were invited but _have not yet accepted the invitation (are not registered yet) and users who were invited and _have accepted the invitation_ (are, or should be considered, registered)? I think this distinction is important, but I'm not sure how to proceed with it.","Here `tag_url` is used, which will use domain from action mailer `smtp_settings` (`ENV[""APP_DOMAIN""]`) which could be fine, but in other places `app_url` is used. I suppose we should be consistent with the urls in email templates.",refactor (non-blocking): Consider using the articlePage pack and import and run `addFullScreenModeControl` there since we already have that webpack entry point.,Are we not worried about it for DEV or do we have a different process for it due to scale?,"I could keep here new_since as a column still existing and we will potentially get rid of that later. I wanted to already switch to use `created_at`. The reason is that after registration, the user should have an empty ""new"" tab. Only topics created after could be `new`",where does this page come from? can't find it locally but it exists in production and it's not in the routes file  ,"I made these additions to this hash so that when the user's `config_homepage_feed` value is passed into the `timeframe_feed(timeframe)` function (in the file `app/controllers/stories/feeds_controller.rb`), the function will work."
"@@ -58,6 +58,12 @@ def docs(request): def _get_popular_item(): """"""Get a single, random item off the popular pages list."""""" + if not settings.DEKIWIKI_ENDPOINT: + # No MindTouch API calls are performed here. But, pending bug 759361, + # a False value also implies that the data behind popular.json is no + # longer available. + return None + try: pages = json.load(open(os.path.join( settings.MDC_PAGES_DIR, 'popular.json'))) ",and this one?,Forgot to remove these?,"this will prevent the MindTouch call, but do we want to update this to link to the appropriate Kuma doc url?","``id_only`` is ``True`` for the only caller, and should be the default.",Please use `isort`,Please use `isort`,I would add `get_src_requirement()`.,I would add `get_src_requirement()`.,"Using the slice notation will never raise an exception, even on an empty string.",missing sound parameter.,"This PR is closed, but this line seems to cause an infinite/recursive loop when reindexing."
"@@ -143,11 +143,11 @@ public class TopologyAwareNodeSelector } InternalNode chosenNode = null; - int depth = networkLocationSegmentNames.size(); + int depth = topologicalSplitCounters.size() - 1; int chosenDepth = 0; Set<NetworkLocation> locations = new HashSet<>(); for (HostAddress host : split.getAddresses()) { - locations.add(networkLocationCache.get(host)); + locations.add(networkTopology.locate(host)); } if (locations.isEmpty()) { // Add the root location ",This kind of `xxx - 1` calculation looks rare. Maybe we could get the same information from NetworkLocation? I'm also thinking is SegmentNames really needed.,"I'm not sure about this change, I'm thinking maybe the coordinator already has a non-null topology in the `ClusterCacheStatus` and in that case, it should be replaced with a `null` topology. Also, the test passes even without this change.","var `localReadSegments` above, can be removed",can we call this getSize() and explicitly list if it is public/private/protected?,"`CacheTopologyInfo` is accessible from `RemoteCache.getCacheTopologyInfo()`, so this is going to break backwards compatibility.","It should better be standard `java.lang.Long.compare(right.available(), left.available())`. Sorry that I didn't suggested you this form before.","We could add a helper `estimatedSizeOf(HostAddress)` ```java return INSTANCE_SIZE + estimatedSizeOf(addresses, InternalHiveBlock::estimatedSize);",A warning message is already logged in `canHandle` that describes the specific issue it ran into in case `canHandle` returns false. Is there something in that warning message that could be improved?,Does it need to be an `AtomicInteger`?,Should we be deleting the file if there's a mismatch instead of just ignoring it?,Should this log before returning? it seems like it would be very confusing about why things didn't progress.
"@@ -154,6 +154,9 @@ type Config struct { // for testing ingesterClientFactory ring_client.PoolFactory `yaml:""-""` + + // when true the distributor does not validate labels at ingest time + SkipLabelValidation bool `yaml:""-""` } // RegisterFlags adds the flags required to config this to the given FlagSet ","Would you mind adding something like ""Cortex doesn't directly use it (and should never use it) but this feature is used by other projects built on top of it."".",how about `server/core/store.go`?,"I don't think this is the right approach, since this might introduce inconsistencies with newer versions.",Why the switch to string instead of model.LabelValue?,Why we need this new column?,Change Variable name too?,What's the default value of the `IsolationLabel`? Does it always be enabled or have a switch to control ?,@deads2k drop the alias?,We don't want to import package from extensions here.,"since we're removing the ""GPU needs to use ubuntu 16.04"" validation let's run a test to verify that GPU + 18.04 works","I prefer returning `label.GetValue()` here, use `strings.EqualFold` outside to compare."
"@@ -62,7 +62,7 @@ bool bitmapNonEmpty(const OpenDDS::RTPS::SequenceNumberSet& snSet) } for (int bit = 31; bit >= 0; --bit) { if ((snSet.bitmap[i] & (1 << bit)) - && snSet.numBits >= i * 32 + (31 - bit)) { + && snSet.numBits > i * 32 + (31 - bit)) { return true; } } ",This should probably just create a mask and do a single comparison rather than loop over individual bits.,This should probably just create a mask and do a single comparison rather than loop over individual bits.,I'm surprised it warned... oh well. Maybe we use constructor-style for this: `bool(expr)`?,I'm surprised it warned... oh well. Maybe we use constructor-style for this: `bool(expr)`?,"The pretty printed IR should distinguish between signed and unsigned comparisons. They look identical now, I think.",This file is copied from an older version of Prometheus; we do not modify such files unless critically necessary.,Will this generate a new warning for 64-bit to 32-bit truncation?,Will this generate a new warning for 64-bit to 32-bit truncation?,Recommend using `(uint)BitOperations.TrailingZeroCount(...)` to avoid unnecessary sign-extension. `uint` will be implicitly converted to `nuint` automatically for free.,"I'd be tempted to make a hard assert here. Seriously, if we have a `cap` value that's *internally* set to something higher than our own maximum, we've implemented it wrong.",Should this be TyInt8 and then legalizer take care of it?
"@@ -84,11 +84,14 @@ def find(f: Callable[[T], bool], seq: Sequence[T]) -> T: return None -class ASTConverter(typed_ast.NodeTransformer): - def __init__(self): - self.in_class = False +class ASTConverter(ast35.NodeTransformer): + def __init__(self, pyversion, custom_typing_module = None): + self.class_nesting = 0 self.imports = [] + self.pyversion = pyversion + self.custom_typing_module = custom_typing_module + def generic_visit(self, node): raise RuntimeError('AST node not implemented: ' + str(type(node))) ",Why no type annotations here?,Need type annotation here.,"Should we instead check for `PlaceholderNode`? If there's something unexpected there, weird things might happen.","It still hasn't become second nature for you to add a trailing comma to a list like this, when the close bracket is on the next line? (Don't push a fix, just noticing. :-)",Shouldn't you delete this variable? It's no longer updated.,"Nice, it's awkward that this imported a lookup function from `mypy.fixup`.","This is slightly questionable, since the target Python version could be different from the current Python version we are running on. If we can't easily get the target Python version, I'd prefer to either not provide a Python version at all (such as giving `None` as the version -- we'd omit the hint in this case), or to provide a constant Python version for consistency (say, `(3, 7)`).","This is probably bikesheding, but I would call this `cur_statement`, similar to `cur_mod_id` above. Also, should the type be actually `Statement`?",What about the `final_value` attribute?,Style nit: Add empty line after docstring?,Maybe rename this to is_suppressed_import or is_silent_import?
"@@ -131,7 +131,14 @@ namespace System.Text.Json.Serialization // For performance, only perform validation on internal converters on debug builds. if (IsInternalConverter) { - value = Read(ref reader, typeToConvert, options); + if (IsInternalConverterForNumberType && state.Current.NumberHandling != null) + { + value = ReadNumberWithCustomHandling(ref reader, state.Current.NumberHandling.Value); + } + else + { + value = Read(ref reader, typeToConvert, options); + } } else #endif ","What type is `NumberHandling`? Isn't it an enum value, how can it be null?",I assume this will be inlined and as fast as the field.,"Since this is only used in the line below, you could collapse it. That will prevent the somewhat expensive `TypeIsCollectionOfNumbers()` from running when it isn't necessary.","I don't know if this is accurate. Why was this annotation necessary? - `T` could be null when true (imagine the payload contains `{""foo"": null}`) - `T` could also be non-null when returning true (payload is `{""foo"": ""hello""}`) - `T` could be null when false **Questions:** - I don't know whether `T` can be non-null when returning false or if it is guaranteed to be null when returning false - I don't know when `OnTryRead` is intended to return false. @steveharter - what is the intent here of this design and how do components that override this virtual behave?",What does `T` add (instead of string?). Seems like there could be extra JITting for every `T` now (i.e. for every Enum type).,"Is the `[MaybeNullWhen(false)]` on `out T value` still correct? I'm asking because we're returning true and suppressing the nullable warning here... are there any cases where Read could return null for a non-nullable T? If yes, that attribute should be changed to be `[MaybeNull]` rather than `[MaybeNullWhen(false)]`",Having to do this seems a bit strange. I'll do some local prototyping to see why is going on here -- boxing issues with `Nullable<T>` or otherwise. If there's an issue with `Nullable<T>` then we should try to fix it in the runtime.,Why don't we support `NumberHandling == JsonNumberHandling.Strict` anymore?,It is unfortunate that we need to add code in this speed-critical method. Can we at least combine the previous `if` statement that also checks for `IsValueType`?,Cache these in a bool (since accessed elsewhere in same method)?,How does this work with custom (user) converters (also `ConverterStrategy.Value` and the instance could be a non-primitive)? Do we need to also check `IsInternalConverter`?
"@@ -348,7 +348,8 @@ func (data *resourceRowData) ColorizedColumns() []string { func (data *resourceRowData) getInfoColumn() string { step := data.step - if step.Op == deploy.OpCreateReplacement || step.Op == deploy.OpDeleteReplaced { + switch step.Op { + case deploy.OpCreateReplacement, deploy.OpDeleteReplaced: // if we're doing a replacement, see if we can find a replace step that contains useful // information to display. for _, outputStep := range data.outputSteps { ",I assume that there's some hidden invariant here that `data.outputSteps[0]` is correct. Should we be asserting something about `step.Op` at this point? Would it make more sense to write the above as a range like we have for Create/Replace?,"I vaguely recall we may blindly append a ""d"" for past tense (""modifyd""). That's why I suggested maybe ""change"", but if you've verified it looks ok, I'm good with ""modify"" (and slightly prefer it).","I vaguely recall we may blindly append a ""d"" for past tense (""modifyd""). That's why I suggested maybe ""change"", but if you've verified it looks ok, I'm good with ""modify"" (and slightly prefer it).","I vaguely recall we may blindly append a ""d"" for past tense (""modifyd""). That's why I suggested maybe ""change"", but if you've verified it looks ok, I'm good with ""modify"" (and slightly prefer it).","If we delete an `External` replacement by replacing it with a non-`External` replacement, does that show up as a `OpDeleteReplaced` here or `OpReadRemove`?","If we delete an `External` replacement by replacing it with a non-`External` replacement, does that show up as a `OpDeleteReplaced` here or `OpReadRemove`?","If we delete an `External` replacement by replacing it with a non-`External` replacement, does that show up as a `OpDeleteReplaced` here or `OpReadRemove`?",I assume that there's some hidden invariant here that `data.outputSteps[0]` is correct. Should we be asserting something about `step.Op` at this point? Would it make more sense to write the above as a range like we have for Create/Replace?,I assume that there's some hidden invariant here that `data.outputSteps[0]` is correct. Should we be asserting something about `step.Op` at this point? Would it make more sense to write the above as a range like we have for Create/Replace?,"should we consider putting this as the first thing we check in thsi function? right now, if we have a default provider, and an opsame and showsameresources=true, then we'll show things. Is that what we want? Or should we always hide a default provider?","should we consider putting this as the first thing we check in thsi function? right now, if we have a default provider, and an opsame and showsameresources=true, then we'll show things. Is that what we want? Or should we always hide a default provider?"
"@@ -138,7 +138,8 @@ module Engine end when :place_token - ability(entity).hexes.include?(hex.id) + ability(entity).hexes.include?(hex.id) && + hex.tile.cities.any? { |c| c.tokenable?(entity.owner, free: true) } when :lay_tile @game.hex_by_id(hex.id).neighbors.keys if hex == @destination end ","so one thing to note is that avialble_hex should return an array of edges, what you have now is a boolean which is hacky and sort of works, but is not consistent with how this method is used elsewhere","Improvement: If the tile laying ability requires the hex to be reachable, only show the reachable hexes. Was originally handled in tracker via a game error (code still there in case), but, in my opinion, better to not allow in the first place.",was new_tile really necessary? can't you just do hex.tile?,"can be a one liner, any? { |t| t.used && ... }",why would s be nil?,"Just a thought, would it make more sense to be @game.exchange_corporations(abillity)? That seems to be the general pattern.",Are the parens necessary?,"could be less change if you did entity, spender = nil spender ||= entity",entity.tokens.any?&:used) or whatever is the correct logic,i think this is not necessary you can just put this all in purchasebl_companies,"The text says ""The company closes once this ability has been used twice"", so I think you want to add `closed_when_used_up: true,` here?"
"@@ -248,7 +248,7 @@ </dependency> <%_ } _%> <%_ } _%> -<%_ if (applicationType === 'gateway' && authenticationType === 'uaa') { _%> +<%_ if (applicationType === 'gateway') { _%> <dependency> <groupId>org.apache.httpcomponents</groupId> <artifactId>httpclient</artifactId> ",Remove the entire condition.,Remove the entire condition.,Pending remark : (applicationType === 'gateway' && authenticationType === 'oauth2') may be safer than authenticationType === 'oauth2',Pending remark : (applicationType === 'gateway' && authenticationType === 'oauth2') may be safer than authenticationType === 'oauth2',"The condition should be : applicationType === 'gateway' && authenticationType === 'oauth2' to be more precise spring-cloud-security is already added in the pom later for the ""authenticationType === 'uaa'"" case => it could be merged ( the uaa case use it in both gateway et microservice applicationType : at the moment, it is probably safer to keep applicationType === 'gateway' as the side effect on microservice are not clear to me at the moment )","The condition should be : applicationType === 'gateway' && authenticationType === 'oauth2' to be more precise spring-cloud-security is already added in the pom later for the ""authenticationType === 'uaa'"" case => it could be merged ( the uaa case use it in both gateway et microservice applicationType : at the moment, it is probably safer to keep applicationType === 'gateway' as the side effect on microservice are not clear to me at the moment )","Should be available only if generator.authenticationType === 'oauth2' && ['sql', 'mongodb'].includes(generator.databaseType)","Should be available only if generator.authenticationType === 'oauth2' && ['sql', 'mongodb'].includes(generator.databaseType)","Should be available only if generator.authenticationType === 'oauth2' && ['sql', 'mongodb'].includes(generator.databaseType)","Should be available only if generator.authenticationType === 'oauth2' && ['sql', 'mongodb'].includes(generator.databaseType)",can we use variable name`jhi-authenticationToken` plz
"@@ -109,7 +109,7 @@ class Storage end def promotable_blobs - mirrorable_blobs + mirrorable_blobs.where(created_at: (..7.days.ago)) end def secondary_blobs ",TIL! Assume this is shorthand for `Time.zone.now..7.days.ago`?,"I could keep here new_since as a column still existing and we will potentially get rid of that later. I wanted to already switch to use `created_at`. The reason is that after registration, the user should have an empty ""new"" tab. Only topics created after could be `new`","Minor but I prefer keeping this in the model proper, that way you get to reused the key calculation code that the model uses. I know it can sometimes feel a bit weird to have stuff like this in the model, so this is a bit of a bike shed. But overall this reduces code duplication which is a good thing.","Since this gets updated now, the memoization potentially causes issues. I don't think the performance hit should be significant.","Since this gets updated now, the memoization potentially causes issues. I don't think the performance hit should be significant.",Why is this change needed?,I hope Discourse lasts long enough that this becomes a bug!,Line is too long. [88/80],Why not `init(List.of(blob)` since this is master? Or do we need a mutable list?,"This line was causing the bugginess with sidebar tags on the Forem Fleet. To quote @mstruve: > That will often return nothing bc even though people post often, posting for a specific tag is much less common.","Since we are going to start using this `registered_at` column right away we need to make sure we update it to match, I would think, `created_at` for all existing users."
"@@ -423,6 +423,7 @@ ActiveRecord::Schema.define(version: 2020_04_08_213043) do t.boolean ""allow_prompt_login"", default: false t.boolean ""signed_response_message_requested"", default: false t.integer ""ial2_quota"" + t.boolean ""liveness_checking_enabled"" t.index [""issuer""], name: ""index_service_providers_on_issuer"", unique: true end ","One thought, just an idea, not a requirement, what if we called this `liveness_checking_required` ? or `requires_liveness_checking` so it's slightly different than the global feature flag we have? I feel like having separate names would make it easier to debug","One thought, just an idea, not a requirement, what if we called this `liveness_checking_required` ? or `requires_liveness_checking` so it's slightly different than the global feature flag we have? I feel like having separate names would make it easier to debug",can remove this file from the PR,"It's a bit of a nitpick, but this name is a mouthful. Also, what should the default be -- it changes the words... Thinking aloud, `skip` or `enforce` let's us avoid the doubling of `allow` and `deny`. Something like: * `skip_events_in_denylist` * `enforce_denylist_for_events`","With this change the old and new servers are not compatible which will cause issues. What we will need to do is add a new column, start writing to the new column, backfill the new column with data from the old column, stop writing to the old column, and then finally drop the old column.","With this change the old and new servers are not compatible which will cause issues. What we will need to do is add a new column, start writing to the new column, backfill the new column with data from the old column, stop writing to the old column, and then finally drop the old column.",Separate every 3 digits in the integer portion of a number with underscores(_).,Changes to the schema file? We may want to drop these.,Changes to the schema file? We may want to drop these.,Separate every 3 digits in the integer portion of a number with underscores(_).,Block has too many lines. [837/25]<br>Use underscores(_) as decimal mark and separate every 3 digits with them.
"@@ -96,9 +96,7 @@ class Jetpack_Modules_List_Table extends WP_List_Table { <# var i = 0; if ( data.items.length ) { _.each( data.items, function( item, key, list ) { - if ( item === undefined ) return; - if ( 'minileven' == item.module && ! item.activated ) return; - if ( 'manage' == item.module && item.activated ) return; #> + if ( item === undefined ) return; #> <tr class=""jetpack-module <# if ( ++i % 2 ) { #> alternate<# } #><# if ( item.activated ) { #> active<# } #><# if ( ! item.available ) { #> unavailable<# } #>"" id=""{{{ item.module }}}""> <th scope=""row"" class=""check-column""> <# if ( 'videopress' !== item.module ) { #> ",I took the opportunity to delete this reference to the Manage module.,"These exceptions are also exposed to the end user via the plugin admin page under the ""More info"" link.",do we need to keep it on the list of modules?,This shouldn't be here.,Why removing this line ?,let's remove those spaces,Isn't `tinyMceContent && [...]` redundant here?,Do we need to check that `slug` is set before we try to use it?,"If you're aiming to get this to happen on all upgrades, I think you'll want to move it outside of this conditional","Mixing || and && make the condition being difficult to understand and probably wrong. Old code in 2 part is easier to understand : We test first complex condition to set modulequalified = 0, then we test another one to make same result. We are sure here we do a or to set modulequalified to 0. With the new code, there is a or but it seems wrong because it is evaluated and then after the last && is evaluated making all test bugged.","`Jetpack_Options::get_option` prefixes the option passed with `jetpack_`. I think we should incorporate the logic of `Jetpack_Options::get_option_and_ensure_autoload` to `Jetpack_Options::get_option` and avoid having a third way of getting options, what do you think?"
"@@ -34,11 +34,7 @@ namespace Dnn.Modules.ResourceManager.Components search = (search ?? string.Empty).Trim(); - // Lucene does not support wildcards as the beginning of the search - // For file names we can remove any existing wildcard at the beginning - var cleanedKeywords = TrimStartWildCards(search); - - var files = FolderManager.Instance.SearchFiles(folder, cleanedKeywords, recursive); + var files = FolderManager.Instance.SearchFiles(folder, search, recursive); var sortProperties = SortProperties.Parse(sorting); var sortedFiles = SortFiles(files, sortProperties).ToList(); totalCount = sortedFiles.Count; ",Did something change with Lucene's support for wildcards? What's the behavior if you search with a wildcard at the beginning of your search?,"If this is something to be supported, this should NOT be done in this method. as it is not cleaning a wildcard and the intention would not be clear",">CultureInfo.GetUserDefaultLocaleName(); [](start = 52, length = 39) should we use the cached value s_userDefaultLocaleName instead? I think we shouldn't call the OS every time we create a culture.",Looks like this file can be reverted.,Can we use result of this function instead of manually parsing and checking validity?,Please put the `Trim` inside `FoldToASCII`,"Are there constants for these somewhere? If not in the library, could we perhaps make some for our own reference? Might make it easier if/when this ever gets changed again.",I say remove it. Old templates with new router - how far will we go?,What is the intent of this change? I forgot what `Substring(1)` was removing.,What is the intent of this change? I forgot what `Substring(1)` was removing.,"Just as a question; should this code be wrapped in #if DEBUG statements? Probably not necessary, but I am doing the same type of code and wanted to get the group thought about if it is needed/wanted or not."
"@@ -923,7 +923,7 @@ func (c *Container) cleanup() error { // Clean up network namespace, if present if err := c.cleanupNetwork(); err != nil { - lastError = nil + lastError = err } if err := c.cleanupCgroups(); err != nil { ","This had been non-fatal since #302, but I don't see any discussion there about why it was non-fatal then.",This should not be an else here. You wan to always set lastError=err.,"I don't think this is correct... Docker does not populate Networks when only the default is in use, last I checked? And, AFAIK, the original request was not about Networks, it was about populating the `Bridge` field in `InspectNetworkSettings`?",It seems strange to log when we ignore the error and ignore the error here.,"You changed the behaviour. Now we do not cleanup storage if the cgroup cleanup fails. Why did you make this change? It might be better to go back to the original code. SInce I am not totally sure if this ignore is necessary since we removed cleanup from stop. I did not have time to check it out. You could test the theory by running a container in foreground and -d daemon mode, then stop both, if this log message does not show up, then we should go back to failing on error. But either way it should not be in the PR,","You need this code correct? if lastError != nil { fmt.Fprintln(os.Stderr, lastError) }",nit: Still can be on single line.,This is not needed or desired. The cleanup process should take care of it.,"Going to throw out the question as I'm not sure. Would it be better to not return an error for each of these attempts? I.e. If one fails, note it, then try removing the next file, if that fails note it, then try next? Then at the end report all of the errors encountered? Otherwise, if there are multiple things wrong, will the user be able to clean up/investigate fully?","Need to also clear a few things in the DB after this - c.state.NetNS, c.state.IPAddress, c.state.SubnetMask. And probably need to do a c.save() afterwards to get that into the DB.",No reader during running? Writer may block.
"@@ -18,6 +18,7 @@ use Automattic\Jetpack\Terms_Of_Service; use Automattic\Jetpack\Tracking; use Automattic\Jetpack\Plugin\Tracking as Plugin_Tracking; use Automattic\Jetpack\Redirect; +use Automattic\Jetpack\Jetpack_User_Agent_Info; /* Options: ","I think the `Jetpack_User_Agent_Info` should become part of the `jetpack-devices` package, and could more be renamed `Automattic\Jetpack\Device\User_Agent_Info`",Ignore changes to this file - it was changed in #10714 and will be rebased away.,Ignore changes to this file - it was changed in #10714 and will be rebased away.,Can we just show the `/u/oconnor663` tidbit for reddit?,@afercia I'm guessing this should not have been committed?,These changes seem unnecessary and overly risky -- these are all internal methods that still work correctly regardless of API Key or Token distinction,Let's make this an enum with proper typing,"would be nice to adjust the existing places where this is hardcoded at the moment (`SecurityAdmin`, `UserController`, ...)",Perhaps this should only be included if `function_exists( 'is_amp_endpoint' )`? Then it wouldn't sync if AMP is not active.,"Fails for cross platform. I guess the `AutoSystemInfoInitializer` is process wide. Instead of dealing with counter, can we use the same static initialization approach (which is also thread safe) ? - Is there a reason why don't we host this under PAL ? - Why we do limit this only for static library?",why does flake8 put these giant spaces between sentences?
